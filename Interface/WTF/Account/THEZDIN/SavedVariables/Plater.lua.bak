
PlaterDB = {
	["captured_spells"] = {
		[384510] = {
			["source"] = "Nokhud Lancemaster",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192800,
		},
		[320763] = {
			["source"] = "Mana Tide Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10467,
		},
		[385916] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186616,
		},
		[396775] = {
			["source"] = "Failed Scalecommander Abereth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201823,
		},
		[385023] = {
			["source"] = "Salty Salamander",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 188027,
		},
		[404442] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200584,
		},
		[387452] = {
			["source"] = "Arcane Revenant",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200720,
		},
		[387708] = {
			["source"] = "Ishyra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200579,
		},
		[330604] = {
			["source"] = "Vault Weaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200375,
		},
		[160065] = {
			["source"] = "Vuk'laz the Earthbreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[386176] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 58965,
		},
		[271329] = {
			["source"] = "Pathfinder Tacha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200263,
		},
		[376723] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 190294,
		},
		[399335] = {
			["type"] = "DEBUFF",
			["source"] = "Tarasek Frostclaw",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201035,
		},
		[378768] = {
			["source"] = "Skittering Ruinstalker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199238,
		},
		[399336] = {
			["type"] = "BUFF",
			["source"] = "Tarasek Frostclaw",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201035,
		},
		[384134] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192791,
		},
		[403169] = {
			["source"] = "Ishyra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200579,
		},
		[193473] = {
			["source"] = "Void Tendril",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192337,
		},
		[389245] = {
			["source"] = "Sundered Ruinstalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199379,
		},
		[321538] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Costello",
			["npcID"] = 165189,
		},
		[400999] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200681,
		},
		[376727] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[115804] = {
			["source"] = "Vincent",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[381582] = {
			["source"] = "Spellsworn Wingcatcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201369,
		},
		[63619] = {
			["encounterName"] = "Granyth",
			["source"] = "Shadowfiend",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19668,
		},
		[373279] = {
			["source"] = "Thing From Beyond",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 189988,
		},
		[282449] = {
			["source"] = "Akaari's Soul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 144961,
		},
		[386694] = {
			["source"] = "Stormsurge Totem",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194897,
		},
		[188046] = {
			["source"] = "Denizen of the Dream",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198489,
		},
		[49966] = {
			["source"] = "Scalehide",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[371238] = {
			["type"] = "BUFF",
			["source"] = "Scythid Steamstalker",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199847,
		},
		[345561] = {
			["source"] = "Maruuk",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186338,
		},
		[403943] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200904,
		},
		[30213] = {
			["source"] = "Felguard",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[388231] = {
			["type"] = "BUFF",
			["source"] = "Tuskarr Training Dummy",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 196394,
		},
		[387465] = {
			["source"] = "Arcane Revenant",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200720,
		},
		[372263] = {
			["source"] = "Chef Morsel",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 189481,
		},
		[394875] = {
			["encounterName"] = "The Raging Tempest",
			["type"] = "DEBUFF",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186615,
		},
		[350163] = {
			["source"] = "Spiteful Shade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 174773,
		},
		[382101] = {
			["source"] = "Spellsworn Warder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203737,
		},
		[265721] = {
			["source"] = "Terrorachna",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200349,
		},
		[378397] = {
			["source"] = "Amephyst",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200743,
		},
		[382102] = {
			["source"] = "Spellsworn Wingcatcher",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201369,
		},
		[376865] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[396411] = {
			["source"] = "Raszageth",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199388,
		},
		[386319] = {
			["source"] = "Primal Gust",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 195579,
		},
		[386320] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194367,
		},
		[118905] = {
			["source"] = "Capacitor Totem",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 61245,
		},
		[382233] = {
			["source"] = "Batak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193462,
		},
		[392198] = {
			["encounterName"] = "Teera and Maruuk",
			["type"] = "BUFF",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186338,
		},
		[393859] = {
			["source"] = "Scalecrawler Beetle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198791,
		},
		[394754] = {
			["source"] = "Lindormi",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 197915,
		},
		[393861] = {
			["source"] = "Scalecrawler Beetle",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 198791,
		},
		[404209] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200904,
		},
		[57984] = {
			["source"] = "Greater Fire Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 95061,
		},
		[382749] = {
			["source"] = "Mature Hornswog",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 191619,
		},
		[372147] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193457,
		},
		[370998] = {
			["source"] = "Distressed Marmoni",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 184861,
		},
		[398720] = {
			["source"] = "Irontide Bulwark",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200850,
		},
		[157331] = {
			["source"] = "Primal Storm Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 77942,
		},
		[403959] = {
			["type"] = "DEBUFF",
			["source"] = "Veltrax",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200904,
		},
		[371383] = {
			["source"] = "Farscale Siren",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200483,
		},
		[19483] = {
			["type"] = "BUFF",
			["source"] = "Infernal",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 89,
		},
		[399744] = {
			["source"] = "Spellsworn Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200598,
		},
		[387608] = {
			["source"] = "Ukhel Corruptor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195842,
		},
		[389269] = {
			["source"] = "Expedition Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187123,
		},
		[405366] = {
			["source"] = "Lady Shaz'ra",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200885,
		},
		[389270] = {
			["source"] = "Expedition Guarantor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 187061,
		},
		[399746] = {
			["source"] = "Warp Crystal",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201082,
		},
		[2649] = {
			["source"] = "Vuk'laz the Earthbreaker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[382628] = {
			["encounterName"] = "The Raging Tempest",
			["type"] = "DEBUFF",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186615,
		},
		[112042] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 58960,
		},
		[387613] = {
			["source"] = "Ukhel Corruptor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195842,
		},
		[375988] = {
			["source"] = "Amberfur Slyvern",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199785,
		},
		[375605] = {
			["source"] = "Arcane Behemoth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203434,
		},
		[387614] = {
			["source"] = "Ukhel Deathspeaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195851,
		},
		[391958] = {
			["source"] = "Sundered Pillager",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199374,
		},
		[387487] = {
			["source"] = "Arcane Portal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196051,
		},
		[396430] = {
			["source"] = "Arcane Behemoth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203434,
		},
		[403201] = {
			["source"] = "Ishyra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200579,
		},
		[381357] = {
			["source"] = "Saltwhisker Ottuk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199784,
		},
		[377908] = {
			["source"] = "Skittering Ruinstalker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199238,
		},
		[384808] = {
			["encounterName"] = "Teera and Maruuk",
			["type"] = "BUFF",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186339,
		},
		[24450] = {
			["type"] = "BUFF",
			["source"] = "Purrfect",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[388897] = {
			["source"] = "Scavenging Pincher",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200949,
		},
		[376634] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[395669] = {
			["source"] = "Maruuk",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186338,
		},
		[1604] = {
			["source"] = "Nokhud Warmonger",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200945,
		},
		[3716] = {
			["source"] = "Cozros",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 58960,
		},
		[400908] = {
			["type"] = "DEBUFF",
			["source"] = "Suffocating Menace",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201644,
		},
		[284401] = {
			["source"] = "Diviner Taz'to",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 150739,
		},
		[389029] = {
			["source"] = "Gravelord Monkh",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 195933,
		},
		[392734] = {
			["source"] = "Sundered Pillager",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199374,
		},
		[384686] = {
			["encounterName"] = "The Raging Tempest",
			["type"] = "BUFF",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186615,
		},
		[400144] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200584,
		},
		[377277] = {
			["source"] = "Volethi",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200727,
		},
		[376894] = {
			["encounterName"] = "Balakar Khan",
			["type"] = "DEBUFF",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186151,
		},
		[395035] = {
			["source"] = "Soulharvester Galtmaa",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195927,
		},
		[378428] = {
			["source"] = "Primal Boulder",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200547,
		},
		[334610] = {
			["source"] = "War Ohuna",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192803,
		},
		[90328] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[386223] = {
			["source"] = "Primal Stormshield",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194896,
		},
		[387501] = {
			["source"] = "Arcane Revenant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200720,
		},
		[387629] = {
			["source"] = "Desecrated Ohuna",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195876,
		},
		[386991] = {
			["source"] = "Primal Proto-Drake",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193806,
		},
		[376644] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[90361] = {
			["source"] = "Hati",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[406283] = {
			["source"] = "Ruinous Flames",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 202424,
		},
		[386227] = {
			["source"] = "Primal Stormshield",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194896,
		},
		[382267] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193457,
		},
		[134477] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 58965,
		},
		[370259] = {
			["source"] = "Failed Scalecommander Haerothal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201822,
		},
		[384185] = {
			["encounterName"] = "The Raging Tempest",
			["type"] = "DEBUFF",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186615,
		},
		[405137] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200885,
		},
		[260249] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Screech",
			["npcID"] = 165189,
		},
		[384316] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186615,
		},
		[387127] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195696,
		},
		[385339] = {
			["encounterName"] = "Teera and Maruuk",
			["type"] = "BUFF",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186338,
		},
		[372310] = {
			["source"] = "Ice Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201034,
		},
		[157348] = {
			["type"] = "BUFF",
			["source"] = "Primal Storm Elemental",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 77942,
		},
		[386747] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194367,
		},
		[381765] = {
			["source"] = "Ice Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201034,
		},
		[263852] = {
			["source"] = "VANE",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[387131] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194367,
		},
		[386748] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194367,
		},
		[382277] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 193457,
		},
		[387132] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194367,
		},
		[387133] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194367,
		},
		[398631] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200852,
		},
		[192226] = {
			["type"] = "BUFF",
			["source"] = "Liquid Magma Totem",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 97369,
		},
		[398632] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200852,
		},
		[387135] = {
			["source"] = "Primalist Arcblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194898,
		},
		[378832] = {
			["source"] = "Spellsworn Crechebound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201083,
		},
		[398634] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200852,
		},
		[392375] = {
			["source"] = "Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 29264,
		},
		[167381] = {
			["source"] = "Dungeoneer's Training Dummy",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194644,
		},
		[381519] = {
			["source"] = "Tarasek Scavenger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200460,
		},
		[388801] = {
			["source"] = "Risen Warrior",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195855,
		},
		[378454] = {
			["source"] = "Primal Boulder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200547,
		},
		[382670] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186339,
		},
		[383693] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192794,
		},
		[405283] = {
			["source"] = "Lady Shaz'ra",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200885,
		},
		[394680] = {
			["source"] = "Scalecommander Emberthal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199944,
		},
		[391870] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mature Basilisk",
			["npcID"] = 191696,
		},
		[263865] = {
			["type"] = "BUFF",
			["source"] = "Scalehide",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[400941] = {
			["source"] = "Blazing Bones",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203472,
		},
		[399025] = {
			["source"] = "Arcane Revenant",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200720,
		},
		[383823] = {
			["source"] = "Nokhud Hornsounder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192796,
		},
		[396854] = {
			["source"] = "Spellsworn Keeper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200284,
		},
		[263867] = {
			["type"] = "BUFF",
			["source"] = "Drooly",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[167385] = {
			["source"] = "Dungeoneer's Training Dummy",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194644,
		},
		[403371] = {
			["source"] = "Expulsion Drone",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 202592,
		},
		[405416] = {
			["source"] = "Lady Shaz'ra",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200885,
		},
		[383061] = {
			["source"] = "Liquid Magma Totem",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 97369,
		},
		[405929] = {
			["source"] = "Spellsworn Crecheguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203368,
		},
		[386639] = {
			["source"] = "Cleansing Totem",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 195778,
		},
		[404396] = {
			["type"] = "DEBUFF",
			["source"] = "Pyrachniss",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200978,
		},
		[159786] = {
			["type"] = "BUFF",
			["source"] = "Unknown",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[91800] = {
			["type"] = "DEBUFF",
			["source"] = "Plaguecruncher",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[386700] = {
			["source"] = "Primalist Hailcrasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201036,
		},
		[340414] = {
			["source"] = "Forgotten Research",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 202446,
		},
		[400714] = {
			["type"] = "DEBUFF",
			["source"] = "Nidharr",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201310,
		},
		[396861] = {
			["source"] = "Arcane Behemoth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203434,
		},
		[399033] = {
			["source"] = "Weyrn Spellslinger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200736,
		},
		[125056] = {
			["source"] = "VANE",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[259277] = {
			["type"] = "DEBUFF",
			["source"] = "Scalehide",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[377029] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Primal Scythid Queen",
			["npcID"] = 184853,
		},
		[108446] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 417,
		},
		[400695] = {
			["source"] = "Morqut Glider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201031,
		},
		[328772] = {
			["source"] = "Vault Weaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200375,
		},
		[402888] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200681,
		},
		[402890] = {
			["type"] = "BUFF",
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200681,
		},
		[406272] = {
			["type"] = "DEBUFF",
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200681,
		},
		[328773] = {
			["source"] = "Vault Weaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200375,
		},
		[201754] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Costello",
			["npcID"] = 165189,
		},
		[400441] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200681,
		},
		[387411] = {
			["source"] = "Soulharvester Galtmaa",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195927,
		},
		[405228] = {
			["source"] = "Duzalgor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200610,
		},
		[374892] = {
			["source"] = "Sundered Ruinstalker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199379,
		},
		[388817] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186616,
		},
		[406188] = {
			["type"] = "DEBUFF",
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200681,
		},
		[405117] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200885,
		},
		[55078] = {
			["type"] = "DEBUFF",
			["source"] = "Rune Weapon",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 27893,
		},
		[400896] = {
			["type"] = "DEBUFF",
			["source"] = "Rampant Tide",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201463,
		},
		[399677] = {
			["source"] = "Morqut Glider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201031,
		},
		[405143] = {
			["type"] = "BUFF",
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200885,
		},
		[399933] = {
			["source"] = "Tukkaraq's Boat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201121,
		},
		[405331] = {
			["type"] = "BUFF",
			["source"] = "Crabby Totem",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203211,
		},
		[376683] = {
			["encounterName"] = "Balakar Khan",
			["type"] = "BUFF",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186151,
		},
		[384476] = {
			["source"] = "Nokhud Longbow",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 192789,
		},
		[400445] = {
			["type"] = "BUFF",
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200681,
		},
		[317791] = {
			["source"] = "Magus of the Dead",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 163366,
		},
		[405415] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200885,
		},
		[402873] = {
			["source"] = "Cataloger Daela",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200566,
		},
		[400957] = {
			["source"] = "Magma Wave",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201662,
		},
		[317792] = {
			["source"] = "Magus of the Dead",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 163366,
		},
		[370042] = {
			["source"] = "Blazing Archflame",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203436,
		},
		[402874] = {
			["source"] = "Turik",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200562,
		},
		[375919] = {
			["source"] = "Primal Scythid",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 191104,
		},
		[393421] = {
			["encounterName"] = "Balakar Khan",
			["type"] = "DEBUFF",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186151,
		},
		[5672] = {
			["type"] = "BUFF",
			["source"] = "Healing Stream Totem",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 3527,
		},
		[386012] = {
			["source"] = "Stormcaller Boroo",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194317,
		},
		[400335] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200584,
		},
		[389541] = {
			["source"] = "White Tiger Statue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 196581,
		},
		[404178] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200904,
		},
		[402876] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kraxxus",
			["npcID"] = 200563,
		},
		[17735] = {
			["source"] = "Sargak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1860,
		},
		[406198] = {
			["type"] = "DEBUFF",
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200681,
		},
		[260651] = {
			["source"] = "Karkinus the Capsizer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200907,
		},
		[328782] = {
			["source"] = "Vault Lurker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199126,
		},
		[199373] = {
			["source"] = "Army of the Dead",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 24207,
		},
		[391380] = {
			["source"] = "Raging Windlord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200390,
		},
		[403794] = {
			["source"] = "Duzalgor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200610,
		},
		[386015] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194894,
		},
		[59638] = {
			["source"] = "Mirror Image",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 31216,
		},
		[383981] = {
			["source"] = "Rising Tempest",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194575,
		},
		[54049] = {
			["source"] = "Zhaadhon",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 417,
		},
		[54680] = {
			["source"] = "Rex",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[399941] = {
			["source"] = "Tukkaraq's Boat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201121,
		},
		[17253] = {
			["source"] = "TickToc",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[171982] = {
			["type"] = "BUFF",
			["source"] = "Unknown",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 58960,
		},
		[399065] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200858,
		},
		[399942] = {
			["source"] = "Tukkaraq's Boat",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201121,
		},
		[193635] = {
			["source"] = "Void Tendril",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192337,
		},
		[384868] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192789,
		},
		[386063] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186338,
		},
		[390193] = {
			["source"] = "Wild Imp",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 143622,
		},
		[16827] = {
			["source"] = "Vuk'laz the Earthbreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 165189,
		},
		[386914] = {
			["source"] = "The Raging Tempest",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186615,
		},
		[392151] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186339,
		},
		[405362] = {
			["source"] = "Lady Shaz'ra",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200885,
		},
		[387297] = {
			["source"] = "Scalecommander Emberthal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199944,
		},
		[371584] = {
			["source"] = "Irontide Brinecaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200853,
		},
		[384336] = {
			["source"] = "Nokhud Plainstomper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 191847,
		},
		[381535] = {
			["source"] = "Earth Elemental",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203930,
		},
		[377589] = {
			["type"] = "BUFF",
			["source"] = "Plaguecruncher",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 26125,
		},
		[386915] = {
			["source"] = "The Raging Tempest",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186615,
		},
		[263892] = {
			["source"] = "Cheetahdormu",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[396369] = {
			["source"] = "Raszageth",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199388,
		},
		[391898] = {
			["source"] = "Failed Scalecommander Haerothal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201822,
		},
		[387427] = {
			["source"] = "Arcane Revenant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200720,
		},
		[386022] = {
			["source"] = "Primalist Stormspeaker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194894,
		},
		[396370] = {
			["source"] = "Tarasek Frostclaw",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201035,
		},
		[271310] = {
			["source"] = "Pathfinder Tacha",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200263,
		},
		[388450] = {
			["source"] = "Nokhud Stormcaller",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 196484,
		},
		[283499] = {
			["source"] = "Qyrix the Hatchet",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 150743,
		},
		[387145] = {
			["source"] = "Stormcaller Boroo",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194317,
		},
		[381592] = {
			["source"] = "Spellsworn Keeper",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200284,
		},
		[35079] = {
			["source"] = "Hati",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[386024] = {
			["source"] = "Primalist Stormspeaker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194894,
		},
		[122719] = {
			["source"] = "Pathfinder Jeb",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200265,
		},
		[369417] = {
			["source"] = "Nesting Creche Crawler",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 201623,
		},
		[385386] = {
			["source"] = "Menial Attendant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 203946,
		},
		[384492] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192794,
		},
		[384620] = {
			["encounterName"] = "The Raging Tempest",
			["type"] = "BUFF",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186615,
		},
		[382704] = {
			["source"] = "Spellsworn Mender",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203736,
		},
		[399666] = {
			["source"] = "Spellsworn Construct",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200598,
		},
		[386026] = {
			["source"] = "Unstable Squall",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194895,
		},
		[375929] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[381683] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192791,
		},
		[386921] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 194367,
		},
		[376829] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[68054] = {
			["source"] = "Jeeves",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 35642,
		},
		[261616] = {
			["source"] = "Katy Stampwhistle",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 132969,
		},
		[386411] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186339,
		},
		[386028] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195696,
		},
		[376725] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 190294,
		},
		[387596] = {
			["source"] = "Risen Mystic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195877,
		},
		[6713] = {
			["source"] = "Spellsworn Crecheguard",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203368,
		},
		[392672] = {
			["source"] = "Failed Scalecommander Elarthresh",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201820,
		},
		[375937] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[393439] = {
			["source"] = "Sundered Ruinstalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199379,
		},
		[382836] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186338,
		},
		[392381] = {
			["source"] = "Fledgling Thunder Lizard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198815,
		},
		[400466] = {
			["source"] = "Morqut Glider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201031,
		},
		[399061] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200858,
		},
		[384881] = {
			["source"] = "Stormsurge Totem",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194897,
		},
		[376827] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[61684] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 165189,
		},
		[399062] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200858,
		},
		[376706] = {
			["source"] = "Nokhud Stormcaster",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 190294,
		},
		[387155] = {
			["encounterName"] = "Granyth",
			["type"] = "DEBUFF",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186616,
		},
		[385434] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186339,
		},
		[394975] = {
			["source"] = "Void Lasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198757,
		},
		[385905] = {
			["type"] = "DEBUFF",
			["source"] = "Menial Attendant",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 203946,
		},
		[376892] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[390599] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Child of Ohn'ahra",
			["npcID"] = 191869,
		},
		[394976] = {
			["source"] = "Void Lasher",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 198757,
		},
		[376708] = {
			["source"] = "Ohn'ahra",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 187895,
		},
		[402875] = {
			["source"] = "Storykeeper Ashekh",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200564,
		},
		[375296] = {
			["source"] = "Spellsworn Wingcatcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 201369,
		},
		[388334] = {
			["source"] = "Scalecommander Emberthal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199944,
		},
		[387440] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195878,
		},
		[386025] = {
			["source"] = "Primalist Stormspeaker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194894,
		},
		[375943] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
		[381692] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192791,
		},
		[376705] = {
			["source"] = "Nokhud Stormcaster",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 190294,
		},
		[386547] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186339,
		},
		[386916] = {
			["encounterName"] = "The Raging Tempest",
			["type"] = "DEBUFF",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186615,
		},
		[399721] = {
			["source"] = "Spellsworn Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200598,
		},
		[224126] = {
			["source"] = "Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[383975] = {
			["source"] = "Raging Windlord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200390,
		},
		[24423] = {
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Screech",
			["npcID"] = 165189,
		},
		[387826] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 195878,
		},
		[399063] = {
			["source"] = "Irontide Crusher",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200858,
		},
		[402901] = {
			["type"] = "DEBUFF",
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200681,
		},
		[400474] = {
			["source"] = "Stormsurge Totem",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 194897,
		},
		[407378] = {
			["source"] = "Raging Windlord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200390,
		},
		[224127] = {
			["source"] = "Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[260654] = {
			["source"] = "Karkinus the Capsizer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200907,
		},
		[373392] = {
			["source"] = "Nokhud Hornsounder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 192796,
		},
		[377608] = {
			["source"] = "Frozen Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199592,
		},
		[328781] = {
			["source"] = "Vault Lurker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199126,
		},
		[224125] = {
			["source"] = "Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 100820,
		},
		[390256] = {
			["source"] = "Sundered Pillager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 199374,
		},
		[12024] = {
			["source"] = "Expedition Guardian",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 187123,
		},
		[369050] = {
			["source"] = "Tarasek Stormcaller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200461,
		},
		[398719] = {
			["source"] = "Irontide Bulwark",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 200850,
		},
		[381570] = {
			["source"] = "Unleashed Earth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 200777,
		},
		[376724] = {
			["encounterName"] = "Balakar Khan",
			["type"] = "BUFF",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 186151,
		},
		[290539] = {
			["source"] = "Loqh'wa the Vengeful",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 150723,
		},
		[396364] = {
			["source"] = "Raszageth",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 199388,
		},
		[375201] = {
			["source"] = "Wild Ohuna",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 198819,
		},
		[376864] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 186151,
		},
	},
	["profiles"] = {
		["Default"] = {
			["use_ui_parent"] = true,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Cast - Glowing [P]"] = 10,
				["Cast - Important Target [P]"] = 2,
				["Cast - Quick Flash"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Fixate On You"] = 11,
				["Cast - Very Important"] = 15,
				["Spiteful Affix"] = 3,
				["Explosion Affix M+"] = 14,
				["Add - Non Elite Trash [P]"] = 4,
				["Cast - Shield Interrupt"] = 2,
				["Add - Explode on Die [P]"] = 1,
				["Cast - On Going Cast [P]"] = 2,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Fixate"] = 11,
				["Countdown"] = 11,
				["Cast - Stop Casting"] = 4,
				["Auto Set Skull"] = 11,
				["Unit - Show Energy"] = 11,
			},
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						398151, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Key"] = "rotationDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Key"] = "animStartDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Name"] = "Texture Start Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "textureScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "textureAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Cast - Circle AoE [P]",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["version"] = -1,
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Name"] = "Vertical Line Alpha",
							["Value"] = 0.79,
							["Key"] = "indicatorAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Fill Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						350554, -- [16]
						348513, -- [17]
						351779, -- [18]
						328180, -- [19]
						319898, -- [20]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["version"] = -1,
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Key"] = "nameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "skullAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["version"] = -1,
					["Name"] = "Add - Important [P]",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Name"] = "Timeleft to Blink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeleftToBlink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Blink Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkSpeed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "blinkMaxAlpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftWarning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "timeLeftCritical",
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["NpcNames"] = {
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						386781, -- [2]
						384823, -- [3]
						385536, -- [4]
						392398, -- [5]
						375596, -- [6]
						387135, -- [7]
						360850, -- [8]
						212784, -- [9]
						199033, -- [10]
						199034, -- [11]
						200969, -- [12]
						394512, -- [13]
						397881, -- [14]
						396020, -- [15]
						374430, -- [16]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Key"] = "targetNameSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Key"] = "targetFrameWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Height",
						}, -- [35]
					},
					["version"] = -1,
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Quick Flash [P]",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura is Shield [P]",
					["NpcNames"] = {
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Warning [P]",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						350421, -- [28]
						352158, -- [29]
						349985, -- [30]
						329239, -- [31]
						328400, -- [32]
						384194, -- [33]
						392451, -- [34]
						392924, -- [35]
						397889, -- [36]
						209413, -- [37]
						207980, -- [38]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["version"] = -1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Auto Set Skull",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["version"] = -1,
					["Name"] = "Unit - Show Energy [Plater]",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Nameplate Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "scale",
						}, -- [5]
					},
					["version"] = -1,
					["Name"] = "Add - Non Elite Trash [P]",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["version"] = -1,
					["Name"] = "M+ Spiteful",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["version"] = -1,
					["Name"] = "Fixate by Unit Buff [P]",
					["NpcNames"] = {
					},
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						352833, -- [35]
						330403, -- [36]
						209495, -- [37]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.73,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Animation Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["version"] = -1,
					["Name"] = "Add - Explode on Die [P]",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
						"165560", -- [1]
					},
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Countdown",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [30]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Fixate On You [Plater]",
					["NpcNames"] = {
					},
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura While Casting [P]",
					["NpcNames"] = {
					},
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - On Going Cast [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Dots Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Key"] = "speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Key"] = "minAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
				}, -- [33]
			},
			["aura2_x_offset"] = 0,
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1547392935,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Name"] = "Color Automation [Plater]",
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1541606242,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Reorder Nameplate [Plater]",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 574574,
					["Options"] = {
					},
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["version"] = -1,
					["Time"] = 1554138845,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Tecno-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1552354619,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["Name"] = "Current Target Color [Plater]",
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Name"] = "Cast Bar Icon Settings [P]",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["version"] = -1,
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Key"] = "iconSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size Offset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconPadding",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Key"] = "textureWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureHeightMod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "texturePosition",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Position",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [16]
					},
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Ahwa-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["version"] = -1,
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["Name"] = "Execute Range [Plater]",
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Attacking Specific Unit [Plater]",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["version"] = -1,
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Combo Points [Plater]",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["version"] = -1,
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 135426,
					["Options"] = {
					},
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["version"] = -1,
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["LastHookEdited"] = "",
					["HooksTemp"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Name"] = "Aura Reorder [Plater]",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Options"] = {
					},
				}, -- [12]
			},
			["aura_x_offset"] = 0,
			["saved_cvars_last_change"] = {
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:2198",
			},
			["resources_settings"] = {
				["chr"] = {
					["Player-3661-091C86DC"] = "ComboPoints",
					["Player-3661-091C7713"] = "Runes",
					["Player-3661-0932F8C9"] = "ArcaneCharges",
					["Player-3661-091D3EB8"] = "HolyPower",
					["Player-3661-0926A5B4"] = "Essence",
					["Player-3661-09289FA2"] = "SoulShards",
					["Player-3661-0933AFEC"] = "ComboPoints",
					["Player-77-052C5769"] = "Runes",
					["Player-3661-0913DAD6"] = "Chi",
					["Player-3661-091E66BD"] = "ComboPoints",
				},
			},
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1,
				},
			},
			["ui_parent_scale_tune"] = 1.562500034924597,
			["number_region_first_run"] = true,
			["patch_version"] = 25,
			["saved_cvars"] = {
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateSelectedAlpha"] = "1",
			},
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["aura2_y_offset"] = 5,
			["login_counter"] = 36,
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["__TrashAt"] = 1671601078,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Key"] = "timerList",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671311518,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 511,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1674283744,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Glowing [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670202019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 468,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["__TrashAt"] = 1674283744,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["Name"] = "Cast - Stop Casting [P]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Name"] = "Amount of Segments",
							["Value"] = 5,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 798,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1675544741,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
					["Name"] = "Cast - Very Important [Plater]",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
					},
					["NpcNames"] = {
					},
				}, -- [4]
			},
			["first_run3"] = true,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["plate_config"] = {
				["global_health_width"] = 112,
				["global_health_height"] = 12,
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Extra Border"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Aura Reorder"] = 3,
				["Hide Neutral Units"] = 1,
				["Attacking Specific Unit"] = 2,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Combo Points"] = 6,
			},
			["aura_y_offset"] = 5,
		},
		["Thezdin"] = {
			["ui_parent_buff_special_level"] = 10,
			["extra_icon_use_blizzard_border_color"] = false,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = false,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.6,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Time"] = 1616541624,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Revision"] = 113,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Enabled"] = true,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
					["Name"] = "Aura - Invalidate Unit [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
						261265, -- [1]
						261266, -- [2]
						271590, -- [3]
					},
					["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1672853745,
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["url"] = "",
					["NpcNames"] = {
					},
					["semver"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["Revision"] = 633,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["Name"] = "Aura - Buff Alert [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["SpellIds"] = {
						398151, -- [1]
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["Enabled"] = false,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = false,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
						273577, -- [6]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Name"] = "Arrow Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Name"] = "Arrow Height",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowHeight",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 4,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1672853744,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["NpcNames"] = {
					},
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["Revision"] = 370,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["semver"] = "",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["Author"] = "Tercioo-Sylvanas",
					["version"] = -1,
					["Desc"] = "Add the debuff name in the trigger box.",
					["SpellIds"] = {
					},
					["Prio"] = 99,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["url"] = "",
					["Enabled"] = false,
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1670202265,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = false,
					["Revision"] = 620,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						375943, -- [1]
						385958, -- [2]
						388623, -- [3]
						377034, -- [4]
						374361, -- [5]
						381525, -- [6]
						386660, -- [7]
						385578, -- [8]
						384699, -- [9]
						153501, -- [10]
						153686, -- [11]
						154442, -- [12]
						192018, -- [13]
						219488, -- [14]
						372087, -- [15]
						391726, -- [16]
						391723, -- [17]
						377383, -- [18]
						388976, -- [19]
						370764, -- [20]
						387067, -- [21]
						391118, -- [22]
						391136, -- [23]
						382233, -- [24]
						209027, -- [25]
						212031, -- [26]
						207261, -- [27]
						207979, -- [28]
						198888, -- [29]
						199805, -- [30]
						199050, -- [31]
						191508, -- [32]
						152792, -- [33]
						153395, -- [34]
						209495, -- [35]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Frontal Cone [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Name"] = "Arrow Alpha",
							["Value"] = 0.73,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowAlpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Name"] = "Animation Speed",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animSpeed",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Use White Arrow",
							["Value"] = false,
							["Key"] = "desaturateArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1616247688,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["Icon"] = 1029718,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 272,
					["Options"] = {
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Name"] = "Fixate [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["semver"] = "",
					["url"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
						["castBarHeight"] = 0,
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						384194, -- [28]
						392451, -- [29]
						392924, -- [30]
						397889, -- [31]
						209413, -- [32]
						207980, -- [33]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 12, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", 10, 22);\nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Time"] = 1655617946,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 12, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", 10, 22);\nend\n\n\n",
					["Icon"] = 136048,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Revision"] = 108,
					["Options"] = {
					},
					["Enabled"] = false,
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
					["Prio"] = 99,
					["Name"] = "UnitPower [Plater]",
					["PlaterCore"] = 1,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["NpcNames"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1616541626,
					["url"] = "",
					["Icon"] = 841383,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["Revision"] = 300,
					["semver"] = "",
					["Enabled"] = true,
					["Temp_ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["Author"] = "Tecno-Azralon",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["Name"] = "Fixate On You [Plater]",
					["Prio"] = 99,
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["version"] = -1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Options"] = {
					},
					["NpcNames"] = {
						"Carrion Worm", -- [1]
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    --layout\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \n    if (timeLeft < envTable.TimeLeftToBlink) then\n        Plater.SetNameplateColor (unitFrame, \"red\")\n    else\n        Plater.SetNameplateColor (unitFrame, \"white\")\n    end\n    \n    \n    \nend",
					["Time"] = 1616294344,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = true --set to 'false' to disable blinks\n        envTable.GlowEnabled = true --set to 'false' to disable glows\n        envTable.ChangeNameplateColor = true; --set to 'true' to enable nameplate color change\n        envTable.TimeLeftToBlink = 4.5; --in seconds, affects the blink effect only\n        envTable.BlinkSpeed = 1.0; --time to complete a blink loop\n        envTable.BlinkColor = \"white\"; --color of the blink\n        envTable.BlinkMaxAlpha = 0.50; --max transparency in the animation loop (1.0 is full opaque)\n        envTable.NameplateColor = \"darkred\"; --nameplate color if ChangeNameplateColor is true\n        \n        --text color\n        envTable.TimerColorEnabled = true --set to 'false' to disable changes in the color of the time left text\n        envTable.TimeLeftWarning = 8.0; --in seconds, affects the color of the text\n        envTable.TimeLeftCritical = 3.0; --in seconds, affects the color of the text    \n        envTable.TextColor_Warning = \"yellow\"; --color when the time left entered in a warning zone\n        envTable.TextColor_Critical = \"red\"; --color when the time left is critical\n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    --layout\n    do\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        \n        envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["Icon"] = 2000853,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["Revision"] = 135,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["Enabled"] = false,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \n    if (timeLeft < envTable.TimeLeftToBlink) then\n        Plater.SetNameplateColor (unitFrame, \"red\")\n    else\n        Plater.SetNameplateColor (unitFrame, \"white\")\n    end\n    \n    \n    \nend",
					["Name"] = "Blink by Time Left [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Time"] = 1672853733,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
					["Icon"] = 135024,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
					["Revision"] = 82,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
					["Enabled"] = false,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
					["Name"] = "Color Change [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
					["NpcNames"] = {
						"141851", -- [1]
					},
				}, -- [12]
				{
					["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Time"] = 1672853748,
					["Temp_ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
					["Icon"] = 133006,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
					["Revision"] = 56,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
					["Enabled"] = false,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
					["Name"] = "Aura - Border Color [Plater]",
					["PlaterCore"] = 1,
					["Prio"] = 99,
					["SpellIds"] = {
					},
					["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["OptionsValues"] = {
						["timeleftToBlink"] = 4,
						["blinkSpeed"] = 1,
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						228287, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Key"] = "timeleftToBlink",
							["Value"] = 3,
							["Name"] = "Timeleft to Blink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Key"] = "blinkSpeed",
							["Value"] = 1,
							["Name"] = "Blink Speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Key"] = "blinkMaxAlpha",
							["Value"] = 0.6,
							["Name"] = "Blink Max Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Key"] = "timeLeftWarning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Warning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Key"] = "timeLeftCritical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Critical",
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = false,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.168627455830574, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OptionsValues"] = {
						["onlyInCombat"] = false,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1672853740,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Enabled"] = false,
					["Revision"] = 70,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["Name"] = "Auto Set Skull",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["semver"] = "",
					["url"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1606377342,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Enabled"] = false,
					["Revision"] = 208,
					["Options"] = {
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["Name"] = "Countdown",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["semver"] = "",
					["url"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"white\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", 12, 22);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["OptionsValues"] = {
						["fontSize"] = 12,
						["fontColor"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["showLater"] = false,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
					["Time"] = 1616541628,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 14, \"white\");\n    envTable.EnergyAmount:SetPoint (\"top\", unitFrame, \"left\", 12, 22);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n\n162060 = Oryphrion\ncustom:\n171557 = shade-of-bargast\n--]=]",
					["Icon"] = 136048,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["Enabled"] = true,
					["Revision"] = 326,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 16,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fontSize",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.80392156862745, -- [1]
								0.80392156862745, -- [2]
								0.80392156862745, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["version"] = -1,
					["Prio"] = 59,
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["Name"] = "Unit - Show Energy [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["semver"] = "",
					["url"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["NpcNames"] = {
						"171557", -- [1]
						"162060", -- [2]
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						392488, -- [21]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["version"] = -1,
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('left', 0, 15)\n        unitFrame.spitefulTexture:SetSize(27, 15)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"middle\", unitFrame.spitefulTexture, \"middle\", 0, 0)\n        unitFrame.spitefulText:SetJustifyH(\"middle\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        local unit = unitFrame.namePlateUnitToken .. \"target\"\n        \n        if UnitExists(unit) and scriptTable.config.useClassColor then\n            local classcolor = C_ClassColor.GetClassColor(select(2,UnitClass(unit)))\n            unitFrame.spitefulTexture:SetColorTexture(classcolor.r, classcolor.g, classcolor.b, a)\n        else        \n            unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        end\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1f\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        Plater.SetNameplateColor (unitFrame, r, g, b)\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            if target and target ~= \"\" then\n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName (plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
					["OptionsValues"] = {
						["bgColor"] = {
							1, -- [1]
							0, -- [2]
							0.83137254901961, -- [3]
							1, -- [4]
						},
						["textColor"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
						["targetingColor"] = {
							1, -- [1]
							0.59607843137255, -- [2]
							0.058823529411765, -- [3]
							1, -- [4]
						},
						["switchTargetName"] = true,
						["useClassColor"] = false,
						["bgWidth"] = 20,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1616258454,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n    end\nend\n\n\n\n\n\n",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('left', 0, 15)\n        unitFrame.spitefulTexture:SetSize(27, 15)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", 0, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        local unit = unitFrame.namePlateUnitToken .. \"target\"\n        \n        if UnitExists(unit) and scriptTable.config.useClassColor then\n            local classcolor = C_ClassColor.GetClassColor(select(2,UnitClass(unit)))\n            unitFrame.spitefulTexture:SetColorTexture(classcolor.r, classcolor.g, classcolor.b, a)\n        else        \n            unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        end\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1f\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        Plater.SetNameplateColor (unitFrame, r, g, b)\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            if target and target ~= \"\" then\n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName (plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            end\n        end\n    end\nend",
					["Icon"] = 135945,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Enabled"] = false,
					["Revision"] = 354,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Fraction"] = false,
							["Value"] = 22,
							["Name"] = "Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "bgWidth",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0, -- [1]
								0.53333333333333, -- [2]
								0.53333333333333, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate / Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useClassColor",
							["Value"] = true,
							["Name"] = "Change Color by Target Class",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textSize",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254902, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "switchTargetName",
							["Value"] = false,
							["Name"] = "Show Target instead of Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option8",
							["Value"] = 0,
							["Name"] = "Option 8",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 4,
							["Key"] = "useTargetingColor",
							["Value"] = true,
							["Name"] = "Change Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "targetingColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [11]
					},
					["version"] = 5,
					["Prio"] = 99,
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["Name"] = "M+ Spiteful [Fixed]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["semver"] = "1.0.4",
					["url"] = "https://wago.io/XUk5S3uE8/5",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -115, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
						["nameplateColor"] = {
							0.86666666666667, -- [1]
							0.43529411764706, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["changeNameplateColor"] = true,
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1670738551,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", -115, -16);   \n    envTable.FixateTarget.outline = scriptTable.config.outline\n    envTable.FixateTarget:Hide()\nend\n\n\n",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    envTable.FixateTarget:Hide()\n    \n    \nend\n\n\n\n\n",
					["Revision"] = 670,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.52549019607843, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.71372549019608, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Outline Test",
						}, -- [8]
					},
					["Enabled"] = true,
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Spiteful Glow",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    local targetName = UnitName (unitId .. \"target\");\n    \n    if targetName and UnitIsUnit(targetName, \"player\")then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n        \n        if not envTable.colorchanged then\n            Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n            unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n            \n            envTable.colorchanged = true\n        end\n        \n    end\n    \n    if (targetName) then\n        local _, class = UnitClass (unitId..\"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        envTable.FixateTarget:Show();\n    end  \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Prio"] = 99,
					["Name"] = "Spiteful Name&Glow",
					["PlaterCore"] = 1,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["NpcNames"] = {
						"174773", -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.colorchanged = false\nend\n\n\n\n\n\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.ChangeColor = true\n    envTable.ChangeTextSize = true\n    envTable.CastbarColor = \"orangered\"\n    \n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 0.85, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.25\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\",0, 0)\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    if (envTable.ChangeTextSize and envTable.OriginalText) then\n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n        envTable.OriginalText = nil\n    end\n    \n    --stop the camera shake\n    envTable.glowEffect:Hide()\n    Plater.StopGlow(self, \"ants\")\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt and envTable.ChangeColor) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    if (envTable.ChangeTextSize and envTable.OriginalText) then\n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    if (envTable.ChangeTextSize) then\n        local text = Plater:GetFontSize(self.Text)\n        envTable.OriginalText = text\n        Plater:SetFontSize (self.Text, math.ceil(text * envTable.CastBarHeightAdd))    \n    end\n    \n    self:SetHeight (math.ceil(height * envTable.CastBarHeightAdd))\n    \n    --play flash animations\n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    \nend",
					["ScriptType"] = 2,
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1672853725,
					["Options"] = {
					},
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.ChangeColor = true\n    envTable.ChangeTextSize = true\n    envTable.CastbarColor = \"orangered\"\n    \n    envTable.GlowOptions = {\n        glowType = \"ants\",\n        N = 7, -- number of lines. Defaul value is 8;\n        frequency = 0.25, -- frequency, set to negative to inverse direction of rotation. Default value is 0.125;\n        scale = 0.85, -- scale of particles\n        xOffset = 0,\n        yOffset = 0, -- offset of glow relative to region border;\n        key = \"\", -- key of glow, allows for multiple glows on one frame;\n    }\n    \n    --settings (you may need /reload if some configs isn't applied immediately)\n    local CONFIG_BACKGROUND_FLASH_DURATION = 0.8 --0.8\n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    envTable.CastBarHeightAdd = 1.25\n    \n    --create a glow effect in the border of the cast bar\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+30, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\",0, 0)\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)\n    fadeOut:SetDuration (CONFIG_BACKGROUND_FLASH_DURATION/2)    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \n    \nend",
					["NpcNames"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt and envTable.ChangeColor) then\n        self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n    end\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    if (envTable.ChangeTextSize and envTable.OriginalText) then\n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    if (envTable.ChangeTextSize) then\n        local text = Plater:GetFontSize(self.Text)\n        envTable.OriginalText = text\n        Plater:SetFontSize (self.Text, math.ceil(text * envTable.CastBarHeightAdd))    \n    end\n    \n    self:SetHeight (math.ceil(height * envTable.CastBarHeightAdd))\n    \n    --play flash animations\n    Plater.StartGlow(self, \"white\", envTable.GlowOptions)\n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    \nend",
					["Enabled"] = true,
					["Revision"] = 2830,
					["semver"] = "1.0.34",
					["Name"] = "M+ Important Spells [Plater]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flash, Bounce when an important cast is happening. Add spell in the Add Trigger field.",
					["SpellIds"] = {
						345429, -- [1]
						328537, -- [2]
						318949, -- [3]
						328016, -- [4]
						322939, -- [5]
						331721, -- [6]
						325799, -- [7]
						329564, -- [8]
						346866, -- [9]
						324027, -- [10]
						324323, -- [11]
						327884, -- [12]
						327389, -- [13]
						334606, -- [14]
						336451, -- [15]
						335143, -- [16]
						320822, -- [17]
						340469, -- [18]
						334900, -- [19]
						347102, -- [20]
						333729, -- [21]
						343198, -- [22]
						332608, -- [23]
						342795, -- [24]
						331847, -- [25]
						321724, -- [26]
						331213, -- [27]
						334324, -- [28]
						334618, -- [29]
						322429, -- [30]
						343155, -- [31]
						334921, -- [32]
						345232, -- [33]
						328293, -- [34]
						324608, -- [35]
						345676, -- [36]
						341910, -- [37]
						324170, -- [38]
						331275, -- [39]
						346490, -- [40]
						328403, -- [41]
						340794, -- [42]
						332567, -- [43]
						334967, -- [44]
						331460, -- [45]
						337235, -- [46]
						337255, -- [47]
						318995, -- [48]
						319655, -- [49]
						346538, -- [50]
						342080, -- [51]
						332672, -- [52]
						332084, -- [53]
						331379, -- [54]
						330810, -- [55]
						341914, -- [56]
						337997, -- [57]
						341441, -- [58]
						336447, -- [59]
						336420, -- [60]
						334653, -- [61]
						347091, -- [62]
						341840, -- [63]
						345010, -- [64]
						329423, -- [65]
						345595, -- [66]
						340219, -- [67]
						329908, -- [68]
						345215, -- [69]
						322358, -- [70]
						341185, -- [71]
						320142, -- [72]
						330438, -- [73]
						332165, -- [74]
						333809, -- [75]
						342163, -- [76]
						308030, -- [77]
						305378, -- [78]
						294517, -- [79]
						344936, -- [80]
						330573, -- [81]
						337943, -- [82]
						325523, -- [83]
						320999, -- [84]
						333297, -- [85]
						329905, -- [86]
						330388, -- [87]
						329904, -- [88]
						310392, -- [89]
						345931, -- [90]
						328651, -- [91]
					},
					["Prio"] = 99,
					["version"] = 35,
					["PlaterCore"] = 1,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --restore the cast bar to its original height\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n        envTable.OriginalHeight = nil\n    end\n    \n    if (envTable.ChangeTextSize and envTable.OriginalText) then\n        Plater:SetFontSize (self.Text, envTable.OriginalText)\n        envTable.OriginalText = nil\n    end\n    \n    --stop the camera shake\n    envTable.glowEffect:Hide()\n    Plater.StopGlow(self, \"ants\")\n    envTable.BackgroundFlash:Stop()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Racial_OrbitalStrike",
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["url"] = "https://wago.io/8s7Mcrve2/35",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						355571, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.4,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 5,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Name"] = "Shake Amplitude",
							["Value"] = 8,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetNameSize",
							["Value"] = 14,
							["Name"] = "Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Key"] = "targetFrameWidth",
							["Value"] = 90,
							["Name"] = "Frame Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Fraction"] = false,
							["Value"] = 20,
							["Key"] = "targetFrameHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Height",
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1669327146,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 65,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura is Shield [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						360850, -- [10]
						212784, -- [11]
						199033, -- [12]
						199034, -- [13]
						200969, -- [14]
						394512, -- [15]
						397881, -- [16]
						396020, -- [17]
						374430, -- [18]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["version"] = -1,
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = true,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Effect After Cast [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Circle AoE [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Key"] = "rotationDuration",
							["Value"] = 0.15,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Key"] = "animStartDuration",
							["Value"] = 0.3,
							["Name"] = "Animation Start Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Name"] = "Texture Start Alpha",
							["Value"] = 1,
							["Key"] = "textureStartAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Key"] = "textureScale",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1669340967,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 137,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["NpcNames"] = {
						"197697", -- [1]
						"59544", -- [2]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Health Markers [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Name"] = "Vertical Line Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "blank line",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Fill Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "fillColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Name"] = "Fill Alpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "fillAlpha",
						}, -- [7]
					},
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 3,
							["Name"] = "Nameplate Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Key"] = "skullAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Name"] = "Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullScale",
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1672853753,
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["url"] = "",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
					["semver"] = "",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["Revision"] = 162,
					["Options"] = {
					},
					["version"] = -1,
					["Prio"] = 99,
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["Name"] = "Add - Tag Number [P]",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["Enabled"] = false,
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Quick Flash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Fraction"] = false,
							["Value"] = 25,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 30,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["Desc"] = "Play a very fast flash when the cast start",
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Warning [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Non Elite Trash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Name"] = "Nameplate Scale",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "scale",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
				}, -- [35]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["version"] = -1,
					["Options"] = {
					},
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
				}, -- [36]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["version"] = -1,
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [37]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Explode on Die [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 70,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["Desc"] = "",
				}, -- [38]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        Plater.SetNameplateSize(unitFrame)\n        unitFrame.enlargedByScript = false\n    end\nend",
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    envTable.overlaySpark:ClearAllPoints()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n        envTable.topArrow:ClearAllPoints()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
					["Time"] = 1672624821,
					["Temp_Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n        [227463] = true, -- 칼날 소용돌이, duplicated\n    }    \nend\n\n\n",
					["url"] = "https://wago.io/1TlaFYtDO/98",
					["Icon"] = 2065634,
					["Enabled"] = true,
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.glowEffect:Hide()\n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    --decrease the nameplate size\n    if unitFrame.enlargedByScript then\n        Plater.SetNameplateSize(unitFrame)\n        unitFrame.enlargedByScript = false\n    end\nend",
					["Revision"] = 3225,
					["semver"] = "1.0.97",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --custom frames\n    envTable.glowEffect = envTable.glowEffect or Plater.CreateNameplateGlow (unitFrame.healthBar)\n    --envTable.glowEffect:Show() --envTable.glowEffect:Hide() \n    local UnitType = Plater.GetUnitType (unitFrame)\n    local hsize = 1\n    local wsize = 1\n    \n    if UnitType == \"minus\" then\n        hsize = Plater.db.profile.minor_height_scale\n        wsize = Plater.db.profile.minor_width_scale\n    elseif UnitType == \"pet\" then\n        hsize = Plater.db.profile.pet_height_scale\n        wsize = Plater.db.profile.pet_width_scale\n    end\n    \n    envTable.glowEffect:SetOffset (-26*wsize, 25*wsize, 10*hsize, -13*hsize)\n    envTable.glowEffect:Hide()\n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 64\n    envTable.overlaySpark.alpha = 1\n    envTable.overlaySpark.texture = [[Interface\\CastingBar\\UI-CastingBar-Spark]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = 16\n    envTable.topArrow.height = 20\n    envTable.topArrow.alpha = scriptTable.config.ArrowAlpha \n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    local CONFIG_SHAKE_DURATION = 0.2 --0.2\n    local CONFIG_SHAKE_AMPLITUDE = 5 --5\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, CONFIG_SHAKE_DURATION, CONFIG_SHAKE_AMPLITUDE, 35, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = CONFIG_SHAKE_AMPLITUDE\n    envTable.FrameShake.OriginalDuration = CONFIG_SHAKE_DURATION  \nend",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Author"] = "Bombad£o-Azralon",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.spellBL = {\n        [363827] = true, -- 다우세그네, false spell\n        [227463] = true, -- 칼날 소용돌이, duplicated\n    }    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    envTable.glowEffect:Show()\n    envTable.glowEffect.Texture:SetAlpha (scriptTable.config.GlowAlpha)\n    envTable.overlaySpark:Show()\n    envTable.overlaySpark:ClearAllPoints()\n    if (scriptTable.config.ShowArrow) then\n        envTable.topArrow:Show()\n        envTable.topArrow:ClearAllPoints()\n    end\n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --increase the nameplate size\n    \n    if not unitFrame.enlargedByScript then\n        local nameplateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat [1]\n        local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n        \n        Plater.SetNameplateSize (unitFrame, nameplateWidth, math.ceil(nameplateHeight*scriptTable.config.NameplateSizeOffset))\n        \n        unitFrame.enlargedByScript = true\n    end\nend",
					["SpellIds"] = {
						371597, -- [1]
						371273, -- [2]
						240446, -- [3]
						373513, -- [4]
						163966, -- [5]
						162617, -- [6]
						166380, -- [7]
						167240, -- [8]
						167232, -- [9]
						172943, -- [10]
						173135, -- [11]
						163379, -- [12]
						232137, -- [13]
						228019, -- [14]
						227987, -- [15]
						227568, -- [16]
						227776, -- [17]
						227917, -- [18]
						227925, -- [19]
						232115, -- [20]
						227966, -- [21]
						228278, -- [22]
						228279, -- [23]
						241808, -- [24]
						228528, -- [25]
						228555, -- [26]
						227508, -- [27]
						241828, -- [28]
						228852, -- [29]
						228239, -- [30]
						228700, -- [31]
						227254, -- [32]
						229429, -- [33]
						294349, -- [34]
						300436, -- [35]
						300129, -- [36]
						296522, -- [37]
						296080, -- [38]
						301177, -- [39]
						301088, -- [40]
						285020, -- [41]
						294324, -- [42]
						293861, -- [43]
						297128, -- [44]
						291613, -- [45]
						356548, -- [46]
						356537, -- [47]
						356407, -- [48]
						349987, -- [49]
						349663, -- [50]
						350090, -- [51]
						355782, -- [52]
						350922, -- [53]
						355438, -- [54]
						357404, -- [55]
						357189, -- [56]
						347150, -- [57]
						355057, -- [58]
						355139, -- [59]
						355429, -- [60]
						355584, -- [61]
						358131, -- [62]
						350517, -- [63]
						357260, -- [64]
						351119, -- [65]
						351646, -- [66]
						350180, -- [67]
						335783, -- [68]
						294533, -- [69]
						353782, -- [70]
						347855, -- [71]
						353769, -- [72]
						329787, -- [73]
						331935, -- [74]
						336383, -- [75]
						342160, -- [76]
						353742, -- [77]
						353444, -- [78]
						295929, -- [79]
						277039, -- [80]
						278192, -- [81]
						276754, -- [82]
						329909, -- [83]
						358328, -- [84]
						325632, -- [85]
						81008, -- [86]
						296355, -- [87]
						355224, -- [88]
						342207, -- [89]
						296839, -- [90]
						310392, -- [91]
						367380, -- [92]
						297966, -- [93]
						332002, -- [94]
						329904, -- [95]
						294517, -- [96]
						329423, -- [97]
						329905, -- [98]
						304831, -- [99]
						353124, -- [100]
						358270, -- [101]
						295985, -- [102]
						184381, -- [103]
						318995, -- [104]
						260344, -- [105]
						301952, -- [106]
						362820, -- [107]
						242391, -- [108]
						329608, -- [109]
						329930, -- [110]
						355212, -- [111]
						332165, -- [112]
						358327, -- [113]
						341146, -- [114]
						330711, -- [115]
						334522, -- [116]
						331550, -- [117]
						325506, -- [118]
						333002, -- [119]
						337110, -- [120]
						344776, -- [121]
						332619, -- [122]
						347671, -- [123]
						350764, -- [124]
						350365, -- [125]
						350385, -- [126]
						350286, -- [127]
						350687, -- [128]
						350339, -- [129]
						351066, -- [130]
						351779, -- [131]
						352933, -- [132]
						352538, -- [133]
						357144, -- [134]
						348428, -- [135]
						355055, -- [136]
						355127, -- [137]
						352355, -- [138]
						349458, -- [139]
						347704, -- [140]
						355540, -- [141]
						351353, -- [142]
						356021, -- [143]
						356023, -- [144]
						358215, -- [145]
						354068, -- [146]
						353952, -- [147]
						354147, -- [148]
						359770, -- [149]
						364040, -- [150]
						361644, -- [151]
						363088, -- [152]
						361989, -- [153]
						363024, -- [154]
						365008, -- [155]
						365958, -- [156]
						360717, -- [157]
						361923, -- [158]
						366379, -- [159]
						363533, -- [160]
						364386, -- [161]
						364114, -- [162]
						362028, -- [163]
						362617, -- [164]
						365385, -- [165]
						366374, -- [166]
						366678, -- [167]
						367054, -- [168]
					},
					["Prio"] = 99,
					["version"] = 98,
					["PlaterCore"] = 1,
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if scriptTable.spellBL[envTable._SpellID] then return end\n    \n    if unitFrame.IsSelf or (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then return end\n    \n    local percent = unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)\n    \n    --update the percent\n    self.ThrottleUpdate = -1\n    if self.channeling then\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"right\",-percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topright\", -percent + envTable.topArrow.width/15, 1)\n    else\n        envTable.overlaySpark:SetPoint (\"center\", unitFrame.healthBar, \"left\", percent, 0)\n        envTable.topArrow:SetPoint (\"center\", unitFrame.healthBar, \"topleft\", percent + envTable.topArrow.width/15, 1)    \n    end        \nend\n\n\n",
					["Name"] = "Cast - Explosive [Fixed]",
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "ShowArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "ArrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.7,
							["Key"] = "GlowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Glow Alpha",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 1.25,
							["Key"] = "NameplateSizeOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Height Scale",
						}, -- [4]
					},
					["NpcNames"] = {
					},
				}, -- [39]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["version"] = -1,
					["Name"] = "Aura While Casting [P]",
					["NpcNames"] = {
					},
				}, -- [40]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - On Going Cast [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Dots Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Key"] = "speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Key"] = "minAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
				}, -- [41]
			},
			["saved_cvars_last_change"] = {
				["ShowClassColorInNameplate"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateOverlapV"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplatePersonalHideDelaySeconds"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateResourceOnTarget"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowFriendlyMinions"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateSelfScale"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["SoftTargetInteract"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/SharedXML/CvarUtil.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:179: in function `SetValueInternal'\n[string \"@Interface/SharedXML/Settings/Blizzard_Setting.lua\"]:67: in function `SetValue'\n[string \"@Interface/SharedXML/Settings/Blizzard_Settings.lua\"]:209: in function `SetValue'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
				["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowSelf"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateSelfTopInset"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateMotionSpeed"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateGlobalScale"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowEnemyPets"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateLargerScale"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateLargeTopInset"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowFriends"] = "Interface/AddOns/Plater/Plater.lua:8654",
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateOccludedAlphaMult"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateMinScale"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateSelfAlpha"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateOtherTopInset"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateOtherAtBase"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateSelfBottomInset"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowEnemyGuardians"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateOverlapH"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["SoftTargetIconGameObject"] = "Interface/AddOns/Plater/Plater.lua:2198",
				["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:2198",
			},
			["url"] = "https://wago.io/TgqTbkIKa/12",
			["health_cutoff_upper"] = false,
			["stacking_nameplates_enabled"] = false,
			["aura2_y_offset"] = 0.5,
			["buffs_on_aura2"] = true,
			["indicator_quest"] = false,
			["expansion_triggerwipe"] = {
				[9] = true,
			},
			["show_aggro_glow"] = false,
			["cast_statusbar_color_nointerrupt"] = {
				0.8, -- [1]
				0.30196078431373, -- [2]
				0.30196078431373, -- [3]
				1, -- [4]
			},
			["show_interrupt_author"] = false,
			["hide_blizzard_castbar"] = true,
			["health_cutoff_extra_glow"] = true,
			["npc_cache"] = {
				[164815] = {
					"Zolramus Siphoner", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[200126] = {
					"Fallen Waterspeaker", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[188100] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[190403] = {
					"Glacial Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168398] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[195265] = {
					"Stormcaller Arynga", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[113145] = {
					"Doomguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[111226] = {
					"Summoner Xiv", -- [1]
					"The Nighthold", -- [2]
				},
				[111354] = {
					"Taintheart Befouler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[188357] = {
					"Freezing Front", -- [1]
					"The Shadowlands", -- [2]
				},
				[166608] = {
					"Mueh'zala", -- [1]
					"De Other Side", -- [2]
				},
				[189893] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[98177] = {
					"Glayvianna Soulrender", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[190405] = {
					"Infuser Sariya", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164562] = {
					"Depraved Houndmaster", -- [1]
					"Halls of Atonement", -- [2]
				},
				[111227] = {
					"Felweaver Pharamere", -- [1]
					"The Nighthold", -- [2]
				},
				[111355] = {
					"Taintheart Tormenter", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[78731] = {
					"Khatuun", -- [1]
					"Auchindoun", -- [2]
				},
				[190406] = {
					"Aqualing", -- [1]
					"Halls of Infusion", -- [2]
				},
				[164563] = {
					"Vicious Gargon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[112251] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[169425] = {
					"Felhound", -- [1]
					"The Nexus", -- [2]
				},
				[196548] = {
					"Ancient Branch", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[29774] = {
					"Spitting Cobra", -- [1]
					"Gundrak", -- [2]
				},
				[168658] = {
					"Forsworn Devastator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[125429] = {
					"Paraxis Inquisitor", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[187593] = {
					"Primal Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[82698] = {
					"Night-Twisted Devout", -- [1]
					"Highmaul", -- [2]
				},
				[200387] = {
					"Shambling Infester", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[121975] = {
					"Aggramar", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[201155] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[23953] = {
					"Prince Keleseth", -- [1]
					"Utgarde Keep", -- [2]
				},
				[75406] = {
					"Slagna", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[171474] = {
					"Finger Food", -- [1]
					"Plaguefall", -- [2]
				},
				[200388] = {
					"Malformed Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[167892] = {
					"Tormented Soul", -- [1]
					"Halls of Atonement", -- [2]
				},
				[98691] = {
					"Risen Scout", -- [1]
					"Black Rook Hold", -- [2]
				},
				[113148] = {
					"Fel Hound", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[134629] = {
					"Scaled Krolusk Rider", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[89224] = {
					"Darkwing Scavenger", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[122104] = {
					"Portal Keeper Hasabel", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[164567] = {
					"Ingra Maloch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[91783] = {
					"Hatecoil Stormweaver", -- [1]
					"Eye of Azshara", -- [2]
				},
				[161241] = {
					"Voidweaver Mal'thir", -- [1]
					"The Underrot", -- [2]
				},
				[120697] = {
					"Worshiper of Elune", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[417] = {
					"Rhuulum", -- [1]
					"Theater of Pain", -- [2]
				},
				[170197] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[190923] = {
					"Zephyrling", -- [1]
					"Halls of Infusion", -- [2]
				},
				[113149] = {
					"Felguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[169430] = {
					"Ur'zul", -- [1]
					"The Nexus", -- [2]
				},
				[78734] = {
					"Zipteq", -- [1]
					"Auchindoun", -- [2]
				},
				[141284] = {
					"Kul Tiran Wavetender", -- [1]
					"Siege of Boralus", -- [2]
				},
				[26928] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[199368] = {
					"Hardened Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[102019] = {
					"Stormforged Obliterator", -- [1]
					"Halls of Valor", -- [2]
				},
				[161243] = {
					"Samh'rek, Beckoner of Chaos", -- [1]
					"The Underrot", -- [2]
				},
				[141285] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[170199] = {
					"Harnessed Specter", -- [1]
					"Castle Nathria", -- [2]
				},
				[131818] = {
					"Marked Sister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[98949] = {
					"Smashspite the Hateful", -- [1]
					"Black Rook Hold", -- [2]
				},
				[161244] = {
					"Blood of the Corruptor", -- [1]
					"The Underrot", -- [2]
				},
				[78735] = {
					"Zar'shuul", -- [1]
					"Auchindoun", -- [2]
				},
				[168153] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[112255] = {
					"Sludgerax", -- [1]
					"The Nighthold", -- [2]
				},
				[196044] = {
					"Unruly Textbook", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184018] = {
					"Bromach", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[167898] = {
					"Manifestation of Envy", -- [1]
					"Halls of Atonement", -- [2]
				},
				[76177] = {
					"Soulbinder Nyami", -- [1]
					"Auchindoun", -- [2]
				},
				[129527] = {
					"Bilge Rat Buccaneer", -- [1]
					"Freehold", -- [2]
				},
				[59726] = {
					"Peril", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[196045] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[184019] = {
					"Burly Rock-Thrower", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[101637] = {
					"Valarjar Aspirant", -- [1]
					"Halls of Valor", -- [2]
				},
				[120188] = {
					"Wailing Soul", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[23954] = {
					"Ingvar the Plunderer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[91786] = {
					"Gritslime Snail", -- [1]
					"Eye of Azshara", -- [2]
				},
				[58319] = {
					"Lesser Sha", -- [1]
					"Pandaria", -- [2]
				},
				[192464] = {
					"Raging Ember", -- [1]
					"Neltharus", -- [2]
				},
				[168156] = {
					"Remornia", -- [1]
					"Castle Nathria", -- [2]
				},
				[196559] = {
					"Volatile Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[113920] = {
					"Flail of Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[133870] = {
					"Diseased Lasher", -- [1]
					"The Underrot", -- [2]
				},
				[93834] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[184022] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[26737] = {
					"Crazed Mana-Surge", -- [1]
					"The Nexus", -- [2]
				},
				[127482] = {
					"Sewer Vicejaw", -- [1]
					"Tol Dagor", -- [2]
				},
				[26801] = {
					"Horde Ranger", -- [1]
					"The Nexus", -- [2]
				},
				[184023] = {
					"Vicious Basilisk", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[26929] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[101639] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[112386] = {
					"Twirhp", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[164578] = {
					"Stitchflesh's Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[125436] = {
					"Thu'raya, Mother of the Cosmos", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[169696] = {
					"Mire Soldier", -- [1]
					"Plaguefall", -- [2]
				},
				[150250] = {
					"Pistonhead Blaster", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[122366] = {
					"Varimathras", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[79507] = {
					"Felguard", -- [1]
					"Auchindoun", -- [2]
				},
				[29680] = {
					"Slad'ran Viper", -- [1]
					"Gundrak", -- [2]
				},
				[168418] = {
					"Forsworn Inquisitor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[127484] = {
					"Jes Howlis", -- [1]
					"Tol Dagor", -- [2]
				},
				[98954] = {
					"Felsworn Myrmidon", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[84753] = {
					"Mutated Defender", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[198868] = {
					"Primalist Voltweaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[124158] = {
					"Imonar the Soulhunter", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[126333] = {
					"Felseeker Ritualist", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[122367] = {
					"Admiral Svirax", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[112260] = {
					"Dreadsoul Defiler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[24083] = {
					"Enslaved Proto-Drake", -- [1]
					"Utgarde Keep", -- [2]
				},
				[168420] = {
					"Forsworn Champion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168932] = {
					"Doomguard", -- [1]
					"The Nexus", -- [2]
				},
				[101002] = {
					"Krosus", -- [1]
					"The Nighthold", -- [2]
				},
				[129788] = {
					"Irontide Bonesaw", -- [1]
					"Freehold", -- [2]
				},
				[134390] = {
					"Sand-crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[75927] = {
					"Azzakel", -- [1]
					"Auchindoun", -- [2]
				},
				[127230] = {
					"Garothi Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[117123] = {
					"Tidescale Legionnaire", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[127486] = {
					"Ashvane Officer", -- [1]
					"Tol Dagor", -- [2]
				},
				[121473] = {
					"Coercitor Nixa", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[113413] = {
					"Infernal Siegebreaker", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[115844] = {
					"Goroth", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[120194] = {
					"Ghostly Acolyte", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[79510] = {
					"Cackling Pyromaniac", -- [1]
					"Auchindoun", -- [2]
				},
				[100364] = {
					"Spirit of Vengeance", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[127231] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[134137] = {
					"Temple Attendant", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[190174] = {
					"Hypnosis Bat", -- [1]
					"Court of Stars", -- [2]
				},
				[119939] = {
					"Ghastly Bonewarden", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[77080] = {
					"Sargerei Arbiter", -- [1]
					"Auchindoun", -- [2]
				},
				[168681] = {
					"Forsworn Helion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[79511] = {
					"Blazing Trickster", -- [1]
					"Auchindoun", -- [2]
				},
				[96015] = {
					"Inquisitor Tormentorum", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[29713] = {
					"Slad'ran Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[76057] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[127488] = {
					"Ashvane Flamecaster", -- [1]
					"Tol Dagor", -- [2]
				},
				[125569] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[186338] = {
					"Maruuk", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[172265] = {
					"Remnant of Fury", -- [1]
					"Sanguine Depths", -- [2]
				},
				[170474] = {
					"Brood Assassin", -- [1]
					"Plaguefall", -- [2]
				},
				[160495] = {
					"Maniacal Soulbinder", -- [1]
					"Theater of Pain", -- [2]
				},
				[23956] = {
					"Dragonflayer Strategist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[95888] = {
					"Cordana Felsong", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[165357] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[186339] = {
					"Teera", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[127233] = {
					"Flameweaver", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[193760] = {
					"Surging Ruiner", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[192481] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[198878] = {
					"Primalist Tempestmaker", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[87317] = {
					"Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[191714] = {
					"Seeking Stormling", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[171500] = {
					"Shuffling Corpse", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[194273] = {
					"Witherling", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[196576] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[96657] = {
					"Blade Dancer Illianna", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168942] = {
					"Death Speaker", -- [1]
					"De Other Side", -- [2]
				},
				[142587] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[111370] = {
					"Creature in the Shadows", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[165872] = {
					"Flesh Crafter", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[87318] = {
					"Dungeoneer's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[163058] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[131586] = {
					"Banquet Steward", -- [1]
					"Waycrest Manor", -- [2]
				},
				[78491] = {
					"Brackenspore", -- [1]
					"Highmaul", -- [2]
				},
				[97170] = {
					"Hatecoil Wavebinder", -- [1]
					"Eye of Azshara", -- [2]
				},
				[135169] = {
					"Spirit Drain Totem", -- [1]
					"The Underrot", -- [2]
				},
				[170480] = {
					"Atal'ai Deathwalker", -- [1]
					"De Other Side", -- [2]
				},
				[191206] = {
					"Primalist Mage", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[57109] = {
					"Minion of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[91797] = {
					"King Deepbeard", -- [1]
					"Eye of Azshara", -- [2]
				},
				[83737] = {
					"Ravenous Goren", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[100497] = {
					"Ursoc", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[102672] = {
					"Nythendra", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[98706] = {
					"Commander Shemdah'sohn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[123398] = {
					"Garothi Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[165108] = {
					"Illusionary Clone", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[97171] = {
					"Hatecoil Arcanist", -- [1]
					"Eye of Azshara", -- [2]
				},
				[117769] = {
					"Felborne Spellbreaker", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[162038] = {
					"Regal Mistdancer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[87320] = {
					"Raider's Training Dummy", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[130435] = {
					"Addled Thug", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[81819] = {
					"Everbloom Naturalist", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[184300] = {
					"Ebonstone Golem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[162039] = {
					"Wicked Oppressor", -- [1]
					"Sanguine Depths", -- [2]
				},
				[170483] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[78237] = {
					"Phemos", -- [1]
					"Highmaul", -- [2]
				},
				[76446] = {
					"Shadowmoon Dominator", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[97172] = {
					"Saltsea Droplet", -- [1]
					"Eye of Azshara", -- [2]
				},
				[184301] = {
					"Cavern Seeker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[162040] = {
					"Grand Overseer", -- [1]
					"Sanguine Depths", -- [2]
				},
				[32593] = {
					"Skittering Swarmer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[130436] = {
					"Off-Duty Laborer", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[168949] = {
					"Risen Bonesoldier", -- [1]
					"De Other Side", -- [2]
				},
				[165111] = {
					"Drust Spiteclaw", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[190187] = {
					"Draconic Image", -- [1]
					"The Azure Vault", -- [2]
				},
				[162041] = {
					"Grubby Dirtcruncher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[78238] = {
					"Pol", -- [1]
					"Highmaul", -- [2]
				},
				[173044] = {
					"Stitching Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[97173] = {
					"Restless Tides", -- [1]
					"Eye of Azshara", -- [2]
				},
				[184303] = {
					"Skittering Crawler", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[170486] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[131849] = {
					"Crazed Marksman", -- [1]
					"Waycrest Manor", -- [2]
				},
				[164857] = {
					"Spriggan Mendbender", -- [1]
					"De Other Side", -- [2]
				},
				[127111] = {
					"Irontide Oarsman", -- [1]
					"Freehold", -- [2]
				},
				[131850] = {
					"Maddened Survivalist", -- [1]
					"Waycrest Manor", -- [2]
				},
				[98965] = {
					"Kur'talos Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[127879] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[170488] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[195820] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[112655] = {
					"Celestial Acolyte", -- [1]
					"The Nighthold", -- [2]
				},
				[191215] = {
					"Tarasek Legionnaire", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[123402] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[86684] = {
					"Feral Lasher", -- [1]
					"The Everbloom", -- [2]
				},
				[170234] = {
					"Oppressive Banner", -- [1]
					"Theater of Pain", -- [2]
				},
				[168443] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[150276] = {
					"Heavy Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[164861] = {
					"Spriggan Barkbinder", -- [1]
					"De Other Side", -- [2]
				},
				[75426] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[106643] = {
					"Elisande", -- [1]
					"The Nighthold", -- [2]
				},
				[96664] = {
					"Valarjar Runecarver", -- [1]
					"Halls of Valor", -- [2]
				},
				[164862] = {
					"Weald Shimmermoth", -- [1]
					"De Other Side", -- [2]
				},
				[56792] = {
					"Figment of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[74787] = {
					"Slave Watcher Crushto", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[89244] = {
					"Ironhoof Trampler", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[134158] = {
					"Shadow-Borne Champion", -- [1]
					"Kings' Rest", -- [2]
				},
				[171772] = {
					"Mistveil Defender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162049] = {
					"Vestige of Doubt", -- [1]
					"Sanguine Depths", -- [2]
				},
				[113041] = {
					"Infected Diemetradon", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[123532] = {
					"Dark Keeper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[84767] = {
					"Twisted Abomination", -- [1]
					"The Everbloom", -- [2]
				},
				[119950] = {
					"Brimstone Infernal", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[138254] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[187638] = {
					"Flamescale Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[62358] = {
					"Corrupt Droplet", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[100248] = {
					"Ritualist Lesha", -- [1]
					"Eye of Azshara", -- [2]
				},
				[186615] = {
					"The Raging Tempest", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[102679] = {
					"Ysondre", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[138255] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[123533] = {
					"Tarneth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[117776] = {
					"Shadow Council Warlock", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[186616] = {
					"Granyth", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[118032] = {
					"Tormenting Eye", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[191222] = {
					"Juvenile Frost Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[134418] = {
					"Drowned Depthbringer", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[104215] = {
					"Patrol Captain Gerdo", -- [1]
					"Court of Stars", -- [2]
				},
				[120719] = {
					"Lunar Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[59544] = {
					"The Nodding Tiger", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[113043] = {
					"Abyss Watcher", -- [1]
					"The Nighthold", -- [2]
				},
				[134163] = {
					"Mage-Commander Lyra", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[163077] = {
					"Azules", -- [1]
					"Spires of Ascension", -- [2]
				},
				[187897] = {
					"Defier Draghar", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[113555] = {
					"Xalian Felblaze", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[74790] = {
					"Gug'rokk", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[135699] = {
					"Ashvane Jailer", -- [1]
					"Tol Dagor", -- [2]
				},
				[118289] = {
					"Maiden of Vigilance", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[191736] = {
					"Crawth", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[96028] = {
					"Wrath of Azshara", -- [1]
					"Eye of Azshara", -- [2]
				},
				[120720] = {
					"Lunar Guard", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[75814] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[200948] = {
					"Nokhud Apprentice", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[102681] = {
					"Taerar", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[191225] = {
					"Tarasek Earthreaver", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129548] = {
					"Blacktooth Brute", -- [1]
					"Freehold", -- [2]
				},
				[196855] = {
					"Braekkas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[36516] = {
					"Soulguard Animator", -- [1]
					"The Forge of Souls", -- [2]
				},
				[104217] = {
					"Talixae Flamewreath", -- [1]
					"Court of Stars", -- [2]
				},
				[77734] = {
					"Teron'gor", -- [1]
					"Auchindoun", -- [2]
				},
				[139284] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[196856] = {
					"Primal Stormsentry", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[102682] = {
					"Lethon", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[191739] = {
					"Scalebane Lieutenant", -- [1]
					"The Azure Vault", -- [2]
				},
				[184319] = {
					"Refti Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[162058] = {
					"Ventunax", -- [1]
					"Spires of Ascension", -- [2]
				},
				[133912] = {
					"Bloodsworn Defiler", -- [1]
					"The Underrot", -- [2]
				},
				[99868] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[83620] = {
					"Bloodmaul Earthbreaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[104218] = {
					"Advisor Melandrus", -- [1]
					"Court of Stars", -- [2]
				},
				[190205] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[162059] = {
					"Kin-Tara", -- [1]
					"Spires of Ascension", -- [2]
				},
				[164362] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[195579] = {
					"Primal Gust", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[190206] = {
					"Primalist Flamedancer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[123921] = {
					"Garothi Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[79015] = {
					"Ko'ragh", -- [1]
					"Highmaul", -- [2]
				},
				[164363] = {
					"Undying Stonefiend", -- [1]
					"Halls of Atonement", -- [2]
				},
				[191230] = {
					"Dragonspawn Flamebender", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[195580] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[83621] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[190207] = {
					"Primalist Cinderweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[120851] = {
					"Hippogryph Lord Varah", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[162061] = {
					"Devos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[162317] = {
					"Gorechop", -- [1]
					"Theater of Pain", -- [2]
				},
				[117269] = {
					"Kil'jaeden", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[188673] = {
					"Smoldering Colossus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[150292] = {
					"Mechagon Cavalry", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[23960] = {
					"Dragonflayer Runecaster", -- [1]
					"Utgarde Keep", -- [2]
				},
				[83622] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[184580] = {
					"Olaf", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[187139] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[56732] = {
					"Liu Flameheart", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[186116] = {
					"Gutshot", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[117782] = {
					"Eredar Bloodmage", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[192769] = {
					"Thondrozus", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[230127] = {
					"Mailbox", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[134174] = {
					"Shadow-Borne Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[83623] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[112409] = {
					"Muffinmon", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[112665] = {
					"Nighthold Protector", -- [1]
					"The Nighthold", -- [2]
				},
				[184582] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[59547] = {
					"Jiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[168718] = {
					"Forsworn Warden", -- [1]
					"Spires of Ascension", -- [2]
				},
				[129553] = {
					"Dinomancer Kish'o", -- [1]
					"Atal'Dazar", -- [2]
				},
				[163089] = {
					"Disgusting Refuse", -- [1]
					"Theater of Pain", -- [2]
				},
				[134943] = {
					"Exodar Peacekeeper", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[163857] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[83624] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[136735] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[122773] = {
					"Decimator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[75820] = {
					"Vengeful Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[150297] = {
					"Mechagon Renormalizer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[165138] = {
					"Blight Bag", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[186120] = {
					"Treemouth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[186121] = {
					"Decatriarch Wratheye", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[111004] = {
					"Gelatinized Decay", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[113307] = {
					"Chronowraith", -- [1]
					"The Nighthold", -- [2]
				},
				[173840] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[167955] = {
					"Sanguine Cadet", -- [1]
					"Sanguine Depths", -- [2]
				},
				[122135] = {
					"Shatug", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[23961] = {
					"Dragonflayer Ironhelm", -- [1]
					"Utgarde Keep", -- [2]
				},
				[193799] = {
					"Rotchanting Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[196102] = {
					"Conjured Lasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[167956] = {
					"Dark Acolyte", -- [1]
					"Sanguine Depths", -- [2]
				},
				[138019] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[125590] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[113436] = {
					"Colossal Siegebreaker", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[186124] = {
					"Gashtooth", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[74927] = {
					"Unstable Slag", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[120473] = {
					"Tidescale Combatant", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[186125] = {
					"Tricktotem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[165911] = {
					"Loyal Creation", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[162329] = {
					"Xav the Unfallen", -- [1]
					"Theater of Pain", -- [2]
				},
				[96677] = {
					"Steeljaw Grizzly", -- [1]
					"Halls of Valor", -- [2]
				},
				[134951] = {
					"Gnomish Gyro-Engineer", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[184335] = {
					"Infinite Agent", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[193291] = {
					"Apex Blazewing", -- [1]
					"Neltharus", -- [2]
				},
				[112414] = {
					"Darragh", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[194315] = {
					"Stormcaller Solongo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[165913] = {
					"Ghastly Parishioner", -- [1]
					"Halls of Atonement", -- [2]
				},
				[106785] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[29335] = {
					"Anub'ar Webspinner", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[195851] = {
					"Ukhel Deathspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[82733] = {
					"Night-Twisted Shadowsworn", -- [1]
					"Highmaul", -- [2]
				},
				[194316] = {
					"Stormcaller Zarii", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[123929] = {
					"Garothi Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[192781] = {
					"Ore Elemental", -- [1]
					"Neltharus", -- [2]
				},
				[118044] = {
					"Nether Horror", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[193293] = {
					"Qalashi Warden", -- [1]
					"Draenor", -- [2]
				},
				[112415] = {
					"Vulajin", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[194317] = {
					"Stormcaller Boroo", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[167962] = {
					"Defunct Dental Drill", -- [1]
					"De Other Side", -- [2]
				},
				[172312] = {
					"Spinemaw Gorger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[106786] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[168986] = {
					"Skeletal Raptor", -- [1]
					"De Other Side", -- [2]
				},
				[169498] = {
					"Plague Bomb", -- [1]
					"Plaguefall", -- [2]
				},
				[167963] = {
					"Headless Client", -- [1]
					"De Other Side", -- [2]
				},
				[187154] = {
					"Unstable Curator", -- [1]
					"The Azure Vault", -- [2]
				},
				[167964] = {
					"4.RF-4.RF", -- [1]
					"De Other Side", -- [2]
				},
				[80048] = {
					"Vul'gor", -- [1]
					"Highmaul", -- [2]
				},
				[106787] = {
					"Bitterbrine Slave", -- [1]
					"Eye of Azshara", -- [2]
				},
				[187155] = {
					"Rune Seal Keeper", -- [1]
					"The Azure Vault", -- [2]
				},
				[168988] = {
					"Overgrowth", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[195855] = {
					"Risen Warrior", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[167965] = {
					"Lubricator", -- [1]
					"De Other Side", -- [2]
				},
				[186644] = {
					"Leymor", -- [1]
					"The Azure Vault", -- [2]
				},
				[36522] = {
					"Soul Horror", -- [1]
					"The Forge of Souls", -- [2]
				},
				[193553] = {
					"Nokhud Warhound", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[173339] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[85934] = {
					"Gorian Elementalist", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[165919] = {
					"Skeletal Marauder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[192786] = {
					"Qalashi Plunderer", -- [1]
					"Neltharus", -- [2]
				},
				[84399] = {
					"Vicious Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[134191] = {
					"Gilnean Mauler", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[197904] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[76595] = {
					"Sargerei Soulpriest", -- [1]
					"Auchindoun", -- [2]
				},
				[171805] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[190484] = {
					"Kyrakka", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[192787] = {
					"Qalashi Spinecrusher", -- [1]
					"Neltharus", -- [2]
				},
				[193555] = {
					"Nokhud Villager", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197905] = {
					"Spellbound Scepter", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[85935] = {
					"Gorian Mage-Lord", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[190485] = {
					"Erkhart Stormvein", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[192788] = {
					"Qalashi Thaumaturge", -- [1]
					"Neltharus", -- [2]
				},
				[84272] = {
					"Burning Blade Assassin", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[187159] = {
					"Shrieking Whelp", -- [1]
					"The Azure Vault", -- [2]
				},
				[168992] = {
					"Risen Cultist", -- [1]
					"De Other Side", -- [2]
				},
				[196115] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[163619] = {
					"Zolramus Bonecarver", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[192789] = {
					"Nokhud Longbow", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[187160] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[114210] = {
					"Doomguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[189719] = {
					"Watcher Irideus", -- [1]
					"Halls of Infusion", -- [2]
				},
				[196116] = {
					"Crystal Fury", -- [1]
					"The Azure Vault", -- [2]
				},
				[85936] = {
					"Gorian Arcanist", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[172064] = {
					"Unstable Larva", -- [1]
					"Plaguefall", -- [2]
				},
				[137521] = {
					"Irontide Powdershot", -- [1]
					"Siege of Boralus", -- [2]
				},
				[59552] = {
					"The Crybaby Hozen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[84401] = {
					"Swift Sproutling", -- [1]
					"The Everbloom", -- [2]
				},
				[189464] = {
					"Qalashi Irontorch", -- [1]
					"Neltharus", -- [2]
				},
				[196117] = {
					"Crystal Thrasher", -- [1]
					"The Azure Vault", -- [2]
				},
				[163621] = {
					"Goregrind", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[192791] = {
					"Nokhud Warspear", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[93485] = {
					"Forsaken Crewman", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[114211] = {
					"Fel Hound", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[163622] = {
					"Goregrind Bits", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[112676] = {
					"Nobleborn Warpcaster", -- [1]
					"The Nighthold", -- [2]
				},
				[112804] = {
					"Trained Shadescale", -- [1]
					"The Nighthold", -- [2]
				},
				[133685] = {
					"Befouled Spirit", -- [1]
					"The Underrot", -- [2]
				},
				[197398] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[189466] = {
					"Irontorch Commander", -- [1]
					"Neltharus", -- [2]
				},
				[189722] = {
					"Gulping Goliath", -- [1]
					"Halls of Infusion", -- [2]
				},
				[165414] = {
					"Depraved Obliterator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[163623] = {
					"Rotspew Leftovers", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[93486] = {
					"Dread-Captain Tattersail", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[135989] = {
					"Shieldbearer of Zul", -- [1]
					"Atal'Dazar", -- [2]
				},
				[189467] = {
					"Qalashi Bonesplitter", -- [1]
					"Neltharus", -- [2]
				},
				[165415] = {
					"Toiling Groundskeeper", -- [1]
					"Halls of Atonement", -- [2]
				},
				[85938] = {
					"Gorian Sentinel", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[192794] = {
					"Nokhud Beastmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[59553] = {
					"The Songbird Queen", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[26746] = {
					"Crazed Mana-Wraith", -- [1]
					"The Nexus", -- [2]
				},
				[28825] = {
					"Cyclone", -- [1]
					"Halls of Lightning", -- [2]
				},
				[111398] = {
					"Nightmare Amalgamation", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[59873] = {
					"Corrupt Living Water", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[197145] = {
					"Colossal Stormfiend", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[134200] = {
					"Genn Greymane", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[120482] = {
					"Tidescale Seacaller", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[85939] = {
					"Gorian Centurion", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[112678] = {
					"Shal'dorei Naturalist", -- [1]
					"The Nighthold", -- [2]
				},
				[192796] = {
					"Nokhud Hornsounder", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197146] = {
					"Qalashi Emissary", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[29305] = {
					"Moorabi", -- [1]
					"Gundrak", -- [2]
				},
				[189470] = {
					"Lava Flare", -- [1]
					"Neltharus", -- [2]
				},
				[93104] = {
					"Forsaken Bat-Rider", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[197147] = {
					"Qalashi Honor Guard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[112039] = {
					"Screeching Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[189471] = {
					"Qalashi Blacksmith", -- [1]
					"Neltharus", -- [2]
				},
				[189727] = {
					"Khajin the Unyielding", -- [1]
					"Halls of Infusion", -- [2]
				},
				[85940] = {
					"Bloodthirsty Bruiser", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[197148] = {
					"Qalashi Lavabearer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[189472] = {
					"Qalashi Lavabearer", -- [1]
					"Neltharus", -- [2]
				},
				[111528] = {
					"Deathroot Ancient", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[186658] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[197149] = {
					"Qalashi Lavamancer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168747] = {
					"Venomfang", -- [1]
					"Plaguefall", -- [2]
				},
				[189729] = {
					"Primal Tsunami", -- [1]
					"Halls of Infusion", -- [2]
				},
				[83894] = {
					"Dulhu", -- [1]
					"The Everbloom", -- [2]
				},
				[192800] = {
					"Nokhud Lancemaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[197406] = {
					"Aggravated Skitterfly", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[107435] = {
					"Gerenth the Vile", -- [1]
					"Court of Stars", -- [2]
				},
				[89268] = {
					"Verdant Thorn-Weaver", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[93490] = {
					"Royal Dreadguard", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[75451] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[28730] = {
					"Watcher Gashra", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[59555] = {
					"Haunting Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[119206] = {
					"Thezdin's Erupting Reflection", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[28826] = {
					"Stormfury Revenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[163121] = {
					"Stitched Vanguard", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[28922] = {
					"Anub'ar Crusher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[192803] = {
					"War Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[163122] = {
					"Brittlebone Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[186151] = {
					"Balakar Khan", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196642] = {
					"Hungry Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[162099] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[29306] = {
					"Gal'darah", -- [1]
					"Gundrak", -- [2]
				},
				[193572] = {
					"Nokhud Warsmith", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195875] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[97202] = {
					"Olmyr the Enlightened", -- [1]
					"Halls of Valor", -- [2]
				},
				[163891] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[162100] = {
					"Kryxis the Voracious", -- [1]
					"Sanguine Depths", -- [2]
				},
				[195876] = {
					"Desecrated Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[163892] = {
					"Rotting Slimeclaw", -- [1]
					"Plaguefall", -- [2]
				},
				[86328] = {
					"Gorian Cohort", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[199715] = {
					"Nokhud Battleguard", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195877] = {
					"Risen Mystic", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[167731] = {
					"Separation Assistant", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[196645] = {
					"Desecrated Bakar", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[162102] = {
					"Grand Proctor Beryllia", -- [1]
					"Sanguine Depths", -- [2]
				},
				[75198] = {
					"Bloodmaul Geomancer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[199716] = {
					"Nokhud Brute", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[195878] = {
					"Ukhel Beastcaller", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[163894] = {
					"Blighted Spinebreaker", -- [1]
					"Plaguefall", -- [2]
				},
				[162103] = {
					"Executor Tarvold", -- [1]
					"Sanguine Depths", -- [2]
				},
				[86329] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[199717] = {
					"Nokhud Defender", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[165430] = {
					"Malignant Spawn", -- [1]
					"Plaguefall", -- [2]
				},
				[189227] = {
					"Qalashi Hunter", -- [1]
					"Neltharus", -- [2]
				},
				[199718] = {
					"Nokhud Huntmaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[163128] = {
					"Zolramus Sorcerer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[75839] = {
					"Vigilant Kaathar", -- [1]
					"Auchindoun", -- [2]
				},
				[168246] = {
					"Reanimated Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[86330] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[111022] = {
					"The Demon Within", -- [1]
					"The Nighthold", -- [2]
				},
				[199719] = {
					"Nokhud Wardog", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[105393] = {
					"Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[135239] = {
					"Spectral Witch Doctor", -- [1]
					"Kings' Rest", -- [2]
				},
				[29051] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[164921] = {
					"Drust Harvester", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[29307] = {
					"Drakkari Colossus", -- [1]
					"Gundrak", -- [2]
				},
				[111151] = {
					"Midnight Siphoner", -- [1]
					"The Nighthold", -- [2]
				},
				[190510] = {
					"Vault Guard", -- [1]
					"The Azure Vault", -- [2]
				},
				[93496] = {
					"Black Rose Apothecary", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[105906] = {
					"Eye of Il'gynoth", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[166970] = {
					"Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[75713] = {
					"Shadowmoon Bone-Mender", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[167994] = {
					"Ossified Conscript", -- [1]
					"Theater of Pain", -- [2]
				},
				[121003] = {
					"Rez the Tombwatcher", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[189232] = {
					"Kokia Blazehoof", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[166971] = {
					"Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[134945] = {
					"Gnomish Gyro-Engineer", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[93113] = {
					"Forsaken Dreadwing", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[134938] = {
					"Teldrassil Sentinel", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[117933] = {
					"Inquisitor Variss", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[124164] = {
					"Torment of Golganneth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[134881] = {
					"Icy Barrier", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[134193] = {
					"Stormwind Battlemage", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[134201] = {
					"Lady Jaina Proudmoore", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[134199] = {
					"Gilnean Shieldwall", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[167117] = {
					"Spinemaw Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[81983] = {
					"Verdant Mandragora", -- [1]
					"The Everbloom", -- [2]
				},
				[121004] = {
					"Razorjaw Myrmidon", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[195119] = {
					"Primalist Shockcaster", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[142319] = {
					"Stormwind Citizen", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[164926] = {
					"Drust Boughbreaker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[102781] = {
					"Fel Bat Pup", -- [1]
					"Black Rook Hold", -- [2]
				},
				[134197] = {
					"Stormwind Royal Guard", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[134198] = {
					"Stormwind Cleric", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[198702] = {
					"Unstable Frost", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[87229] = {
					"Iron Blood Mage", -- [1]
					"Highmaul", -- [2]
				},
				[93498] = {
					"Forsaken Deathguard", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[189235] = {
					"Overseer Lahar", -- [1]
					"Neltharus", -- [2]
				},
				[24080] = {
					"Dragonflayer Weaponsmith", -- [1]
					"Utgarde Keep", -- [2]
				},
				[75459] = {
					"Plagued Bat", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[134194] = {
					"Stormwind Knight", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[134990] = {
					"Charged Dust Devil", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167998] = {
					"Portal Guardian", -- [1]
					"Theater of Pain", -- [2]
				},
				[28732] = {
					"Anub'ar Warrior", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[142318] = {
					"Stormwind Citizen", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[134364] = {
					"Faithless Tender", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[189492] = {
					"Raszageth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[26930] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[97081] = {
					"King Bjorn", -- [1]
					"Halls of Valor", -- [2]
				},
				[28924] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[59545] = {
					"The Golden Beetle", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[26803] = {
					"Horde Cleric", -- [1]
					"The Nexus", -- [2]
				},
				[135759] = {
					"Earthwall Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[95674] = {
					"Fenryr", -- [1]
					"Halls of Valor", -- [2]
				},
				[164929] = {
					"Tirnenn Villager", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[191232] = {
					"Drakonid Stormbringer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[104246] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[190245] = {
					"Broodkeeper Diurna", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[81985] = {
					"Everbloom Tender", -- [1]
					"The Everbloom", -- [2]
				},
				[102583] = {
					"Fel Scorcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[131666] = {
					"Coven Thornshaper", -- [1]
					"Waycrest Manor", -- [2]
				},
				[167966] = {
					"Experimental Sludge", -- [1]
					"De Other Side", -- [2]
				},
				[29340] = {
					"Anub'ar Brood Keeper", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[125612] = {
					"Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[98970] = {
					"Latosius", -- [1]
					"Black Rook Hold", -- [2]
				},
				[102788] = {
					"Felspite Dominator", -- [1]
					"Black Rook Hold", -- [2]
				},
				[82336] = {
					"Goren Burrower", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[98696] = {
					"Illysanna Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[187192] = {
					"Rageclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[95675] = {
					"God-King Skovald", -- [1]
					"Halls of Valor", -- [2]
				},
				[65317] = {
					"Xiang", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[152905] = {
					"Tower Sentinel", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[104247] = {
					"Duskwatch Arcanist", -- [1]
					"Court of Stars", -- [2]
				},
				[134994] = {
					"Spectral Headhunter", -- [1]
					"Kings' Rest", -- [2]
				},
				[98362] = {
					"Troubled Soul", -- [1]
					"Black Rook Hold", -- [2]
				},
				[102584] = {
					"Malignant Defiler", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[134202] = {
					"Anduin Wrynn", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[29820] = {
					"Drakkari God Hunter", -- [1]
					"Gundrak", -- [2]
				},
				[101549] = {
					"Arcane Minion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[81820] = {
					"Everbloom Mender", -- [1]
					"The Everbloom", -- [2]
				},
				[103224] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[28921] = {
					"Hadronox", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[195842] = {
					"Ukhel Corruptor", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[75193] = {
					"Bloodmaul Overseer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[118065] = {
					"Smoldering Infernal", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[95676] = {
					"Odyn", -- [1]
					"Halls of Valor", -- [2]
				},
				[36565] = {
					"Apothecary Baxter", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[165189] = {
					"Somber Dawn", -- [1]
					"Theater of Pain", -- [2]
				},
				[165076] = {
					"Gluttonous Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[184124] = {
					"Sentinel Talondras", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[198709] = {
					"Unstable Earth", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[100250] = {
					"Binder Ashioi", -- [1]
					"Eye of Azshara", -- [2]
				},
				[135764] = {
					"Explosive Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[100249] = {
					"Channeler Varisz", -- [1]
					"Eye of Azshara", -- [2]
				},
				[91792] = {
					"Stormwake Hydra", -- [1]
					"Eye of Azshara", -- [2]
				},
				[91793] = {
					"Seaspray Crab", -- [1]
					"Eye of Azshara", -- [2]
				},
				[167493] = {
					"Venomous Sniper", -- [1]
					"Plaguefall", -- [2]
				},
				[184125] = {
					"Chrono-Lord Deios", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[91790] = {
					"Mak'rana Siltwalker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[89280] = {
					"Enthralled Mutant", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[124207] = {
					"Fel-Charged Obfuscator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[98813] = {
					"Bloodscent Felhound", -- [1]
					"Black Rook Hold", -- [2]
				},
				[134139] = {
					"Shrine Templar", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[86275] = {
					"Gorian Enforcer", -- [1]
					"Highmaul", -- [2]
				},
				[91784] = {
					"Warlord Parjesh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[99629] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[99630] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[28733] = {
					"Anub'ar Shadowcaster", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[28923] = {
					"Loken", -- [1]
					"Halls of Lightning", -- [2]
				},
				[112405] = {
					"Vhell", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[26782] = {
					"Crystalline Keeper", -- [1]
					"The Nexus", -- [2]
				},
				[171333] = {
					"Atal'ai Devoted", -- [1]
					"De Other Side", -- [2]
				},
				[112118] = {
					"Tainted Bloodpetal", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[28925] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[168007] = {
					"Empowered Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[134195] = {
					"Stormwind Guard", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[99644] = {
					"Felguard Annihilator", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[192955] = {
					"Draconic Illusion", -- [1]
					"The Azure Vault", -- [2]
				},
				[134232] = {
					"Hired Assassin", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[29117] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[126767] = {
					"Clubfist Beastlord", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[91785] = {
					"Wandering Shellback", -- [1]
					"Broken Isles", -- [2]
				},
				[29213] = {
					"Anub'ar Darter", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29874] = {
					"Drakkari Inciter", -- [1]
					"Gundrak", -- [2]
				},
				[76104] = {
					"Monstrous Corpse Spider", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[97084] = {
					"King Tor", -- [1]
					"Halls of Valor", -- [2]
				},
				[91787] = {
					"Cove Seagull", -- [1]
					"Eye of Azshara", -- [2]
				},
				[185534] = {
					"Bonebolt Hunter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[200761] = {
					"Wild Ohuna", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[113013] = {
					"Felsworn Shadowblade", -- [1]
					"The Nighthold", -- [2]
				},
				[163915] = {
					"Hatchling Nest", -- [1]
					"Plaguefall", -- [2]
				},
				[232379] = {
					"Monument Base", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[164427] = {
					"Reanimated Warrior", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[75209] = {
					"Molten Earth Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[123906] = {
					"Garothi Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[91808] = {
					"Serpentrix", -- [1]
					"Eye of Azshara", -- [2]
				},
				[104251] = {
					"Duskwatch Sentry", -- [1]
					"Court of Stars", -- [2]
				},
				[184130] = {
					"Earthen Custodian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[94272] = {
					"Ensign Ward", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[80071] = {
					"Bladespire Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[164873] = {
					"Runestag Elderhorn", -- [1]
					"De Other Side", -- [2]
				},
				[163862] = {
					"Defender of Many Eyes", -- [1]
					"Plaguefall", -- [2]
				},
				[91782] = {
					"Hatecoil Crusher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[101414] = {
					"Saltscale Skulker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[187969] = {
					"Flashfrost Earthshaper", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[184131] = {
					"Earthen Guardian", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[194622] = {
					"Scorchling", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[24084] = {
					"Tunneling Ghoul", -- [1]
					"Utgarde Keep", -- [2]
				},
				[131677] = {
					"Heartsbane Runeweaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[75210] = {
					"Bloodmaul Warder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[186664] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[165197] = {
					"Skeletal Monstrosity", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[28410] = {
					"Dragonflayer Spiritualist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[184132] = {
					"Earthen Warder", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[102566] = {
					"Grimhorn the Enslaver", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[104636] = {
					"Cenarius", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[195135] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[91781] = {
					"Hatecoil Warrior", -- [1]
					"Eye of Azshara", -- [2]
				},
				[200945] = {
					"Nokhud Warmonger", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[29240] = {
					"Stormforged Lieutenant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[74571] = {
					"Calamity", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[97678] = {
					"Aranasi Broodmother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[89156] = {
					"Wildfire Elemental", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[164550] = {
					"Slithering Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[170572] = {
					"Atal'ai Hoodoo Hexxer", -- [1]
					"De Other Side", -- [2]
				},
				[75211] = {
					"Magma Lord", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[162047] = {
					"Insatiable Brute", -- [1]
					"Sanguine Depths", -- [2]
				},
				[116407] = {
					"Harjatan", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[95886] = {
					"Ash'Golm", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[81864] = {
					"Dreadpetal", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[98368] = {
					"Ghostly Protector", -- [1]
					"Black Rook Hold", -- [2]
				},
				[75979] = {
					"Exhumed Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[194487] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[112402] = {
					"Oku", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[135007] = {
					"Orb Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[171341] = {
					"Bladebeak Hatchling", -- [1]
					"De Other Side", -- [2]
				},
				[155221] = {
					"Faeleaf Tender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28926] = {
					"Spark of Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[135263] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[113048] = {
					"Corrupted Deer", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[77131] = {
					"Sargerei Spirit-Tender", -- [1]
					"Auchindoun", -- [2]
				},
				[128434] = {
					"Feasting Skyscreamer", -- [1]
					"Atal'Dazar", -- [2]
				},
				[197697] = {
					"Flamegullet", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[29118] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[184020] = {
					"Hulking Berserker", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[73805] = {
					"Corrupted Toad", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[29214] = {
					"Anub'ar Assassin", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[130179] = {
					"Apocalypsis Module", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[122532] = {
					"Ember of Taeshalach", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[98963] = {
					"Blazing Imp", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[197698] = {
					"Thunderhead", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[171343] = {
					"Bladebeak Matriarch", -- [1]
					"De Other Side", -- [2]
				},
				[141283] = {
					"Kul Tiran Halberd", -- [1]
					"Siege of Boralus", -- [2]
				},
				[112671] = {
					"Duskwatch Battle-Magus", -- [1]
					"The Nighthold", -- [2]
				},
				[77132] = {
					"Sargerei Zealot", -- [1]
					"Auchindoun", -- [2]
				},
				[186696] = {
					"Quaking Totem", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[36535] = {
					"Corrupted Soul Fragment", -- [1]
					"The Forge of Souls", -- [2]
				},
				[98810] = {
					"Wrathguard Bladelord", -- [1]
					"Black Rook Hold", -- [2]
				},
				[29630] = {
					"Fanged Pit Viper", -- [1]
					"Gundrak", -- [2]
				},
				[95939] = {
					"Skrog Tidestomper", -- [1]
					"Eye of Azshara", -- [2]
				},
				[194816] = {
					"Forgewrought Monstrosity", -- [1]
					"Neltharus", -- [2]
				},
				[194373] = {
					"Brackenhide Gnoll", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[98370] = {
					"Ghostly Councilor", -- [1]
					"Black Rook Hold", -- [2]
				},
				[162133] = {
					"General Kaal", -- [1]
					"Sanguine Depths", -- [2]
				},
				[112955] = {
					"Shadescale Wyrm", -- [1]
					"The Nighthold", -- [2]
				},
				[29822] = {
					"Drakkari Fire Weaver", -- [1]
					"Gundrak", -- [2]
				},
				[111164] = {
					"Twilight Stardancer", -- [1]
					"The Nighthold", -- [2]
				},
				[163157] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[123702] = {
					"Feltouched Skitterer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[97219] = {
					"Solsten", -- [1]
					"Halls of Valor", -- [2]
				},
				[29982] = {
					"Drakkari Raider", -- [1]
					"Gundrak", -- [2]
				},
				[99649] = {
					"Dreadlord Mendacius", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[131685] = {
					"Runic Disciple", -- [1]
					"Waycrest Manor", -- [2]
				},
				[85449] = {
					"Grom'kar Commander", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[28729] = {
					"Watcher Narjil", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[95940] = {
					"Bitterbrine Scavenger", -- [1]
					"Eye of Azshara", -- [2]
				},
				[77700] = {
					"Shadowmoon Exhumer", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[98243] = {
					"Soul-Torn Champion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[199916] = {
					"Decaying Slime", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[28734] = {
					"Anub'ar Skirmisher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[112956] = {
					"Shimmering Manaspine", -- [1]
					"The Nighthold", -- [2]
				},
				[195399] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[121400] = {
					"Accusator Gnazh", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[114212] = {
					"Felguard", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[198214] = {
					"Broodguardian Ziruss", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[192329] = {
					"Territorial Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[196679] = {
					"Frozen Shroud", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[77006] = {
					"Corpse Skitterling", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[111933] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[24079] = {
					"Dragonflayer Forge Master", -- [1]
					"Utgarde Keep", -- [2]
				},
				[36499] = {
					"Soulguard Reaper", -- [1]
					"The Forge of Souls", -- [2]
				},
				[136549] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[112445] = {
					"<Away> Johnny Awesome", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[122778] = {
					"Annihilator", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[168022] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[92932] = {
					"Tinkmaster Overspark", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[169428] = {
					"Wrathguard", -- [1]
					"The Nexus", -- [2]
				},
				[127723] = {
					"Imperator Deconix", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[111166] = {
					"Resolute Courtesan", -- [1]
					"The Nighthold", -- [2]
				},
				[164414] = {
					"Reanimated Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[108542] = {
					"Skittering Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[197298] = {
					"Nascent Proto-Dragon", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[89161] = {
					"Gorian Mage-Lord", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[164185] = {
					"Echelon", -- [1]
					"Halls of Atonement", -- [2]
				},
				[137830] = {
					"Pallid Gorger", -- [1]
					"Waycrest Manor", -- [2]
				},
				[170838] = {
					"Unyielding Contender", -- [1]
					"Theater of Pain", -- [2]
				},
				[95885] = {
					"Tirathon Saltheril", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[29119] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[168717] = {
					"Forsworn Justicar", -- [1]
					"Spires of Ascension", -- [2]
				},
				[118715] = {
					"Reanimated Templar", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[26734] = {
					"Azure Enforcer", -- [1]
					"The Nexus", -- [2]
				},
				[100216] = {
					"Hatecoil Wrangler", -- [1]
					"Eye of Azshara", -- [2]
				},
				[75829] = {
					"Nhallish", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[169426] = {
					"Infernal", -- [1]
					"The Nexus", -- [2]
				},
				[107073] = {
					"Duskwatch Reinforcement", -- [1]
					"Court of Stars", -- [2]
				},
				[111295] = {
					"Domesticated Manasaber", -- [1]
					"The Nighthold", -- [2]
				},
				[127799] = {
					"Dazar'ai Honor Guard", -- [1]
					"Atal'Dazar", -- [2]
				},
				[192333] = {
					"Alpha Eagle", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[26735] = {
					"Azure Scale-Binder", -- [1]
					"The Nexus", -- [2]
				},
				[133482] = {
					"Crawler Mine", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[193462] = {
					"Batak", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[97068] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[173360] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[118460] = {
					"Engine of Souls", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[173655] = {
					"Mistveil Matriarch", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165824] = {
					"Nar'zudah", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[75857] = {
					"Unstable Magma Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[131436] = {
					"Chosen Blood Matron", -- [1]
					"The Underrot", -- [2]
				},
				[184331] = {
					"Infinite Timereaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[191311] = {
					"Infinite Whelp", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[55659] = {
					"Wild Imp", -- [1]
					"Theater of Pain", -- [2]
				},
				[135235] = {
					"Spectral Beastmaster", -- [1]
					"Kings' Rest", -- [2]
				},
				[121985] = {
					"Flame of Taeshalach", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[124166] = {
					"Torment of Khaz'goroth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[24085] = {
					"Dragonflayer Overseer", -- [1]
					"Utgarde Keep", -- [2]
				},
				[194894] = {
					"Primalist Stormspeaker", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[29836] = {
					"Drakkari Battle Rider", -- [1]
					"Gundrak", -- [2]
				},
				[189265] = {
					"Qalashi Bonetender", -- [1]
					"Neltharus", -- [2]
				},
				[23970] = {
					"Vrykul Skeleton", -- [1]
					"Utgarde Keep", -- [2]
				},
				[112320] = {
					"Haunting Nightmare", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[165410] = {
					"High Adjudicator Aleez", -- [1]
					"Halls of Atonement", -- [2]
				},
				[189266] = {
					"Qalashi Trainee", -- [1]
					"Neltharus", -- [2]
				},
				[77905] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[194895] = {
					"Unstable Squall", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[96584] = {
					"Immoliant Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[191313] = {
					"Bubbling Sapling", -- [1]
					"The Azure Vault", -- [2]
				},
				[123451] = {
					"Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[97197] = {
					"Valarjar Purifier", -- [1]
					"Halls of Valor", -- [2]
				},
				[74579] = {
					"Molten Elemental", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[107459] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[131812] = {
					"Heartsbane Soulcharmer", -- [1]
					"Waycrest Manor", -- [2]
				},
				[194896] = {
					"Primal Stormshield", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189478] = {
					"Forgemaster Gorek", -- [1]
					"Neltharus", -- [2]
				},
				[130488] = {
					"Mech Jockey", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[36666] = {
					"Spectral Warden", -- [1]
					"The Forge of Souls", -- [2]
				},
				[118462] = {
					"Soul Queen Dejahna", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[82308] = {
					"Shadowmoon Stalker", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[188244] = {
					"Primal Juggernaut", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[98681] = {
					"Rook Spinner", -- [1]
					"Black Rook Hold", -- [2]
				},
				[194897] = {
					"Stormsurge Totem", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[24082] = {
					"Proto-Drake Handler", -- [1]
					"Utgarde Keep", -- [2]
				},
				[113089] = {
					"Defiled Keeper", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[123452] = {
					"Fel Lord", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[84687] = {
					"Azuka Bladefury", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[84990] = {
					"Addled Arcanomancer", -- [1]
					"The Everbloom", -- [2]
				},
				[119742] = {
					"Felguard Invader", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[186122] = {
					"Rira Hackclaw", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[194898] = {
					"Primalist Arcblade", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[189901] = {
					"Warlord Sargha", -- [1]
					"Neltharus", -- [2]
				},
				[164705] = {
					"Pestilence Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[126764] = {
					"Bladesworn Ravager", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[29120] = {
					"Anub'arak", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[134093] = {
					"Zul the Prophet", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[190401] = {
					"Gusting Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[29216] = {
					"Anub'ar Guardian", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[82175] = {
					"Silverwing Kaliri", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[164450] = {
					"Dealer Xy'exa", -- [1]
					"De Other Side", -- [2]
				},
				[113090] = {
					"Corrupted Gatewarden", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[86607] = {
					"Iron Flame Technician", -- [1]
					"Highmaul", -- [2]
				},
				[161124] = {
					"Urg'roth, Breaker of Heroes", -- [1]
					"The Underrot", -- [2]
				},
				[190294] = {
					"Nokhud Stormcaster", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[121790] = {
					"Fleetlord Dominator", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[151657] = {
					"Bomb Tonk", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[115905] = {
					"Fel Soul", -- [1]
					"The Nighthold", -- [2]
				},
				[164451] = {
					"Dessia the Decapitator", -- [1]
					"Theater of Pain", -- [2]
				},
				[164707] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[26125] = {
					"Mudtaker", -- [1]
					"Court of Stars", -- [2]
				},
				[95947] = {
					"Mak'rana Hardshell", -- [1]
					"Eye of Azshara", -- [2]
				},
				[119941] = {
					"Soul Residue", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[194389] = {
					"Lava Spawn", -- [1]
					"Neltharus", -- [2]
				},
				[174175] = {
					"Loyal Stoneborn", -- [1]
					"Halls of Atonement", -- [2]
				},
				[124828] = {
					"Argus the Unmaker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[96587] = {
					"Felsworn Infester", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[113091] = {
					"Tainted Plainstrider", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[135246] = {
					"\"Stabby\" Lottie", -- [1]
					"The Rotting Mire (Islands 9)", -- [2]
				},
				[134092] = {
					"Princess Talanji", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[128060] = {
					"Priestess of Delirium", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[194990] = {
					"Stormseeker Acolyte", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[80979] = {
					"Gronn Earthbreaker", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[131445] = {
					"Block Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[126776] = {
					"Slobbering Fiend", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[170850] = {
					"Raging Bloodhorn", -- [1]
					"Theater of Pain", -- [2]
				},
				[118022] = {
					"Infernal Chaosbringer", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[185691] = {
					"Vicious Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[106311] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[29931] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[196694] = {
					"Arcane Forager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[114883] = {
					"Grand Magister Rommath", -- [1]
					"The Nighthold", -- [2]
				},
				[190404] = {
					"Subterranean Proto-Dragon", -- [1]
					"Halls of Infusion", -- [2]
				},
				[113092] = {
					"Swarming Dread", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[86609] = {
					"Iron Warmaster", -- [1]
					"Highmaul", -- [2]
				},
				[195927] = {
					"Soulharvester Galtmaa", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[89168] = {
					"Gorian Warcaller", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[134091] = {
					"7th Legion Battlemage", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[80980] = {
					"Gronnling Groundshaker", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[189247] = {
					"Tamed Phoenix", -- [1]
					"Neltharus", -- [2]
				},
				[141938] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[127235] = {
					"Garothi Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[114244] = {
					"Eredar Mageslayer", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[195928] = {
					"Soulharvester Duuren", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[108359] = {
					"Volatile Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[188252] = {
					"Melidrussa Chillworn", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[112709] = {
					"Promenade Guard", -- [1]
					"The Nighthold", -- [2]
				},
				[141939] = {
					"Ashvane Spotter", -- [1]
					"Siege of Boralus", -- [2]
				},
				[26722] = {
					"Azure Magus", -- [1]
					"The Nexus", -- [2]
				},
				[113093] = {
					"Infected Gazelle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[103044] = {
					"Dread Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[195929] = {
					"Soulharvester Tumen", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[114245] = {
					"Eredar Mageslayer", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[186206] = {
					"Cruel Bonecrusher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[28961] = {
					"Titanium Siegebreaker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[171448] = {
					"Dreadful Huntmaster", -- [1]
					"Sanguine Depths", -- [2]
				},
				[195930] = {
					"Soulharvester Mandakh", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[29153] = {
					"Animated Bones", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[126527] = {
					"Fel Portal", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[112326] = {
					"Akama", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[108360] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[190407] = {
					"Aqua Rager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[29217] = {
					"Anub'ar Venomancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[137591] = {
					"Healing Tide Totem", -- [1]
					"Kings' Rest", -- [2]
				},
				[84308] = {
					"Ravager Wasp", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[187231] = {
					"Wither Biter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[86611] = {
					"Mind Fungus", -- [1]
					"Highmaul", -- [2]
				},
				[111303] = {
					"Nightborne Sage", -- [1]
					"The Nighthold", -- [2]
				},
				[80982] = {
					"Goren Burrower", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[186208] = {
					"Rotbow Stalker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[89170] = {
					"Gorian Battle Boar", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[120003] = {
					"Warlord Darjah", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[120182] = {
					"Tormented Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[193373] = {
					"Nokhud Thunderfist", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[168891] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[80818] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[81750] = {
					"Bloodmaul Ogron", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[81984] = {
					"Gnarlroot", -- [1]
					"The Everbloom", -- [2]
				},
				[77140] = {
					"Amaukwa", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[117228] = {
					"Empowered Doomherald", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[84309] = {
					"Noxious Mandragora", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[98677] = {
					"Rook Spiderling", -- [1]
					"Black Rook Hold", -- [2]
				},
				[86612] = {
					"Spore Shooter", -- [1]
					"Highmaul", -- [2]
				},
				[168425] = {
					"Forsworn Annihilator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[121399] = {
					"Inquisitor Sebilus", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[75194] = {
					"Gnasher", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[89171] = {
					"Gorian Battle Boar", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[117957] = {
					"Tormented Soul", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[164461] = {
					"Sathel the Accursed", -- [1]
					"Theater of Pain", -- [2]
				},
				[134012] = {
					"Taskmaster Askari", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[185656] = {
					"Filth Caller", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[120516] = {
					"Razorjaw Swiftfin", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[181861] = {
					"Magmatusk", -- [1]
					"Neltharus", -- [2]
				},
				[121021] = {
					"Shadowsworn Invader", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[130661] = {
					"Venture Co. Earthshaper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[172981] = {
					"Kyrian Stitchwerk", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[84310] = {
					"Thorny Lasher", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[124227] = {
					"Volant Kerapteron", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[129600] = {
					"Bilge Rat Brinescale", -- [1]
					"Freehold", -- [2]
				},
				[197982] = {
					"Storm Warrior", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[167533] = {
					"Advent Nevermore", -- [1]
					"Theater of Pain", -- [2]
				},
				[101326] = {
					"Honored Ancestor", -- [1]
					"Halls of Valor", -- [2]
				},
				[112329] = {
					"Velgrim", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[36478] = {
					"Soulguard Watchman", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[164463] = {
					"Paceran the Virulent", -- [1]
					"Theater of Pain", -- [2]
				},
				[28546] = {
					"Ionar", -- [1]
					"Halls of Lightning", -- [2]
				},
				[28578] = {
					"Hardened Steel Reaver", -- [1]
					"Halls of Lightning", -- [2]
				},
				[102094] = {
					"Risen Swordsman", -- [1]
					"Black Rook Hold", -- [2]
				},
				[167534] = {
					"Rek the Hardened", -- [1]
					"Theater of Pain", -- [2]
				},
				[120477] = {
					"Deep Stalker", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[184422] = {
					"Emberon", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[26723] = {
					"Keristrasza", -- [1]
					"The Nexus", -- [2]
				},
				[84311] = {
					"Spiteleaf Stabber", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[167607] = {
					"Stoneborn Slasher", -- [1]
					"Halls of Atonement", -- [2]
				},
				[129601] = {
					"Cutwater Harpooner", -- [1]
					"Freehold", -- [2]
				},
				[76444] = {
					"Subjugated Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[127810] = {
					"Slobbering Fiend", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[75715] = {
					"Reanimated Ritual Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[134087] = {
					"Jailed Thief", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[132481] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[103758] = {
					"Star Augur Etraeus", -- [1]
					"The Nighthold", -- [2]
				},
				[101839] = {
					"Risen Companion", -- [1]
					"Black Rook Hold", -- [2]
				},
				[104270] = {
					"Guardian Construct", -- [1]
					"Court of Stars", -- [2]
				},
				[102095] = {
					"Risen Lancer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[167536] = {
					"Harugia the Bloodthirsty", -- [1]
					"Theater of Pain", -- [2]
				},
				[131009] = {
					"Spirit of Gold", -- [1]
					"Atal'Dazar", -- [2]
				},
				[121030] = {
					"Fan'verg the Vicious", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[135552] = {
					"Deathtouched Slaver", -- [1]
					"Waycrest Manor", -- [2]
				},
				[84312] = {
					"Gnarled Ancient", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[120449] = {
					"Defensive Countermeasure", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[129602] = {
					"Irontide Enforcer", -- [1]
					"Freehold", -- [2]
				},
				[163086] = {
					"Rancid Gasbag", -- [1]
					"Theater of Pain", -- [2]
				},
				[121498] = {
					"Twilight Soul", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[111563] = {
					"Duskwatch Guard", -- [1]
					"Court of Stars", -- [2]
				},
				[95861] = {
					"Hatecoil Oracle", -- [1]
					"Eye of Azshara", -- [2]
				},
				[134086] = {
					"Incarcerated Troublemaker", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[197219] = {
					"Vile Lasher", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[187240] = {
					"Drakonid Breaker", -- [1]
					"The Azure Vault", -- [2]
				},
				[77404] = {
					"The Butcher", -- [1]
					"Highmaul", -- [2]
				},
				[171376] = {
					"Head Custodian Javlin", -- [1]
					"Sanguine Depths", -- [2]
				},
				[167538] = {
					"Dokigg the Brutalizer", -- [1]
					"Theater of Pain", -- [2]
				},
				[118728] = {
					"Ghastly Bonewarden", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[137345] = {
					"Officer Fairbanks", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[194917] = {
					"Arctic Summoner", -- [1]
					"Emerald Dreamway", -- [2]
				},
				[84313] = {
					"Botani Lifebinder", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[29826] = {
					"Drakkari Medicine Man", -- [1]
					"Gundrak", -- [2]
				},
				[127497] = {
					"Ashvane Warden", -- [1]
					"Tol Dagor", -- [2]
				},
				[191847] = {
					"Nokhud Plainstomper", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[112668] = {
					"Infernal Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[198500] = {
					"Council Earthcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[120463] = {
					"Undersea Custodian", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[79068] = {
					"Iron Grunt", -- [1]
					"Highmaul", -- [2]
				},
				[119940] = {
					"Fallen Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[187242] = {
					"Tarasek Looter", -- [1]
					"The Azure Vault", -- [2]
				},
				[99922] = {
					"Ebonclaw Packmate", -- [1]
					"Halls of Valor", -- [2]
				},
				[196263] = {
					"Nokhud Neophyte", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[24069] = {
					"Dragonflayer Bonecrusher", -- [1]
					"Utgarde Keep", -- [2]
				},
				[118729] = {
					"Fallen Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[127045] = {
					"Antoran Champion", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[28419] = {
					"Frenzied Geist", -- [1]
					"Utgarde Keep", -- [2]
				},
				[134085] = {
					"Imprisoned Thug", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[82779] = {
					"Acidback Roller", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[198502] = {
					"Council Stormcaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[118730] = {
					"Soul Residue", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[188011] = {
					"Primal Terrasentry", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[186220] = {
					"Brackenhide Shaper", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[190377] = {
					"Primalist Icecaller", -- [1]
					"Halls of Infusion", -- [2]
				},
				[120009] = {
					"Naisha", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[126918] = {
					"Irontide Crackshot", -- [1]
					"Freehold", -- [2]
				},
				[28547] = {
					"Storming Vortex", -- [1]
					"Halls of Lightning", -- [2]
				},
				[28579] = {
					"Hardened Steel Berserker", -- [1]
					"Halls of Lightning", -- [2]
				},
				[112333] = {
					"Jesibelle", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[196200] = {
					"Algeth'ar Echoknight", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[198503] = {
					"Council Flamecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[196712] = {
					"Nullification Device", -- [1]
					"Halls of Infusion", -- [2]
				},
				[168310] = {
					"Plagueroc", -- [1]
					"Plaguefall", -- [2]
				},
				[112973] = {
					"Duskwatch Weaver", -- [1]
					"The Nighthold", -- [2]
				},
				[98035] = {
					"Dreadstalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[98900] = {
					"Wyrmtongue Trickster", -- [1]
					"Black Rook Hold", -- [2]
				},
				[170490] = {
					"Atal'ai High Priest", -- [1]
					"De Other Side", -- [2]
				},
				[186191] = {
					"Decay Speaker", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[111980] = {
					"Nightmother", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[111852] = {
					"Rothos", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[166264] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[115767] = {
					"Mistress Sassz'ine", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[134024] = {
					"Devouring Maggot", -- [1]
					"Waycrest Manor", -- [2]
				},
				[75360] = {
					"Searing Ember", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[84985] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[104274] = {
					"Baalgar the Watchful", -- [1]
					"Court of Stars", -- [2]
				},
				[137351] = {
					"Stormwind City Guard", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[174197] = {
					"Battlefield Ritualist", -- [1]
					"Theater of Pain", -- [2]
				},
				[164218] = {
					"Lord Chamberlain", -- [1]
					"Halls of Atonement", -- [2]
				},
				[162051] = {
					"Frenzied Ghoul", -- [1]
					"Sanguine Depths", -- [2]
				},
				[165137] = {
					"Zolramus Gatekeeper", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[134083] = {
					"7th Legion Enforcer", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[197985] = {
					"Flame Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[196203] = {
					"Ethereal Restorer", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[77890] = {
					"Durag the Dominator", -- [1]
					"Auchindoun", -- [2]
				},
				[165408] = {
					"Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[166266] = {
					"Spare Parts", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[150146] = {
					"Scrapbone Shaman", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[194469] = {
					"Fledgling Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[171384] = {
					"Research Scribe", -- [1]
					"Sanguine Depths", -- [2]
				},
				[112335] = {
					"Scarab Lord Ahzesh", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[120651] = {
					"Explosives", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[128967] = {
					"Ashvane Sniper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[168058] = {
					"Infused Quill-feather", -- [1]
					"Sanguine Depths", -- [2]
				},
				[186737] = {
					"Telash Greywing", -- [1]
					"The Azure Vault", -- [2]
				},
				[28587] = {
					"Volkhan", -- [1]
					"Halls of Lightning", -- [2]
				},
				[113103] = {
					"Corrupted Swoop", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[117154] = {
					"Razorjaw Acolyte", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[77134] = {
					"Sargerei Cleric", -- [1]
					"Auchindoun", -- [2]
				},
				[135167] = {
					"Spectral Berserker", -- [1]
					"Kings' Rest", -- [2]
				},
				[186226] = {
					"Fetid Rotsinger", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[120012] = {
					"Dresanoth", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[186738] = {
					"Umbrelskul", -- [1]
					"The Azure Vault", -- [2]
				},
				[166524] = {
					"Deathwalker", -- [1]
					"Theater of Pain", -- [2]
				},
				[116939] = {
					"Fallen Avatar", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[95832] = {
					"Valarjar Shieldmaiden", -- [1]
					"Halls of Valor", -- [2]
				},
				[167111] = {
					"Spinemaw Staghorn", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[186227] = {
					"Monstrous Decay", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[175992] = {
					"Dutiful Attendant", -- [1]
					"Castle Nathria", -- [2]
				},
				[103691] = {
					"Essence of Corruption", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[186739] = {
					"Azureblade", -- [1]
					"The Azure Vault", -- [2]
				},
				[168572] = {
					"Fungi Stormer", -- [1]
					"Plaguefall", -- [2]
				},
				[117198] = {
					"Highlord Kruul", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[186420] = {
					"Earthen Weaver", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[170927] = {
					"Erupting Ooze", -- [1]
					"Plaguefall", -- [2]
				},
				[186740] = {
					"Arcane Construct", -- [1]
					"The Azure Vault", -- [2]
				},
				[195696] = {
					"Primalist Thunderbeast", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[155830] = {
					"Mawsworn Disciple", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[120013] = {
					"The Dread Stalker", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[194467] = {
					"Brackenhide Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[57080] = {
					"Corrupted Scroll", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[95833] = {
					"Hyrja", -- [1]
					"Halls of Valor", -- [2]
				},
				[112337] = {
					"Nisstyr", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[104277] = {
					"Legion Hound", -- [1]
					"Court of Stars", -- [2]
				},
				[128969] = {
					"Ashvane Commander", -- [1]
					"Siege of Boralus", -- [2]
				},
				[127050] = {
					"Fel Portal", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[186741] = {
					"Arcane Elemental", -- [1]
					"The Azure Vault", -- [2]
				},
				[168574] = {
					"Pestilent Harvester", -- [1]
					"Plaguefall", -- [2]
				},
				[82400] = {
					"Ogron Brute", -- [1]
					"Highmaul", -- [2]
				},
				[195697] = {
					"Thunderbeast Rider", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[82528] = {
					"Gorian Arcanist", -- [1]
					"Highmaul", -- [2]
				},
				[105301] = {
					"Expedient Elemental", -- [1]
					"The Nighthold", -- [2]
				},
				[157572] = {
					"Mawsworn Firecaller", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28836] = {
					"Stormforged Runeshaper", -- [1]
					"Halls of Lightning", -- [2]
				},
				[122469] = {
					"Diima, Mother of Gloom", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[132491] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[164737] = {
					"Brood Ambusher", -- [1]
					"Plaguefall", -- [2]
				},
				[95834] = {
					"Valarjar Mystic", -- [1]
					"Halls of Valor", -- [2]
				},
				[189813] = {
					"Dathea, Ascended", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163458] = {
					"Forsworn Castigator", -- [1]
					"Spires of Ascension", -- [2]
				},
				[167806] = {
					"Animated Sin", -- [1]
					"Halls of Atonement", -- [2]
				},
				[120201] = {
					"Spectral Guardian", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[98521] = {
					"Lord Etheldrin Ravencrest", -- [1]
					"Black Rook Hold", -- [2]
				},
				[29834] = {
					"Drakkari Frenzy", -- [1]
					"Gundrak", -- [2]
				},
				[162691] = {
					"Blightbone", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[93171] = {
					"Skeletal Gryphon", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[187767] = {
					"Embar Firepath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[163459] = {
					"Forsworn Mender", -- [1]
					"Spires of Ascension", -- [2]
				},
				[165762] = {
					"Soul Infuser", -- [1]
					"Castle Nathria", -- [2]
				},
				[104918] = {
					"Vigilant Duskwatch", -- [1]
					"Court of Stars", -- [2]
				},
				[56439] = {
					"Sha of Doubt", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[171181] = {
					"Territorial Bladebeak", -- [1]
					"De Other Side", -- [2]
				},
				[162692] = {
					"Amarth", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168878] = {
					"Rigged Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[165251] = {
					"Illusionary Vulpin", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[165222] = {
					"Zolramus Bonemender", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[112595] = {
					"Shal'dorei Archmage", -- [1]
					"The Nighthold", -- [2]
				},
				[164920] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[199027] = {
					"Magmas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168578] = {
					"Fungalmancer", -- [1]
					"Plaguefall", -- [2]
				},
				[162693] = {
					"Nalthor the Rimebinder", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[116689] = {
					"Atrigan", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[189816] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[123726] = {
					"Fel-Powered Purifier", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[113052] = {
					"Dreadguard", -- [1]
					"The Nighthold", -- [2]
				},
				[86326] = {
					"Breaker Ritualist", -- [1]
					"Highmaul", -- [2]
				},
				[199028] = {
					"Glacias", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168579] = {
					"Fen Hatchling", -- [1]
					"Plaguefall", -- [2]
				},
				[170882] = {
					"Bone Magus", -- [1]
					"Theater of Pain", -- [2]
				},
				[118518] = {
					"Priestess Lunaspyre", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[122468] = {
					"Noura, Mother of Flames", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[188026] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[24071] = {
					"Dragonflayer Heartsplitter", -- [1]
					"Utgarde Keep", -- [2]
				},
				[112596] = {
					"Duskwatch Warden", -- [1]
					"The Nighthold", -- [2]
				},
				[199029] = {
					"Cyclas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[168580] = {
					"Plagueborer", -- [1]
					"Plaguefall", -- [2]
				},
				[200137] = {
					"Depraved Mistweaver", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[78437] = {
					"Gul'kosh", -- [1]
					"Auchindoun", -- [2]
				},
				[76518] = {
					"Ritual of Bones", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[56762] = {
					"Yu'lon", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[28581] = {
					"Stormforged Tactician", -- [1]
					"Halls of Lightning", -- [2]
				},
				[174210] = {
					"Blighted Sludge-Spewer", -- [1]
					"Theater of Pain", -- [2]
				},
				[199030] = {
					"Loamas", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[103769] = {
					"Xavius", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168837] = {
					"Stealthling", -- [1]
					"Plaguefall", -- [2]
				},
				[191610] = {
					"Goal of the Searing Blaze", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[187772] = {
					"Opalfang", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198263] = {
					"Stalwart Broodwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[116691] = {
					"Belac", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[188540] = {
					"Drenched Rager", -- [1]
					"Emerald Dreamway", -- [2]
				},
				[168326] = {
					"Shattered Visage", -- [1]
					"De Other Side", -- [2]
				},
				[168109] = {
					"Empowered Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[76263] = {
					"Sargerei Magus", -- [1]
					"Auchindoun", -- [2]
				},
				[82532] = {
					"Krush", -- [1]
					"Highmaul", -- [2]
				},
				[28837] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Lightning", -- [2]
				},
				[188067] = {
					"Flashfrost Chillweaver", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[112718] = {
					"Sidereal Familiar", -- [1]
					"The Nighthold", -- [2]
				},
				[28965] = {
					"Titanium Thunderer", -- [1]
					"Halls of Lightning", -- [2]
				},
				[113088] = {
					"Corrupted Feeler", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[150160] = {
					"Scrapbone Bully", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[111081] = {
					"Fulminant", -- [1]
					"The Nighthold", -- [2]
				},
				[111413] = {
					"Dark Devourers", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[104154] = {
					"Gul'dan", -- [1]
					"The Nighthold", -- [2]
				},
				[163457] = {
					"Forsworn Vanguard", -- [1]
					"Spires of Ascension", -- [2]
				},
				[112153] = {
					"Dire Shaman", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[165805] = {
					"Shade of Kael'thas", -- [1]
					"Castle Nathria", -- [2]
				},
				[105304] = {
					"Dominator Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[155432] = {
					"Enchanted Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[163882] = {
					"Decaying Flesh Giant", -- [1]
					"Plaguefall", -- [2]
				},
				[82533] = {
					"Smash", -- [1]
					"Highmaul", -- [2]
				},
				[165597] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[198266] = {
					"Pouncing Broodswarmer", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[129529] = {
					"Blacktooth Scrapper", -- [1]
					"Freehold", -- [2]
				},
				[73101] = {
					"Cursed Wolf", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[79508] = {
					"Felborne Abyssal", -- [1]
					"Auchindoun", -- [2]
				},
				[122578] = {
					"Kin'garoth", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[29573] = {
					"Drakkari Elemental", -- [1]
					"Gundrak", -- [2]
				},
				[122450] = {
					"Garothi Worldbreaker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[81638] = {
					"Aqueous Globule", -- [1]
					"The Everbloom", -- [2]
				},
				[165515] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[29637] = {
					"Crafty Snake", -- [1]
					"Gundrak", -- [2]
				},
				[163618] = {
					"Zolramus Necromancer", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171799] = {
					"Depths Warden", -- [1]
					"Sanguine Depths", -- [2]
				},
				[86372] = {
					"Melded Berserker", -- [1]
					"The Everbloom", -- [2]
				},
				[29829] = {
					"Drakkari Earthshaker", -- [1]
					"Gundrak", -- [2]
				},
				[113239] = {
					"Gibbering Felspawn", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[165260] = {
					"Oozing Leftovers", -- [1]
					"Theater of Pain", -- [2]
				},
				[131670] = {
					"Heartsbane Vinetwister", -- [1]
					"Waycrest Manor", -- [2]
				},
				[186242] = {
					"Skulking Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[169861] = {
					"Ickor Bileflesh", -- [1]
					"Plaguefall", -- [2]
				},
				[138465] = {
					"Ashvane Cannoneer", -- [1]
					"Siege of Boralus", -- [2]
				},
				[99678] = {
					"Lingering Corruption", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[168843] = {
					"Klotos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[113012] = {
					"Felsworn Chaos-Mage", -- [1]
					"The Nighthold", -- [2]
				},
				[135204] = {
					"Spectral Hex Priest", -- [1]
					"Kings' Rest", -- [2]
				},
				[81767] = {
					"Bloodmaul Flamespeaker", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[199037] = {
					"Primalist Shocktrooper", -- [1]
					"Halls of Infusion", -- [2]
				},
				[150165] = {
					"Slime Elemental", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[129232] = {
					"Mogul Razdunk", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[96608] = {
					"Ebonclaw Worg", -- [1]
					"Halls of Valor", -- [2]
				},
				[24200] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
				},
				[168968] = {
					"Plaguebound Fallen", -- [1]
					"Plaguefall", -- [2]
				},
				[74475] = {
					"Magmolatus", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[131587] = {
					"Bewitched Captain", -- [1]
					"Waycrest Manor", -- [2]
				},
				[111975] = {
					"Shadowfeather", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168361] = {
					"Fen Hornet", -- [1]
					"Plaguefall", -- [2]
				},
				[120021] = {
					"Kelpfist", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[168318] = {
					"Forsworn Goliath", -- [1]
					"Spires of Ascension", -- [2]
				},
				[168845] = {
					"Astronos", -- [1]
					"Spires of Ascension", -- [2]
				},
				[28582] = {
					"Stormforged Mender", -- [1]
					"Halls of Lightning", -- [2]
				},
				[84499] = {
					"Entanglement", -- [1]
					"The Everbloom", -- [2]
				},
				[196577] = {
					"Spellbound Battleaxe", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[120789] = {
					"Lieutenant Silvermight", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[26727] = {
					"Mage Hunter Ascendant", -- [1]
					"The Nexus", -- [2]
				},
				[194945] = {
					"Frost Shard", -- [1]
					"The Shadowlands", -- [2]
				},
				[96609] = {
					"Gildedfur Stag", -- [1]
					"Halls of Valor", -- [2]
				},
				[113113] = {
					"Essence of Nightmare", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[28838] = {
					"Titanium Vanguard", -- [1]
					"Halls of Lightning", -- [2]
				},
				[173053] = {
					"Afterimage of Lord Stavros", -- [1]
					"Castle Nathria", -- [2]
				},
				[150712] = {
					"Trixie Tazer", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[190340] = {
					"Refti Defender", -- [1]
					"Halls of Infusion", -- [2]
				},
				[29062] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[120022] = {
					"Deepmaw", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[168591] = {
					"Ravenous Dreadbat", -- [1]
					"Sanguine Depths", -- [2]
				},
				[114137] = {
					"Balaadur", -- [1]
					"Black Rook Hold [Scenario]", -- [2]
				},
				[95842] = {
					"Valarjar Thundercaller", -- [1]
					"Halls of Valor", -- [2]
				},
				[164552] = {
					"Rotmarrow Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[112474] = {
					"Corrupted Totem", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[196482] = {
					"Overgrown Ancient", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[111856] = {
					"Guardian Gorroc", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[97087] = {
					"Valarjar Champion", -- [1]
					"Halls of Valor", -- [2]
				},
				[150169] = {
					"Toxic Lurker", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[189318] = {
					"Infected Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[165010] = {
					"Congealed Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[162046] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[77889] = {
					"Grom'tash the Destructor", -- [1]
					"Auchindoun", -- [2]
				},
				[190342] = {
					"Containment Apparatus", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[135329] = {
					"Matron Bryndle", -- [1]
					"Waycrest Manor", -- [2]
				},
				[36272] = {
					"Apothecary Frye", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[36551] = {
					"Spiteful Apparition", -- [1]
					"The Forge of Souls", -- [2]
				},
				[111405] = {
					"Shadow Pounder", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[95843] = {
					"King Haldor", -- [1]
					"Halls of Valor", -- [2]
				},
				[116569] = {
					"Razorjaw Wavemender", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[194181] = {
					"Vexamus", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[104415] = {
					"Chronomatic Anomaly", -- [1]
					"The Nighthold", -- [2]
				},
				[29830] = {
					"Living Mojo", -- [1]
					"Gundrak", -- [2]
				},
				[131492] = {
					"Devout Blood Priest", -- [1]
					"The Underrot", -- [2]
				},
				[96611] = {
					"Angerhoof Bull", -- [1]
					"Halls of Valor", -- [2]
				},
				[111068] = {
					"Archmage Galeorn", -- [1]
					"Black Rook Hold", -- [2]
				},
				[123478] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[84713] = {
					"Ancestral Defender", -- [1]
					"Auchindoun Quest", -- [2]
				},
				[96934] = {
					"Valarjar Trapper", -- [1]
					"Halls of Valor", -- [2]
				},
				[165946] = {
					"Mordretha, the Endless Empress", -- [1]
					"Theater of Pain", -- [2]
				},
				[139425] = {
					"Crazed Incubator", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[85225] = {
					"Gorian Sorcerer", -- [1]
					"Highmaul", -- [2]
				},
				[164501] = {
					"Mistcaller", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[197509] = {
					"Primal Thundercloud", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[59598] = {
					"Lesser Sha", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[169875] = {
					"Shackled Soul", -- [1]
					"Theater of Pain", -- [2]
				},
				[104288] = {
					"Trilliax", -- [1]
					"The Nighthold", -- [2]
				},
				[98275] = {
					"Risen Archer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[153755] = {
					"Naeno Megacrash", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[194951] = {
					"Frost Shard", -- [1]
					"Emerald Dreamway", -- [2]
				},
				[184972] = {
					"Eranog", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[24201] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
				},
				[26794] = {
					"Ormorok the Tree-Shaper", -- [1]
					"The Nexus", -- [2]
				},
				[189340] = {
					"Chargath, Bane of Scales", -- [1]
					"Neltharus", -- [2]
				},
				[173714] = {
					"Mistveil Nightblossom", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[26730] = {
					"Mage Slayer", -- [1]
					"The Nexus", -- [2]
				},
				[36296] = {
					"Apothecary Hummel", -- [1]
					"Shadowfang Keep", -- [2]
				},
				[139799] = {
					"Ironhull Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[137892] = {
					"Crier Goodman", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[173016] = {
					"Corpse Collector", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[28583] = {
					"Blistering Steamrager", -- [1]
					"Halls of Lightning", -- [2]
				},
				[187771] = {
					"Kadros Icewrath", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[75452] = {
					"Bonemaw", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[126558] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[135241] = {
					"Bilge Rat Pillager", -- [1]
					"Siege of Boralus", -- [2]
				},
				[135846] = {
					"Sand-Crusted Striker", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[26728] = {
					"Mage Hunter Initiate", -- [1]
					"The Nexus", -- [2]
				},
				[26792] = {
					"Crystalline Protector", -- [1]
					"The Nexus", -- [2]
				},
				[123480] = {
					"Antoran Champion", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[125535] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[87025] = {
					"Horde Opportunist", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[190348] = {
					"Primalist Ravager", -- [1]
					"Halls of Infusion", -- [2]
				},
				[123477] = {
					"Antoran Doomguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[111333] = {
					"Taintheart Trickster", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[169753] = {
					"Famished Tick", -- [1]
					"Sanguine Depths", -- [2]
				},
				[29063] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[136643] = {
					"Azerite Extractor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[103225] = {
					"Acidmaw Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[165529] = {
					"Depraved Collector", -- [1]
					"Halls of Atonement", -- [2]
				},
				[103217] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[77935] = {
					"Sargerei Warden", -- [1]
					"Auchindoun", -- [2]
				},
				[98533] = {
					"Foul Mother", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164506] = {
					"Ancient Captain", -- [1]
					"Theater of Pain", -- [2]
				},
				[111071] = {
					"Pulsauron", -- [1]
					"The Nighthold", -- [2]
				},
				[168457] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[75191] = {
					"Bloodmaul Slaver", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[117596] = {
					"Razorjaw Gladiator", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[166275] = {
					"Mistveil Shaper", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[166276] = {
					"Mistveil Guardian", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[95852] = {
					"Nathanos Blightcaller", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[83892] = {
					"Life Warden Gola", -- [1]
					"The Everbloom", -- [2]
				},
				[134058] = {
					"Galecaller Faye", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[171887] = {
					"Slimy Smorgasbord", -- [1]
					"Plaguefall", -- [2]
				},
				[168969] = {
					"Gushing Slime", -- [1]
					"Plaguefall", -- [2]
				},
				[104278] = {
					"Felbound Enforcer", -- [1]
					"Court of Stars", -- [2]
				},
				[102683] = {
					"Emeriss", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[29735] = {
					"Savage Worg", -- [1]
					"Utgarde Keep", -- [2]
				},
				[166299] = {
					"Mistveil Tender", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[129367] = {
					"Bilge Rat Tempest", -- [1]
					"Siege of Boralus", -- [2]
				},
				[195821] = {
					"Nokhud Saboteur", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[196202] = {
					"Spectral Invoker", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[84717] = {
					"Ancestral Prelate", -- [1]
					"Auchindoun Quest", -- [2]
				},
				[173720] = {
					"Mistveil Gorgegullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[162057] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[138161] = {
					"Mageguard Elite", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[105699] = {
					"Mana Saber", -- [1]
					"Court of Stars", -- [2]
				},
				[112638] = {
					"Astral Defender", -- [1]
					"The Nighthold", -- [2]
				},
				[112867] = {
					"Maiev Shadowsong", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[190609] = {
					"Echo of Doragosa", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[75506] = {
					"Shadowmoon Loyalist", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[77812] = {
					"Sargerei Soulbinder", -- [1]
					"Auchindoun", -- [2]
				},
				[104295] = {
					"Blazing Imp", -- [1]
					"Court of Stars", -- [2]
				},
				[122971] = {
					"Dazar'ai Juggernaut", -- [1]
					"Atal'Dazar", -- [2]
				},
				[56448] = {
					"Wise Mari", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[139946] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[122590] = {
					"Shadow of Varimathras", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[74355] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[84718] = {
					"Ancestral Warden", -- [1]
					"Auchindoun Quest", -- [2]
				},
				[164510] = {
					"Shambling Arbalest", -- [1]
					"Theater of Pain", -- [2]
				},
				[162309] = {
					"Kul'tharok", -- [1]
					"Theater of Pain", -- [2]
				},
				[77042] = {
					"Sargerei Defender", -- [1]
					"Auchindoun", -- [2]
				},
				[164255] = {
					"Globgrog", -- [1]
					"Plaguefall", -- [2]
				},
				[162056] = {
					"Rockbound Sprite", -- [1]
					"Sanguine Depths", -- [2]
				},
				[189555] = {
					"Astral Attendant", -- [1]
					"The Azure Vault", -- [2]
				},
				[28584] = {
					"Unbound Firestorm", -- [1]
					"Halls of Lightning", -- [2]
				},
				[130437] = {
					"Mine Rat", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[84978] = {
					"Bloodmaul Enforcer", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[98280] = {
					"Risen Arcanist", -- [1]
					"Black Rook Hold", -- [2]
				},
				[122972] = {
					"Dazar'ai Augur", -- [1]
					"Atal'Dazar", -- [2]
				},
				[132530] = {
					"Kul Tiran Vanguard", -- [1]
					"Siege of Boralus", -- [2]
				},
				[26729] = {
					"Steward", -- [1]
					"The Nexus", -- [2]
				},
				[98792] = {
					"Wyrmtongue Scavenger", -- [1]
					"Black Rook Hold", -- [2]
				},
				[26793] = {
					"Crystalline Frayer", -- [1]
					"The Nexus", -- [2]
				},
				[84719] = {
					"Spirit of Exarch Hataaru", -- [1]
					"Auchindoun Quest", -- [2]
				},
				[74356] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[112803] = {
					"Astrologer Jarin", -- [1]
					"The Nighthold", -- [2]
				},
				[139949] = {
					"Plague Doctor", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[166304] = {
					"Mistveil Stinger", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[120158] = {
					"Volatile Corruption", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[29064] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29096] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[29128] = {
					"Anub'ar Prime Guard", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[163503] = {
					"Etherdiver", -- [1]
					"Spires of Ascension", -- [2]
				},
				[111331] = {
					"Lurking Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[122973] = {
					"Dazar'ai Confessor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[112354] = {
					"Nulil", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[129370] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[111075] = {
					"Chaotoid", -- [1]
					"The Nighthold", -- [2]
				},
				[74357] = {
					"Captured Miner", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[175517] = {
					"Symbiotic Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[155812] = {
					"Mawsworn Ritualist", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[200131] = {
					"Sha-Touched Guardian", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[190362] = {
					"Dazzling Dragonfly", -- [1]
					"Halls of Infusion", -- [2]
				},
				[85232] = {
					"Infested Venomfang", -- [1]
					"The Everbloom", -- [2]
				},
				[166302] = {
					"Corpse Harvester", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[122969] = {
					"Zanchuli Witch-Doctor", -- [1]
					"Atal'Dazar", -- [2]
				},
				[81522] = {
					"Witherbark", -- [1]
					"The Everbloom", -- [2]
				},
				[75509] = {
					"Sadana Bloodfury", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[122718] = {
					"Felblade Shocktrooper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[190359] = {
					"Skulking Zealot", -- [1]
					"Halls of Infusion", -- [2]
				},
				[166301] = {
					"Mistveil Stalker", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[29768] = {
					"Unyielding Constrictor", -- [1]
					"Gundrak", -- [2]
				},
				[187033] = {
					"Stinkbreath", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[29832] = {
					"Drakkari Golem", -- [1]
					"Gundrak", -- [2]
				},
				[166969] = {
					"Baroness Frieda", -- [1]
					"Castle Nathria", -- [2]
				},
				[132532] = {
					"Kul Tiran Marksman", -- [1]
					"Siege of Boralus", -- [2]
				},
				[112290] = {
					"Horrid Eagle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[169265] = {
					"Creepy Crawler", -- [1]
					"Plaguefall", -- [2]
				},
				[168594] = {
					"Chamber Sentinel", -- [1]
					"Sanguine Depths", -- [2]
				},
				[105703] = {
					"Mana Wyrm", -- [1]
					"Court of Stars", -- [2]
				},
				[164517] = {
					"Tred'ova", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[120153] = {
					"Eonic Defender", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[106087] = {
					"Elerethe Renferal", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[184693] = {
					"Living Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[173729] = {
					"Manifestation of Pride", -- [1]
					"Halls of Atonement", -- [2]
				},
				[122847] = {
					"Umbral Priestess", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[170147] = {
					"Volatile Memory", -- [1]
					"De Other Side", -- [2]
				},
				[77133] = {
					"Sargerei Hoplite", -- [1]
					"Auchindoun", -- [2]
				},
				[84338] = {
					"Burning Blademaster", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[85937] = {
					"Gorian Cohort", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[113321] = {
					"Shambling Hungerer", -- [1]
					"The Nighthold", -- [2]
				},
				[193944] = {
					"Qalashi Lavamancer", -- [1]
					"Neltharus", -- [2]
				},
				[72785] = {
					"Twisted Ancient", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[130012] = {
					"Irontide Ravager", -- [1]
					"Freehold", -- [2]
				},
				[74570] = {
					"Ruination", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[105704] = {
					"Arcane Manifestation", -- [1]
					"Court of Stars", -- [2]
				},
				[75966] = {
					"Defiled Spirit", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[36620] = {
					"Soulguard Adept", -- [1]
					"The Forge of Souls", -- [2]
				},
				[28585] = {
					"Slag", -- [1]
					"Halls of Lightning", -- [2]
				},
				[83893] = {
					"Earthshaper Telu", -- [1]
					"The Everbloom", -- [2]
				},
				[123476] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[169893] = {
					"Nefarious Darkspeaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[120191] = {
					"Eternal Soulguard", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[99891] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[84339] = {
					"Grom'kar Vanguard", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[162729] = {
					"Patchwerk Soldier", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[76407] = {
					"Ner'zhul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[28231] = {
					"Crystalline Tender", -- [1]
					"The Nexus", -- [2]
				},
				[190345] = {
					"Primalist Geomancer", -- [1]
					"Halls of Infusion", -- [2]
				},
				[162689] = {
					"Surgeon Stitchflesh", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[89201] = {
					"Darkwing Scavenger", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[105705] = {
					"Bound Energy", -- [1]
					"Court of Stars", -- [2]
				},
				[112603] = {
					"Terrace Grove-Tender", -- [1]
					"The Nighthold", -- [2]
				},
				[59546] = {
					"The Talking Fish", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[29097] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[112358] = {
					"Scarab Lord Hamlet", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[130909] = {
					"Fetid Maggot", -- [1]
					"The Underrot", -- [2]
				},
				[74349] = {
					"Bloodmaul Magma Binder", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[112162] = {
					"Grisly Trapper", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[164266] = {
					"Domina Venomblade", -- [1]
					"Plaguefall", -- [2]
				},
				[84340] = {
					"Grom'kar Grimshot", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[186246] = {
					"Fleshripper Vulture", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[28586] = {
					"General Bjarngrim", -- [1]
					"Halls of Lightning", -- [2]
				},
				[134284] = {
					"Fallen Deathspeaker", -- [1]
					"The Underrot", -- [2]
				},
				[105322] = {
					"Deathglare Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[190366] = {
					"Curious Swoglet", -- [1]
					"Halls of Infusion", -- [2]
				},
				[128095] = {
					"Sister of the Lash", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[164267] = {
					"Margrave Stradama", -- [1]
					"Plaguefall", -- [2]
				},
				[81270] = {
					"Gorian Guardsman", -- [1]
					"Highmaul", -- [2]
				},
				[104881] = {
					"Spellblade Aluriel", -- [1]
					"The Nighthold", -- [2]
				},
				[187894] = {
					"Infused Whelp", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[168844] = {
					"Lakesis", -- [1]
					"Spires of Ascension", -- [2]
				},
				[96480] = {
					"Viletongue Belcher", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[122850] = {
					"Umbral Guard", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[155824] = {
					"Lumbering Creation", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[98542] = {
					"Amalgam of Souls", -- [1]
					"Black Rook Hold", -- [2]
				},
				[187768] = {
					"Dathea Stormlash", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[121011] = {
					"Tidescale Witch", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[98926] = {
					"Shadow Hunter", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[94960] = {
					"Hymdall", -- [1]
					"Halls of Valor", -- [2]
				},
				[163501] = {
					"Forsworn Skirmisher", -- [1]
					"Spires of Ascension", -- [2]
				},
				[190368] = {
					"Flamecaller Aymi", -- [1]
					"Halls of Infusion", -- [2]
				},
				[118523] = {
					"Huntress Kasparian", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[103685] = {
					"Tichondrius", -- [1]
					"The Nighthold", -- [2]
				},
				[190034] = {
					"Blazebound Destroyer", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[165763] = {
					"Vile Occultist", -- [1]
					"Castle Nathria", -- [2]
				},
				[122467] = {
					"Asara, Mother of Night", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[112360] = {
					"Guard", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[104300] = {
					"Shadow Mistress", -- [1]
					"Court of Stars", -- [2]
				},
				[122851] = {
					"Umbral Archer", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[82039] = {
					"Rockspine Stinger", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[104273] = {
					"Jazshariu", -- [1]
					"Court of Stars", -- [2]
				},
				[97083] = {
					"King Ranulf", -- [1]
					"Halls of Valor", -- [2]
				},
				[113128] = {
					"Withered Skulker", -- [1]
					"The Nighthold", -- [2]
				},
				[185508] = {
					"Claw Fighter", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[26918] = {
					"Chaotic Rift", -- [1]
					"The Nexus", -- [2]
				},
				[113512] = {
					"Putrid Sludge", -- [1]
					"The Nighthold", -- [2]
				},
				[190370] = {
					"Squallbringer Cyraz", -- [1]
					"Halls of Infusion", -- [2]
				},
				[111721] = {
					"Venomous Spiderling", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[168365] = {
					"Fungret Shroomtender", -- [1]
					"Plaguefall", -- [2]
				},
				[81272] = {
					"Gorian Runemaster", -- [1]
					"Highmaul", -- [2]
				},
				[197535] = {
					"High Channeler Ryvati", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[118374] = {
					"Captain Yathae Moonstrike", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[198047] = {
					"Tempest Channeler", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[96574] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Valor", -- [2]
				},
				[190371] = {
					"Primalist Earthshaker", -- [1]
					"Halls of Infusion", -- [2]
				},
				[75899] = {
					"Possessed Soul", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[84957] = {
					"Putrid Pyromancer", -- [1]
					"The Everbloom", -- [2]
				},
				[26731] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
				},
				[26763] = {
					"Anomalus", -- [1]
					"The Nexus", -- [2]
				},
				[111210] = {
					"Searing Infernal", -- [1]
					"The Nighthold", -- [2]
				},
				[173484] = {
					"Conjured Manifestation", -- [1]
					"Castle Nathria", -- [2]
				},
				[78714] = {
					"Kargath Bladefist", -- [1]
					"Highmaul", -- [2]
				},
				[84983] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[113106] = {
					"Sickly Cougar", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[130485] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[184581] = {
					"Baelog", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[166411] = {
					"Forsworn Usurper", -- [1]
					"Spires of Ascension", -- [2]
				},
				[29098] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[155433] = {
					"Void-Touched Emissary", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[163506] = {
					"Forsworn Stealthclaw", -- [1]
					"Spires of Ascension", -- [2]
				},
				[190373] = {
					"Primalist Galesinger", -- [1]
					"Halls of Infusion", -- [2]
				},
				[84088] = {
					"Thunderlord Windfire", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[157571] = {
					"Mawsworn Flametender", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[28580] = {
					"Hardened Steel Skycaller", -- [1]
					"Halls of Lightning", -- [2]
				},
				[82425] = {
					"Luminous Orchid", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[59051] = {
					"Strife", -- [1]
					"Temple of the Jade Serpent", -- [2]
				},
				[82399] = {
					"Ogron Earthshaker", -- [1]
					"Highmaul", -- [2]
				},
				[131585] = {
					"Enthralled Guard", -- [1]
					"Waycrest Manor", -- [2]
				},
				[84984] = {
					"Spore Image", -- [1]
					"The Everbloom", -- [2]
				},
				[155831] = {
					"Mawsworn Soulbinder", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[85240] = {
					"Night-Twisted Soothsayer", -- [1]
					"Highmaul", -- [2]
				},
				[120721] = {
					"Lunar Archer", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[163126] = {
					"Brittlebone Mage", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[171184] = {
					"Mythresh, Sky's Talons", -- [1]
					"De Other Side", -- [2]
				},
				[112363] = {
					"Spoogledorf", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[104275] = {
					"Imacu'tya", -- [1]
					"Court of Stars", -- [2]
				},
				[169905] = {
					"Risen Warlord", -- [1]
					"De Other Side", -- [2]
				},
				[155434] = {
					"Emissary of the Tides", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[192934] = {
					"Volatile Infuser", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[164702] = {
					"Carrion Worm", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[168882] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[74366] = {
					"Forgemaster Gog'duh", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[82682] = {
					"Archmage Sol", -- [1]
					"The Everbloom", -- [2]
				},
				[165556] = {
					"Fleeting Manifestation", -- [1]
					"Sanguine Depths", -- [2]
				},
				[93173] = {
					"Icebound Dreadnought", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[187246] = {
					"Nullmagic Hornswog", -- [1]
					"The Azure Vault", -- [2]
				},
				[85241] = {
					"Night-Twisted Brute", -- [1]
					"Highmaul", -- [2]
				},
				[168627] = {
					"Plaguebinder", -- [1]
					"Plaguefall", -- [2]
				},
				[134084] = {
					"7th Legion Sharpshooter", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[28835] = {
					"Stormforged Construct", -- [1]
					"Halls of Lightning", -- [2]
				},
				[112364] = {
					"Kesak", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[120777] = {
					"Guardian Sentry", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[120808] = {
					"Lylth the Silent", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[192680] = {
					"Guardian Sentry", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[123680] = {
					"Dark Keeper Aedis", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[196671] = {
					"Arcane Ravager", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[109038] = {
					"Solarist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[136186] = {
					"Tidesage Spiritualist", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[198501] = {
					"Council Icecaller", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[198310] = {
					"Flame Tarasek", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[186284] = {
					"Gutchewer Bear", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[136391] = {
					"Heart Guardian", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[200035] = {
					"Carrion Worm", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[104822] = {
					"Flame of Woe", -- [1]
					"Halls of Valor", -- [2]
				},
				[162744] = {
					"Nekthara the Mangler", -- [1]
					"Theater of Pain", -- [2]
				},
				[171188] = {
					"Plaguebound Devoted", -- [1]
					"Plaguefall", -- [2]
				},
				[112365] = {
					"Butchie", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[119938] = {
					"Reanimated Templar", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[103695] = {
					"Corruption Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[122984] = {
					"Dazar'ai Colossus", -- [1]
					"Atal'Dazar", -- [2]
				},
				[194147] = {
					"Volcanius", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[121193] = {
					"Shadowsoul", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[168886] = {
					"Virulax Blightweaver", -- [1]
					"Plaguefall", -- [2]
				},
				[118930] = {
					"Ixallon the Soulbreaker", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[117264] = {
					"Maiden of Valor", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[165560] = {
					"Gormling Larva", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[164464] = {
					"Xira the Underhanded", -- [1]
					"Theater of Pain", -- [2]
				},
				[151127] = {
					"Lord of Torment", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[85243] = {
					"Void Aberration", -- [1]
					"Highmaul", -- [2]
				},
				[82519] = {
					"Highmaul Conscript", -- [1]
					"Highmaul", -- [2]
				},
				[93687] = {
					"Forsaken Bat-Rider", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[99956] = {
					"Fel-Infused Fury", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[198716] = {
					"Unstable Storm", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[167532] = {
					"Heavin the Breaker", -- [1]
					"Theater of Pain", -- [2]
				},
				[190381] = {
					"Rotburst Totem", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[127480] = {
					"Stinging Parasite", -- [1]
					"Tol Dagor", -- [2]
				},
				[163620] = {
					"Rotspew", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[174773] = {
					"Spiteful Shade", -- [1]
					"Spires of Ascension", -- [2]
				},
				[109040] = {
					"Arcanist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[89239] = {
					"Horrifying Brute", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[195138] = {
					"Detonating Crystal", -- [1]
					"The Azure Vault", -- [2]
				},
				[108361] = {
					"Crystalline Scorpid", -- [1]
					"The Nighthold", -- [2]
				},
				[169912] = {
					"Enraged Mask", -- [1]
					"De Other Side", -- [2]
				},
				[119072] = {
					"The Desolate Host", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[36497] = {
					"Bronjahm", -- [1]
					"The Forge of Souls", -- [2]
				},
				[93560] = {
					"Deathweaver Cassandra", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[93688] = {
					"Forsaken Deathstalker", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[193709] = {
					"Primalist Earthwarden", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[134602] = {
					"Shrouded Fang", -- [1]
					"Temple of Sethraliss", -- [2]
				},
				[167610] = {
					"Stonefiend Anklebiter", -- [1]
					"Halls of Atonement", -- [2]
				},
				[89169] = {
					"Gorian Sentinel", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[122890] = {
					"Fanatical Pyromancer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[164967] = {
					"Doctor Ickus", -- [1]
					"Plaguefall", -- [2]
				},
				[133835] = {
					"Feral Bloodswarmer", -- [1]
					"The Underrot", -- [2]
				},
				[109041] = {
					"Naturalist Tel'arn", -- [1]
					"The Nighthold", -- [2]
				},
				[125545] = {
					"Blazing Imp", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[77130] = {
					"Sargerei Ritualist", -- [1]
					"Auchindoun", -- [2]
				},
				[167611] = {
					"Stoneborn Eviscerator", -- [1]
					"Halls of Atonement", -- [2]
				},
				[84989] = {
					"Infested Icecaller", -- [1]
					"The Everbloom", -- [2]
				},
				[168934] = {
					"Enraged Spirit", -- [1]
					"De Other Side", -- [2]
				},
				[105715] = {
					"Watchful Inquisitor", -- [1]
					"Court of Stars", -- [2]
				},
				[144071] = {
					"Irontide Waveshaper", -- [1]
					"Siege of Boralus", -- [2]
				},
				[136139] = {
					"Mechanized Peacekeeper", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[166396] = {
					"Noble Skirmisher", -- [1]
					"Sanguine Depths", -- [2]
				},
				[112368] = {
					"Anenga", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[167612] = {
					"Stoneborn Reaver", -- [1]
					"Halls of Atonement", -- [2]
				},
				[24078] = {
					"Dragonflayer Metalworker", -- [1]
					"Utgarde Keep", -- [2]
				},
				[187224] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[194991] = {
					"Oathsworn Vanguard", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[166589] = {
					"Animated Weapon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[187315] = {
					"Disease Slasher", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[162060] = {
					"Oryphrion", -- [1]
					"Spires of Ascension", -- [2]
				},
				[123191] = {
					"Fel Hound", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[134150] = {
					"Runecarver Sorn", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[157634] = {
					"Flameforge Enforcer", -- [1]
					"Torghast, Tower of the Damned", -- [2]
				},
				[111170] = {
					"Astral Farseer", -- [1]
					"The Nighthold", -- [2]
				},
				[75652] = {
					"Void Spawn", -- [1]
					"Shadowmoon Burial Grounds", -- [2]
				},
				[127732] = {
					"Clobex", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[193457] = {
					"Balara", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[173145] = {
					"Gorging Mite", -- [1]
					"Castle Nathria", -- [2]
				},
				[112369] = {
					"Wodyn", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[163520] = {
					"Forsworn Squad-Leader", -- [1]
					"Spires of Ascension", -- [2]
				},
				[28684] = {
					"Krik'thir the Gatewatcher", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[166079] = {
					"Brittlebone Crossbowman", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[197857] = {
					"Gutstabber", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[119205] = {
					"Moontalon", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[117231] = {
					"Darkblade Champion", -- [1]
					"Artifact - Acquisition - Tank", -- [2]
				},
				[125547] = {
					"Feltouched Skitterer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[65310] = {
					"Turnip Punching Bag", -- [1]
					"10.0 Dragon Isles", -- [2]
				},
				[167615] = {
					"Depraved Darkblade", -- [1]
					"Halls of Atonement", -- [2]
				},
				[130025] = {
					"Irontide Thug", -- [1]
					"Tol Dagor", -- [2]
				},
				[130192] = {
					"Hulking Demolisher", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[111858] = {
					"Guardian Rurson", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[93563] = {
					"Cauldronmaster Mills", -- [1]
					"The Maw of Nashal", -- [2]
				},
				[125570] = {
					"Riftworld Assistant", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[122477] = {
					"F'harg", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[93065] = {
					"Ysera", -- [1]
					"The Temple of Elune", -- [2]
				},
				[102263] = {
					"Skorpyron", -- [1]
					"The Nighthold", -- [2]
				},
				[198577] = {
					"Unstable Flame", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[136470] = {
					"Refreshment Vendor", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[168384] = {
					"Flesh Construct", -- [1]
					"The Necrotic Wake", -- [2]
				},
				[84352] = {
					"Rag'sla Thunkblade", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[129050] = {
					"Antoran Felguard", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[185528] = {
					"Trickclaw Mystic", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[171455] = {
					"Stonewall Gargon", -- [1]
					"Sanguine Depths", -- [2]
				},
				[29819] = {
					"Drakkari Lancer", -- [1]
					"Gundrak", -- [2]
				},
				[130026] = {
					"Bilge Rat Seaspeaker", -- [1]
					"Tol Dagor", -- [2]
				},
				[89214] = {
					"Gorian Battle-Mage", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[152009] = {
					"Malfunctioning Scrapbot", -- [1]
					"Operation: Mechagon", -- [2]
				},
				[194241] = {
					"Vile Rothexer", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[172991] = {
					"Drust Soulcleaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[185529] = {
					"Bracken Warscourge", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[175550] = {
					"Volatile Faerie", -- [1]
					"9.0 Bastion Arena - Path of Ascension", -- [2]
				},
				[163524] = {
					"Kyrian Dark-Praetor", -- [1]
					"Spires of Ascension", -- [2]
				},
				[184107] = {
					"Runic Protector", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[112261] = {
					"Dreadsoul Corruptor", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[82378] = {
					"Moonbark Ancient", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[26799] = {
					"Horde Berserker", -- [1]
					"The Nexus", -- [2]
				},
				[164804] = {
					"Droman Oulfarran", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[125549] = {
					"Hungering Stalker", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[127724] = {
					"Fanatical Pyromancer", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[24849] = {
					"Proto-Drake Rider", -- [1]
					"Utgarde Keep", -- [2]
				},
				[130027] = {
					"Ashvane Marine", -- [1]
					"Tol Dagor", -- [2]
				},
				[105591] = {
					"Nightmare Horror", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[111860] = {
					"Bo'lan the Marked", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[170690] = {
					"Diseased Horror", -- [1]
					"Theater of Pain", -- [2]
				},
				[172993] = {
					"Afterimage of Castellan Niklaus", -- [1]
					"Castle Nathria", -- [2]
				},
				[171342] = {
					"Juvenile Runestag", -- [1]
					"De Other Side", -- [2]
				},
				[112372] = {
					"Wheatizzle", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[29838] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
				},
				[167876] = {
					"Inquisitor Sigar", -- [1]
					"Halls of Atonement", -- [2]
				},
				[184134] = {
					"Scavenging Leaper", -- [1]
					"Uldaman: Legacy of Tyr", -- [2]
				},
				[194999] = {
					"Volatile Spark", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[84354] = {
					"Akatha Blazeburn", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[26716] = {
					"Azure Warder", -- [1]
					"The Nexus", -- [2]
				},
				[123503] = {
					"Torment of Norgannon", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[127725] = {
					"Felblade Shocktrooper", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[95887] = {
					"Glazer", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[169924] = {
					"Veteran Stoneguard", -- [1]
					"Castle Nathria", -- [2]
				},
				[137428] = {
					"Kazul", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[95920] = {
					"Animated Storm", -- [1]
					"Eye of Azshara", -- [2]
				},
				[36564] = {
					"Soulguard Bonecaster", -- [1]
					"The Forge of Souls", -- [2]
				},
				[97788] = {
					"Storm Drake", -- [1]
					"Halls of Valor", -- [2]
				},
				[169429] = {
					"Shivarra", -- [1]
					"The Nexus", -- [2]
				},
				[112373] = {
					"Jarud", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[29304] = {
					"Slad'ran", -- [1]
					"Gundrak", -- [2]
				},
				[98366] = {
					"Ghostly Retainer", -- [1]
					"Black Rook Hold", -- [2]
				},
				[194745] = {
					"Rotfang Hyena", -- [1]
					"Brackenhide Hollow", -- [2]
				},
				[99645] = {
					"Shadowmoon Technician", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[84355] = {
					"Drek the Firecaller", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[96640] = {
					"Valarjar Marksman", -- [1]
					"Halls of Valor", -- [2]
				},
				[26798] = {
					"Commander Kolurg", -- [1]
					"The Nexus", -- [2]
				},
				[111350] = {
					"Skittering Shadows", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[123760] = {
					"Fel-Infused Destructor", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[121138] = {
					"Tormented Fragment", -- [1]
					"Tomb of Sargeras", -- [2]
				},
				[23965] = {
					"Frost Tomb", -- [1]
					"Utgarde Keep", -- [2]
				},
				[105721] = {
					"Nightmare Ichor", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[191164] = {
					"Arcane Tender", -- [1]
					"The Azure Vault", -- [2]
				},
				[75272] = {
					"Bloodmaul Ogre Mage", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[169159] = {
					"Unstable Canister", -- [1]
					"Plaguefall", -- [2]
				},
				[82354] = {
					"Seacliff Kaliri", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[98173] = {
					"Mystic Ssa'veh", -- [1]
					"Eye of Azshara", -- [2]
				},
				[169927] = {
					"Putrid Butcher", -- [1]
					"Theater of Pain", -- [2]
				},
				[165905] = {
					"Son of Hakkar", -- [1]
					"De Other Side", -- [2]
				},
				[133593] = {
					"Expert Technician", -- [1]
					"The MOTHERLODE!!", -- [2]
				},
				[199353] = {
					"Frost Tomb", -- [1]
					"Vault of the Incarnates", -- [2]
				},
				[162763] = {
					"Soulforged Bonereaver", -- [1]
					"Theater of Pain", -- [2]
				},
				[167113] = {
					"Spinemaw Acidgullet", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[189886] = {
					"Blazebound Firestorm", -- [1]
					"Ruby Life Pools", -- [2]
				},
				[91796] = {
					"Skrog Wavecrasher", -- [1]
					"Eye of Azshara", -- [2]
				},
				[200944] = {
					"Nokhud Fighter", -- [1]
					"The Nokhud Offensive", -- [2]
				},
				[112675] = {
					"Duskwatch Sentinel", -- [1]
					"The Nighthold", -- [2]
				},
				[168393] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[164555] = {
					"Millificent Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[28920] = {
					"Stormforged Giant", -- [1]
					"Halls of Lightning", -- [2]
				},
				[105383] = {
					"Corruptor Tentacle", -- [1]
					"The Emerald Nightmare", -- [2]
				},
				[136665] = {
					"Ashvane Spotter", -- [1]
					"Tol Dagor", -- [2]
				},
				[134624] = {
					"Town Crier", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[167967] = {
					"Sentient Oil", -- [1]
					"De Other Side", -- [2]
				},
				[122783] = {
					"Blazing Imp", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[168394] = {
					"Slimy Morsel", -- [1]
					"Plaguefall", -- [2]
				},
				[164556] = {
					"Millhouse Manastorm", -- [1]
					"De Other Side", -- [2]
				},
				[134192] = {
					"Gilnean Battlemage", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[91789] = {
					"Lady Hatecoil", -- [1]
					"Eye of Azshara", -- [2]
				},
				[89143] = {
					"Goren Shardback", -- [1]
					"SMV Alliance Garrison Level 3", -- [2]
				},
				[78728] = {
					"Shaadum", -- [1]
					"Auchindoun", -- [2]
				},
				[28731] = {
					"Watcher Silthik", -- [1]
					"Azjol-Nerub", -- [2]
				},
				[112393] = {
					"Astrylian", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[97677] = {
					"Barbed Spiderling", -- [1]
					"Vault of the Wardens", -- [2]
				},
				[164557] = {
					"Shard of Halkias", -- [1]
					"Halls of Atonement", -- [2]
				},
				[168907] = {
					"Slime Tentacle", -- [1]
					"Plaguefall", -- [2]
				},
				[167116] = {
					"Spinemaw Reaver", -- [1]
					"Mists of Tirna Scithe", -- [2]
				},
				[91794] = {
					"Saltscale Lurker", -- [1]
					"Eye of Azshara", -- [2]
				},
				[83846] = {
					"Yalnu", -- [1]
					"The Everbloom", -- [2]
				},
				[75786] = {
					"Roltall", -- [1]
					"Bloodmaul Slag Mines", -- [2]
				},
				[196798] = {
					"Corrupted Manafiend", -- [1]
					"Algeth'ar Academy", -- [2]
				},
				[168396] = {
					"Plaguebelcher", -- [1]
					"Plaguefall", -- [2]
				},
				[164558] = {
					"Hakkar the Soulflayer", -- [1]
					"De Other Side", -- [2]
				},
				[112410] = {
					"Dreadpaw", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[111225] = {
					"Chaos Mage Beleron", -- [1]
					"The Nighthold", -- [2]
				},
				[112406] = {
					"Merciless Gladiator Saifu", -- [1]
					"Black Temple - Legion", -- [2]
				},
				[169421] = {
					"Felguard", -- [1]
					"Black Rook Hold", -- [2]
				},
				[139800] = {
					"Galecaller Apprentice", -- [1]
					"Shrine of the Storm", -- [2]
				},
				[134944] = {
					"Dwarven Rifleman", -- [1]
					"Stormwind Escape from Stockades", -- [2]
				},
				[36502] = {
					"Devourer of Souls", -- [1]
					"The Forge of Souls", -- [2]
				},
				[125837] = {
					"Torment of Aman'Thul", -- [1]
					"Antorus, the Burning Throne", -- [2]
				},
				[196043] = {
					"Primalist Infuser", -- [1]
					"Halls of Infusion", -- [2]
				},
			},
			["aura_grow_direction"] = 1,
			["aggro_modifies"] = {
				["border_color"] = true,
				["health_bar_color"] = false,
			},
			["minor_height_scale"] = 0.9999999403953552,
			["aura_padding"] = 0.2999999821186066,
			["indicator_worldboss"] = false,
			["aura_width2"] = 14,
			["aura_stack_size"] = 6,
			["range_check_health_bar_alpha"] = 0.8999999761581421,
			["aura_height2"] = 14,
			["aura_show_crowdcontrol"] = true,
			["health_cutoff"] = false,
			["aura_border_colors"] = {
				["enrage"] = {
					0.70196078431373, -- [1]
					0, -- [2]
					0.054901960784314, -- [3]
				},
				["steal_or_purge"] = {
					nil, -- [1]
					0.92549019607843, -- [2]
					1, -- [3]
				},
				["crowdcontrol"] = {
					0.70196078431373, -- [1]
					0.10196078431373, -- [2]
					0.10196078431373, -- [3]
					0, -- [4]
				},
				["offensive"] = {
					nil, -- [1]
					0.6509804129600525, -- [2]
					0.1019607931375504, -- [3]
					0, -- [4]
				},
				["is_show_all"] = {
					0.70196078431373, -- [1]
					0.10196078431373, -- [2]
					0.10196078431373, -- [3]
				},
				["is_buff"] = {
					0.65098039215686, -- [1]
					0.011764705882353, -- [2]
					0.090196078431373, -- [3]
					0, -- [4]
				},
			},
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
			},
			["show_healthbars_on_softinteract"] = false,
			["extra_icon_anchor"] = {
				["x"] = -2.5,
			},
			["extra_icon_wide_icon"] = false,
			["use_playerclass_color"] = false,
			["range_check_alpha"] = 0.699999988079071,
			["semver"] = "1.0.11",
			["aura_frame2_anchor"] = {
				["y"] = 0.5,
				["x"] = -1,
				["side"] = 1,
			},
			["aura_alpha"] = 1,
			["castbar_icon_x_offset"] = -8,
			["extra_icon_height"] = 17,
			["transparency_behavior"] = 3,
			["spell_animations"] = false,
			["debuff_show_cc_border"] = {
				1, -- [1]
				1, -- [2]
				1, -- [3]
				0, -- [4]
			},
			["aura_consolidate"] = true,
			["extra_icon_width"] = 17,
			["health_statusbar_texture"] = "Minimalist",
			["hook_auto_imported"] = {
				["Color Automation"] = 1,
				["Blockade Encounter"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Hide Neutral Units"] = 1,
				["Aura Reorder"] = 3,
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Bwonsamdi Reaping"] = 1,
				["Jaina Encounter"] = 6,
				["Monk Statue"] = 2,
				["Combo Points"] = 6,
				["Extra Border"] = 2,
				["Targetting Alpha"] = 3,
				["Target Color"] = 3,
				["Attacking Specific Unit"] = 2,
				["Execute Range"] = 1,
			},
			["minor_width_scale"] = 0.9999999403953552,
			["indicator_pet"] = false,
			["color_lerp_speed"] = 15,
			["aura_frame1_anchor"] = {
				["y"] = 0.399993896484375,
				["x"] = 1,
				["side"] = 7,
			},
			["aura_timer_text_font"] = "Bui Tukui",
			["cast_statusbar_color_finished"] = {
				0.27843137254902, -- [1]
				0.75294117647059, -- [2]
				0.23529411764706, -- [3]
			},
			["extra_icon_stack_font"] = "Expressway",
			["aura_height"] = 14,
			["non_targeted_alpha_enabled"] = true,
			["cast_statusbar_bgtexture"] = "Minimalist",
			["aura2_x_offset"] = -1,
			["target_indicator"] = "NONE",
			["range_check_cast_bar_alpha"] = 0.8999999761581421,
			["castbar_target_notank"] = true,
			["saved_cvars"] = {
				["ShowClassColorInNameplate"] = "1",
				["nameplateOverlapV"] = "1.1000000238419",
				["nameplateLargeTopInset"] = "0.03999999910593",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "1",
				["nameplatePersonalHideDelaySeconds"] = "0.2",
				["nameplateShowFriendlyPets"] = "0",
				["nameplateOverlapH"] = "0.79999995231628",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "60",
				["nameplateShowFriendlyMinions"] = "1",
				["nameplateSelfScale"] = "1",
				["SoftTargetInteract"] = "0",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "0",
				["nameplatePersonalShowAlways"] = "1",
				["nameplateMotionSpeed"] = "0.049999997019768",
				["nameplateGlobalScale"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowEnemyPets"] = "1",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.2000000476837",
				["nameplateLargerScale"] = "1.2999999523163",
				["nameplatePersonalShowInCombat"] = "0",
				["nameplateSelfTopInset"] = "0.49",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateShowFriends"] = "1",
				["nameplateMotion"] = "0",
				["nameplateOccludedAlphaMult"] = "0.40000000596046",
				["nameplateMinScale"] = "1",
				["nameplateShowEnemyGuardians"] = "0",
				["nameplateOtherTopInset"] = "0.03999999910593",
				["nameplateOtherAtBase"] = "0",
				["nameplateSelfBottomInset"] = "0.2",
				["nameplateSelfAlpha"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["NamePlateHorizontalScale"] = "1",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplatePersonalShowWithTarget"] = "0",
				["SoftTargetIconGameObject"] = "0",
				["nameplateShowOnlyNames"] = "1",
			},
			["login_counter"] = 31631,
			["extra_icon_caster_name"] = false,
			["click_space_friendly"] = {
				110, -- [1]
				20, -- [2]
			},
			["aura_timer_text_outline"] = "NONE",
			["aura_stack_font"] = "Bui FiraBold",
			["range_check_buffs_alpha"] = 0.7999999523162842,
			["hide_friendly_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 1.299999952316284,
				},
			},
			["auras_per_row_amount"] = 6,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator2",
			["use_player_combat_state"] = true,
			["aura_stack_outline"] = "NONE",
			["hover_highlight_alpha"] = 1,
			["plate_config"] = {
				["player"] = {
					["big_actorname_text_size"] = 10,
					["spellpercent_text_font"] = "Roboto Condensed",
					["show_guild_name"] = true,
					["actorname_use_class_color"] = true,
					["cast"] = {
						110, -- [1]
						2, -- [2]
					},
					["fixed_class_color"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "NONE",
					["click_through"] = true,
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_font"] = "Roboto Condensed",
					["actorname_text_font"] = "Bui FiraBold",
					["quest_color"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["mana_incombat"] = {
						100, -- [1]
						3, -- [2]
					},
					["actorname_use_guild_color"] = false,
					["all_names"] = true,
					["actorname_text_outline"] = "NONE",
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.7843137254902, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_outline"] = "NONE",
					["actorname_text_spacing"] = 7,
					["only_damaged"] = false,
					["percent_text_size"] = 9,
					["quest_color_enemy"] = {
						1, -- [1]
						0.36862745098039, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["only_thename"] = true,
					["big_actortitle_text_font"] = "Roboto Condensed",
					["percent_text_ooc"] = false,
					["big_actortitle_text_size"] = 8,
					["big_actorname_text_color"] = {
						0.25098039215686, -- [1]
						0.68627450980392, -- [2]
						0.20392156862745, -- [3]
						1, -- [4]
					},
					["level_text_anchor"] = {
						["side"] = 9,
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						110, -- [1]
						2, -- [2]
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_font"] = "Roboto BoldCondensed",
					["only_names"] = true,
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 8,
					["power_percent_text_font"] = "Bui Homizio",
					["big_actorname_text_font"] = "Roboto BoldCondensed",
					["actorname_use_friends_color"] = false,
					["actorname_friend_color"] = {
						0.70980392156863, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["percent_show_health"] = false,
					["spellpercent_text_enabled"] = false,
					["percent_text_font"] = "Roboto BoldCondensed",
					["buff_frame_y_offset"] = 10,
					["actorname_guild_color"] = {
						0.49803921568627, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["quest_enabled"] = true,
					["mana"] = {
						100, -- [1]
						3, -- [2]
					},
					["relevance_state"] = 4,
					["quest_color_enabled"] = true,
					["health_incombat"] = {
						110, -- [1]
					},
					["health"] = {
						110, -- [1]
					},
					["percent_text_enabled"] = false,
					["big_actorname_text_outline"] = "NONE",
					["spellname_text_size"] = 6,
					["percent_show_percent"] = false,
				},
				["friendlyplayer"] = {
					["spellpercent_text_font"] = "Roboto Condensed",
					["actorname_friend_color"] = {
						0.70980392156863, -- [1]
					},
					["actorname_use_class_color"] = true,
					["cast"] = {
						110, -- [1]
						2, -- [2]
					},
					["percent_text_show_decimals"] = false,
					["click_through"] = false,
					["level_text_font"] = "Roboto Condensed",
					["actorname_text_font"] = "Roboto BoldCondensed",
					["actorname_use_guild_color"] = false,
					["actorname_text_outline"] = "NONE",
					["actorname_text_spacing"] = 7,
					["only_damaged"] = false,
					["only_thename"] = true,
					["level_text_anchor"] = {
						["side"] = 9,
					},
					["cast_incombat"] = {
						110, -- [1]
						2, -- [2]
					},
					["spellname_text_size"] = 6,
					["show_guild_name"] = true,
					["actorname_use_friends_color"] = false,
					["percent_text_font"] = "Roboto BoldCondensed",
					["actorname_guild_color"] = {
						0.49803921568627, -- [1]
					},
					["percent_show_percent"] = false,
					["spellname_text_font"] = "Roboto BoldCondensed",
					["health_incombat"] = {
						110, -- [1]
						12, -- [2]
					},
					["health"] = {
						110, -- [1]
						12, -- [2]
					},
					["actorname_text_size"] = 8,
				},
				["friendlynpc"] = {
					["spellpercent_text_font"] = "ElvUI C",
					["level_text_size"] = 8,
					["cast"] = {
						120, -- [1]
						6, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["x"] = -0.5,
					},
					["percent_text_show_decimals"] = false,
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "ElvUI C",
					["actorname_text_font"] = "Roboto BoldCondensed",
					["quest_color"] = {
						1, -- [1]
						0.415686309337616, -- [2]
					},
					["big_actortitle_text_color"] = {
						nil, -- [1]
						0.7843137254902, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_outline"] = "NONE",
					["actorname_text_spacing"] = 7,
					["quest_color_enemy"] = {
						1, -- [1]
						0.36862745098039, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "Roboto BoldCondensed",
					["spellpercent_text_size"] = 6,
					["big_actorname_text_color"] = {
						0.2313725650310516, -- [1]
						0.6313725709915161, -- [2]
						0.1882353127002716, -- [3]
						1, -- [4]
					},
					["level_text_anchor"] = {
						["y"] = 1.299995422363281,
						["side"] = 1,
					},
					["cast_incombat"] = {
						nil, -- [1]
						8, -- [2]
					},
					["spellname_text_size"] = 6,
					["spellname_text_anchor"] = {
						["x"] = 2,
						["side"] = 10,
					},
					["percent_text_anchor"] = {
						["x"] = -0.5,
						["side"] = 11,
					},
					["spellname_text_font"] = "Roboto BoldCondensed",
					["big_actorname_text_outline"] = "NONE",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 8,
					["big_actorname_text_font"] = "Roboto BoldCondensed",
					["big_actortitle_text_size"] = 7,
					["level_text_alpha"] = 0.5,
					["percent_text_size"] = 8,
					["percent_text_font"] = "Bui Tukui",
					["percent_text_outline"] = "NONE",
					["spellpercent_text_enabled"] = true,
					["health_incombat"] = {
						nil, -- [1]
						12, -- [2]
					},
					["health"] = {
						120, -- [1]
					},
					["percent_show_percent"] = false,
					["actorname_text_anchor"] = {
						["y"] = 0.04000091552734375,
						["x"] = 2.5,
						["side"] = 10,
					},
				},
				["global_health_width"] = 110,
				["global_health_height"] = 12,
				["enemyplayer"] = {
					["castbar_offset"] = -1,
					["spellpercent_text_font"] = "ElvUI C",
					["show_guild_name"] = true,
					["level_text_size"] = 6,
					["actorname_use_class_color"] = true,
					["cast"] = {
						120, -- [1]
						8, -- [2]
					},
					["fixed_class_color"] = {
						0.69803921568627, -- [1]
						0.1921568627451, -- [2]
						0.11372549019608, -- [3]
					},
					["spellpercent_text_anchor"] = {
						["x"] = -1,
					},
					["percent_text_show_decimals"] = false,
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "ElvUI C",
					["actorname_text_font"] = "Roboto BoldCondensed",
					["quest_color"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["all_names"] = true,
					["big_actortitle_text_color"] = {
						nil, -- [1]
						0.7843137254902, -- [2]
						nil, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_outline"] = "NONE",
					["actorname_text_spacing"] = 6,
					["quest_color_enemy"] = {
						1, -- [1]
						0.36862745098039, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "Bui FiraBold",
					["spellpercent_text_size"] = 6,
					["castbar_offset_x"] = 0.3000030517578125,
					["level_text_anchor"] = {
						["y"] = -1.510002136230469,
						["side"] = 5,
					},
					["cast_incombat"] = {
						nil, -- [1]
						8, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = 0.1999969482421875,
						["x"] = 1.019996643066406,
						["side"] = 10,
					},
					["percent_text_anchor"] = {
						["x"] = -1,
						["side"] = 11,
					},
					["spellname_text_font"] = "ElvUI C",
					["only_names"] = true,
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 7,
					["big_actorname_text_font"] = "Bui FiraBold",
					["big_actorname_text_size"] = 10,
					["actorname_text_anchor"] = {
						["x"] = 2.5,
						["side"] = 10,
					},
					["percent_text_size"] = 6,
					["big_actortitle_text_size"] = 8,
					["percent_text_font"] = "ElvUI C",
					["buff_frame_y_offset"] = 1.5,
					["percent_text_outline"] = "NONE",
					["quest_color_enabled"] = true,
					["spellname_text_size"] = 6,
					["health"] = {
						120, -- [1]
					},
					["health_incombat"] = {
						121, -- [1]
						12, -- [2]
					},
					["big_actorname_text_color"] = {
						0.25098039215686, -- [1]
						0.68627450980392, -- [2]
						0.20392156862745, -- [3]
						1, -- [4]
					},
					["quest_enabled"] = true,
					["relevance_state"] = 4,
					["level_text_enabled"] = false,
				},
				["enemynpc"] = {
					["spellpercent_text_font"] = "ElvUI C",
					["level_text_size"] = 6,
					["cast"] = {
						120, -- [1]
						8, -- [2]
					},
					["spellpercent_text_anchor"] = {
						["x"] = -1,
					},
					["percent_text_show_decimals"] = false,
					["spellname_text_outline"] = "NONE",
					["spellpercent_text_outline"] = "NONE",
					["level_text_font"] = "ElvUI C",
					["actorname_text_font"] = "Roboto BoldCondensed",
					["quest_color"] = {
						1, -- [1]
						0.49803921568627, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_color"] = {
						1, -- [1]
						0.7843137254902, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_outline"] = "NONE",
					["actorname_text_spacing"] = 6,
					["quest_color_enemy"] = {
						nil, -- [1]
						0.1019607931375504, -- [2]
					},
					["big_actortitle_text_font"] = "Roboto BoldCondensed",
					["spellpercent_text_size"] = 6,
					["castbar_offset_x"] = 0.3000030517578125,
					["level_text_anchor"] = {
						["y"] = -1.510002136230469,
						["side"] = 5,
					},
					["cast_incombat"] = {
						nil, -- [1]
						8, -- [2]
					},
					["spellname_text_anchor"] = {
						["y"] = 0.1999969482421875,
						["x"] = 1.650001525878906,
						["side"] = 10,
					},
					["percent_text_anchor"] = {
						["x"] = -1,
						["side"] = 11,
					},
					["spellname_text_font"] = "Roboto BoldCondensed",
					["only_names"] = true,
					["quest_color_neutral"] = {
						nil, -- [1]
						0.8666667342185974, -- [2]
					},
					["actorname_text_size"] = 7,
					["big_actorname_text_font"] = "Roboto BoldCondensed",
					["percent_text_ooc"] = false,
					["castbar_offset"] = -1,
					["actorname_text_anchor"] = {
						["x"] = 2.5,
						["side"] = 10,
					},
					["percent_text_size"] = 6,
					["big_actortitle_text_size"] = 8,
					["percent_text_font"] = "ElvUI C",
					["buff_frame_y_offset"] = 1.5,
					["percent_text_outline"] = "NONE",
					["health_incombat"] = {
						121, -- [1]
						12, -- [2]
					},
					["health"] = {
						120, -- [1]
					},
					["big_actorname_text_color"] = {
						0.25098039215686, -- [1]
						0.68627450980392, -- [2]
						0.20392156862745, -- [3]
						1, -- [4]
					},
					["spellname_text_size"] = 6,
					["relevance_state"] = 4,
					["level_text_enabled"] = false,
				},
			},
			["aura_y_offset"] = 0.399993896484375,
			["aura_show_defensive_cd"] = true,
			["focus_texture"] = "mMediaTag D3",
			["cast_statusbar_bgcolor"] = {
				0.21176470588235, -- [1]
				0.21176470588235, -- [2]
				0.21176470588235, -- [3]
				0.90000000596046, -- [4]
			},
			["aura_show_tooltip"] = true,
			["resources_settings"] = {
				["global_settings"] = {
					["show"] = true,
					["personal_bar"] = true,
				},
				["chr"] = {
					["Player-3661-091C86DC"] = "ComboPoints",
					["Player-3661-091C7713"] = "Runes",
					["Player-3661-091D3EB8"] = "HolyPower",
					["Player-3661-08F1CD82"] = "HolyPower",
					["Player-3661-0926A5B4"] = "Essence",
					["Player-3661-090E59D5"] = "Runes",
					["Player-3661-091C6488"] = "ComboPoints",
					["Player-3661-091E66BD"] = "ComboPoints",
					["Player-3661-090ED206"] = "ComboPoints",
					["Player-3661-091BF686"] = "ComboPoints",
					["Player-3661-0913DAD6"] = "Chi",
				},
			},
			["indicator_scale"] = 0.7999999523162842,
			["border_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				1, -- [4]
			},
			["focus_color"] = {
				nil, -- [1]
				nil, -- [2]
				nil, -- [3]
				0.44999998807907, -- [4]
			},
			["castbar_icon_size"] = "same as castbar plus healthbar",
			["ignore_softinteract_objects"] = false,
			["npc_colors"] = {
				[141283] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170474] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167536] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[165556] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[157572] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[141284] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[168942] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[141285] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165430] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[130909] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[172265] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[133685] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[129600] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[150165] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[162046] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167731] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[164218] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[171500] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[164921] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[139946] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165560] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[162047] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[126918] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168882] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[129601] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[168627] = {
					false, -- [1]
					false, -- [2]
					"olive", -- [3]
				},
				[166264] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[169905] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170480] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[137521] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165946] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[139949] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[127111] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135989] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168246] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[171376] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[173484] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[168949] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[166969] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[163520] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[162051] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[168886] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[164862] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[166970] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[163457] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[162691] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[134139] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166396] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[166971] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[166524] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[127879] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134012] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162692] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[131585] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[162309] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[167994] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[163459] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[171188] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[173360] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[164737] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[131586] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170486] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[164929] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167612] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[163077] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[137591] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[131587] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168443] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155221] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162056] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[168891] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170488] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[168572] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[130436] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162057] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[128967] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167806] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[164804] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173044] = {
					false, -- [1]
					false, -- [2]
					"olive", -- [3]
				},
				[167998] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[167615] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[170234] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[171384] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171448] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170490] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[141938] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[153755] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[130437] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162059] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[165189] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[166275] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[141939] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[130661] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[162060] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[135552] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[166276] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135169] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[127497] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[174197] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[164552] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[162061] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[128969] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[132532] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[169912] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162317] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[167611] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168384] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131849] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[166589] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[170483] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134390] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[168365] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[135235] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[163915] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[168578] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131850] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[171772] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[166266] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167493] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[167876] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[164363] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[164427] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[168579] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[164555] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[163086] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134150] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[168058] = {
					false, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[150160] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[165762] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167610] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[168580] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167111] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[132491] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134024] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[130025] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171455] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[168574] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168747] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[165515] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[164557] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[169265] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[164926] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[165260] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167113] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[135239] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168007] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[130026] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[150250] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[163089] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[165197] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[175992] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[169924] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[166411] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[162693] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[133835] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164815] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[169159] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[152905] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134602] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[172991] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[163857] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[151657] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[136391] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[142587] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168968] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[162133] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[130027] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129548] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[168457] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[122969] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[165763] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[167116] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[174175] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[137830] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[172993] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[168394] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[131666] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[164857] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[171333] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[164562] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[165137] = {
					false, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[163157] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[136186] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134158] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162038] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169927] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[155812] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164563] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[165138] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[168907] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[136139] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[175550] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165905] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[174773] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[134284] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[166608] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[134990] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[127488] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[168844] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[161243] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[163862] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[122971] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[174210] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[165076] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[168717] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[161244] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[168845] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[168398] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[131670] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171181] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[162689] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[164550] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[155432] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[139425] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165010] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[168393] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[135759] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[122972] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[168591] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[134418] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[155433] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[129232] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[165805] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[130435] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[162100] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[170572] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[138019] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164861] = {
					false, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[128434] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164185] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[122984] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[167117] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[168934] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[122973] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164567] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[134058] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[163121] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[129602] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[138465] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164558] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[165911] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[168594] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164506] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[168658] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164501] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[171341] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[167892] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[129553] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[167956] = {
					false, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[168837] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[165529] = {
					false, -- [1]
					false, -- [2]
					"mediumslateblue", -- [3]
				},
				[168326] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[171342] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[417] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[165913] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[138255] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[135764] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[166079] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[162329] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[133912] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[134232] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171343] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[133593] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[55659] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[131677] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[168022] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[150712] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[163524] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[130488] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[161124] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[169875] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[151127] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167538] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[138254] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164510] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[168718] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[166299] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[164702] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[164255] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[132481] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[155824] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171805] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[144071] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[136470] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[165597] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167963] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[129529] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[171474] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[127799] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[127480] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165919] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[168153] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[163618] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[134629] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[166301] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[167898] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167962] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[163620] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[134364] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[134174] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[163619] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[164705] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[166302] = {
					false, -- [1]
					false, -- [2]
					"olive", -- [3]
				},
				[163621] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[165408] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[164450] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[131818] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[170199] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[173840] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[170838] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[136665] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139284] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[168986] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[164451] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[164707] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[168156] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[169753] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[131492] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[166304] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[169498] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[165410] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[173714] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[131812] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170690] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[163622] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[162058] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[127482] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167966] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[131685] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[164517] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[155830] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[171799] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[163623] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[129367] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[162729] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[163882] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[135263] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[150146] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[155831] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[136735] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[130485] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168988] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[129527] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[139799] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[131009] = {
					false, -- [1]
					false, -- [2]
					"mediumpurple", -- [3]
				},
				[164414] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[168318] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[160495] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[172312] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165222] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[150297] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[139800] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165414] = {
					false, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[135329] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164967] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[150276] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[150169] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[167955] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[127484] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[173016] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[168992] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[173655] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[167967] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[165415] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[135007] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162049] = {
					false, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[164266] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[168418] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[167965] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[173145] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[173720] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[169696] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167964] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[164578] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[164267] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[135204] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[98035] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[170197] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[163501] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[168843] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[131436] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[157634] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[167607] = {
					false, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[168420] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[120651] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[129370] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[168878] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[170882] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[173339] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[164873] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[127486] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[164920] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[170927] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[164461] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[163503] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[161241] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[133482] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[136643] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135699] = {
					false, -- [1]
					false, -- [2]
					"darkgreen", -- [3]
				},
				[171887] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[165111] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[135846] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[170147] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[136549] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162099] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[170850] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[134994] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[165357] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[172064] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[164463] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[155434] = {
					false, -- [1]
					false, -- [2]
					"blueviolet", -- [3]
				},
				[163058] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[163122] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[152009] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[169893] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[168396] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[172981] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[164464] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[163506] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[169861] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[135246] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[150292] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[168361] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[168425] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[164556] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[163458] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[173053] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[168681] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[162102] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[135241] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[129788] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[168969] = {
					false, -- [1]
					false, -- [2]
					"red", -- [3]
				},
				[163891] = {
					false, -- [1]
					false, -- [2]
					"dimgrey", -- [3]
				},
				[167532] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[133870] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
				[162039] = {
					false, -- [1]
					false, -- [2]
					"cyan", -- [3]
				},
				[162103] = {
					false, -- [1]
					false, -- [2]
					"forestgreen", -- [3]
				},
				[130012] = {
					false, -- [1]
					false, -- [2]
					"yellow", -- [3]
				},
				[175517] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165872] = {
					false, -- [1]
					false, -- [2]
					"white", -- [3]
				},
				[163892] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[167533] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[173729] = {
					false, -- [1]
					false, -- [2]
					"fuchsia", -- [3]
				},
				[162040] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[163126] = {
					false, -- [1]
					false, -- [2]
					"paleturquoise", -- [3]
				},
				[132530] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[162763] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[168310] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165251] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[167534] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[168109] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[162041] = {
					false, -- [1]
					false, -- [2]
					"saddlebrown", -- [3]
				},
				[131445] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[164362] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[162744] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[171184] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[163894] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[135167] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[165824] = {
					false, -- [1]
					false, -- [2]
					"lightgreen", -- [3]
				},
				[165108] = {
					false, -- [1]
					false, -- [2]
					"magenta", -- [3]
				},
				[163128] = {
					false, -- [1]
					false, -- [2]
					"blue", -- [3]
				},
				[157571] = {
					false, -- [1]
					false, -- [2]
					"deepskyblue", -- [3]
				},
				[134137] = {
					false, -- [1]
					false, -- [2]
					"springgreen", -- [3]
				},
			},
			["aura_show_magic"] = true,
			["extra_icon_show_enrage_border"] = {
				0.85098039215686, -- [1]
				0, -- [2]
				0.074509803921569, -- [3]
			},
			["hook_data"] = {
				{
					["Enabled"] = true,
					["Revision"] = 191,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"black\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 0.5\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Author"] = "Tecno-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"black\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 0.5\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Prio"] = 99,
					["Time"] = 1672790468,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["LastHookEdited"] = "Nameplate Created",
					["Name"] = "Extra Border [Plater]",
					["Icon"] = 133689,
					["PlaterCore"] = 1,
				}, -- [1]
				{
					["Enabled"] = true,
					["Revision"] = 87,
					["Options"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Author"] = "Ahwa-Azralon",
					["OptionsValues"] = {
					},
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Prio"] = 99,
					["Time"] = 1672790630,
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Name"] = "Execute Range [Plater]",
					["Icon"] = 135358,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        --Priest\n        [\"Vampiric Touch\"] = 21,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 25,\n        --Rogue\n        [\"Marked for Death\"] = 99,\n        [\"Vendetta\"] = 98,\n        [\"Shiv\"] = 97,\n        [\"Flagellation\"] = 96,\n        [\"Garrote\"] = 95,\n        [\"Rupture\"] = 94,\n        [\"Between the Eyes\"] = 93,\n        [\"Pistol Shot\"] = 92,\n        --Monk\n        [\"Mark of the Crane\"] = 59,\n        --Dungeon Debuffs\n        [\"Droman's Wrath\"] = 1001,\n        --Dungeon Buffs\n        [\"Bolstering\"] = 2001,\n        [\"Slime Coated\"] = 2002,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1616291540,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = true,
					["Revision"] = 411,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Initialization",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [3]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \n    --create thee border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1673221099,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/szRqTPTUp/1",
					["Icon"] = 133004,
					["Enabled"] = true,
					["Revision"] = 99,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar.",
					["Prio"] = 99,
					["Name"] = "Cast Bar Border",
					["PlaterCore"] = 1,
					["version"] = 1,
					["LastHookEdited"] = "Constructor",
					["Options"] = {
					},
				}, -- [4]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    unitFrame.castBar.ScheduleToHide = function (self) self:Hide() end\n    \nend",
					},
					["Time"] = 1673755118,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/xz2wiexbc/1",
					["Enabled"] = true,
					["Revision"] = 50,
					["semver"] = "1.0.0",
					["Author"] = "Caeleran-Draenor",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    --insert code here\n    unitFrame.castBar.ScheduleToHide = function (self) self:Hide() end\n    \nend",
					},
					["Name"] = "CastbarDisappearOnInterrupt",
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Load Screen"] = "function (modTable)\n    if (Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") then\n        Plater.db.profile.aura_tracker.track_method = 0x2\n    else\n        Plater.db.profile.aura_tracker.track_method = 0x1\n    end\n    \n    Plater.RefreshDBUpvalues()\n    Plater.FullRefreshAllPlates()\n    \n    --print(\"Load Screen\", Plater.db.profile.aura_tracker.track_method, Plater.ZoneInstanceType)\n    \nend\n\n\n",
					},
					["Time"] = 1672624216,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/lLK9gn7lc/4",
					["Icon"] = "Interface\\Icons\\Achievement_GuildPerk_Quick and Dead",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "1.0.3",
					["Author"] = "Ariani-Antonidas",
					["Desc"] = "Switches to manual buff tracking in arena/pvp and to automatic tracking otherwise.",
					["Prio"] = 99,
					["version"] = 4,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Arena - Buff-Tracking Mode Switch",
				}, -- [6]
				{
					["OptionsValues"] = {
						["iconTexturePath"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
						["showIcon"] = true,
						["showTexture"] = false,
						["textureWidth"] = 10,
						["iconSizeOffset"] = 1,
						["iconPadding"] = -1,
						["useFullSize"] = true,
					},
					["HooksTemp"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1673755126,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = true,
					["Revision"] = 393,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Icon Padding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconPadding",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.30567157268524, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Texture Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureHeightMod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [16]
					},
					["LastHookEdited"] = "",
					["Name"] = "Cast Bar Icon Settings [P]",
				}, -- [7]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.addHook(unitFrame)\nend\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    unitFrame.healthBar.customShieldHookNeedsUpdate = true\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    local hb = unitFrame.healthBar\n    if hb.customShieldHookNeedsUpdate and hb.displayedUnit then\n        hb:UNIT_MAXHEALTH()\n        hb.customShieldHookNeedsUpdate = false\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    modTable.LibSharedMedia = LibStub:GetLibrary (\"LibSharedMedia-3.0\")\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --settings: (changing this requires a /reload)\n    local shieldTexture = \"Plater Focus\"\n    --local shieldTexture = \"Plater Focus\"\n    \n    \n    --init\n    local hb = unitFrame.healthBar\n    local unit = hb.displayedUnit\n    if shieldTexture and shieldTexture ~= \"\" then\n        local texture = modTable.LibSharedMedia:Fetch(\"statusbar\", shieldTexture)\n        hb.Settings.ShieldIndicatorTexture = texture or [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    else\n        hb.Settings.ShieldIndicatorTexture = [[Interface\\RaidFrame\\Shield-Fill]]\n        hb.shieldAbsorbIndicator:SetTexture (hb.Settings.ShieldIndicatorTexture, true, true)\n    end\n    \n    -- ensure settings are up to date... workardound till fix in Plater core.\n    unitFrame.healthBar.Settings.ShowShields = Plater.db.profile.show_shield_prediction\n    \n    -- overwrite to add custom text\n    function Plater.UpdateLifePercentText (healthBar, unitId, showHealthAmount, showPercentAmount, showDecimals) -- ~health\n        \n        --get the cached health amount for performance\n        local currentHealth, maxHealth, absorb = healthBar.CurrentHealth, healthBar.CurrentHealthMax, healthBar.currentAbsorb\n        \n        if (showHealthAmount and showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.2f\", percent) .. \"%)\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. format (\"%.1f\", percent) .. \"%)\")\n                else\n                    healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (100%)\")\n                end\n            else\n                healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth) .. \" (\" .. floor (percent) .. \"%)\")\n            end\n            \n        elseif (showHealthAmount) then\n            healthBar.lifePercent:SetText (Plater.FormatNumber (currentHealth))\n            \n        elseif (showPercentAmount) then\n            local percent = currentHealth / maxHealth * 100\n            \n            if (showDecimals) then\n                if (percent < 10) then\n                    healthBar.lifePercent:SetText (format (\"%.2f\", percent) .. \"%\")\n                    \n                elseif (percent < 99.9) then\n                    healthBar.lifePercent:SetText (format (\"%.1f\", percent) .. \"%\")\n                else\n                    healthBar.lifePercent:SetText (\"100%\")\n                end\n            else\n                healthBar.lifePercent:SetText (floor (percent) .. \"%\")\n            end\n            \n        else\n            healthBar.lifePercent:SetText (\"\")\n        end\n        \n        -- CUSTOM HERE --\n        \n        \n        -- CUSTOM END --\n    end\n    \n    \n    -- overwrite UpdateHealPrediction on the healthBar\n    function envTable.addHook(unitFrame)\n        local hb = unitFrame.healthBar\n        \n        if not hb.isCustomShieldHook then\n            --health and absorbs prediction from Plater core, reworked to integrate shields into the health bar\n            hb.UpdateHealPrediction = function (self)\n                local currentHealth = self.currentHealth\n                local currentHealthMax = self.currentHealthMax\n                local healthPercent = currentHealth / currentHealthMax\n                \n                if (not currentHealthMax or currentHealthMax <= 0) then\n                    return\n                end\n                \n                --order is: the health of the unit > damage absorb > heal absorb > incoming heal\n                local width = self:GetWidth()\n                \n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                \n                if not self.displayedUnit then return end\n                \n                if (self.Settings.ShowHealingPrediction) then\n                    --incoming heal on the unit from all sources\n                    local unitHealIncoming = UnitGetIncomingHeals (self.displayedUnit) or 0\n                    --heal absorbs\n                    local unitHealAbsorb = UnitGetTotalHealAbsorbs (self.displayedUnit) or 0\n                    \n                    if (unitHealIncoming > 0) then\n                        --calculate what is the percent of health incoming based on the max health the player has\n                        local incomingPercent = unitHealIncoming / currentHealthMax\n                        self.incomingHealIndicator:Show()\n                        self.incomingHealIndicator:SetWidth (max (1, min (width * incomingPercent, abs (healthPercent - 1) * width)))\n                        self.incomingHealIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.incomingHealIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.incomingHealIndicator:Hide()\n                    end\n                    \n                    if (unitHealAbsorb > 0) then\n                        local healAbsorbPercent = unitHealAbsorb / currentHealthMax\n                        self.healAbsorbIndicator:Show()\n                        self.healAbsorbIndicator:SetWidth (max (1, min (width * healAbsorbPercent, abs (healthPercent - 1) * width)))\n                        self.healAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercent, 0)\n                        self.healAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercent, 0)\n                    else\n                        self.healAbsorbIndicator:Hide()\n                    end\n                end\n                \n                if (self.Settings.ShowShields) then\n                    --damage absorbs\n                    local unitDamageAbsorb = UnitGetTotalAbsorbs (self.displayedUnit) or 0\n                    self.currentAbsorb = unitDamageAbsorb\n                    \n                    if (unitDamageAbsorb > 0) then\n                        local curHealthTotal = unitDamageAbsorb + currentHealth\n                        local damageAbsorbPercent\n                        local healthPercentAbsorb\n                        if curHealthTotal > currentHealthMax then\n                            damageAbsorbPercent = unitDamageAbsorb / curHealthTotal\n                            healthPercentAbsorb = currentHealth / curHealthTotal\n                            self:SetMinMaxValues (0, curHealthTotal)\n                        else \n                            damageAbsorbPercent = unitDamageAbsorb / currentHealthMax\n                            healthPercentAbsorb = currentHealth / currentHealthMax\n                            self:SetMinMaxValues (0, currentHealthMax)\n                        end\n                        --print(healthPercentAbsorb, currentHealth, unitDamageAbsorb, damageAbsorbPercent)\n                        \n                        self.shieldAbsorbIndicator:Show()\n                        \n                        \n                        self.shieldAbsorbIndicator:SetWidth (width * damageAbsorbPercent)\n                        self.shieldAbsorbIndicator:SetPoint (\"topleft\", self, \"topleft\", width * healthPercentAbsorb, 0)\n                        self.shieldAbsorbIndicator:SetPoint (\"bottomleft\", self, \"bottomleft\", width * healthPercentAbsorb, 0)\n                        \n                        \n                    else\n                        self.shieldAbsorbIndicator:Hide()\n                    end\n                end\n                \n                hb.isCustomShieldHook = true\n            end\n            \n            if hb.displayedUnit then\n                hb.shieldAbsorbIndicator:Hide()\n                hb.shieldAbsorbGlow:Hide()\n                hb:UNIT_MAXHEALTH()\n            else\n                hb.customShieldHookNeedsUpdate = true\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1672624214,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/VtPjNl8Mg/4",
					["Icon"] = 135940,
					["Enabled"] = true,
					["Revision"] = 1063,
					["semver"] = "1.0.3",
					["Author"] = "Elaiana-Proudmoore",
					["Desc"] = "Adds absorbs to the health bar as full health value.",
					["Prio"] = 99,
					["version"] = 4,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "",
					["Name"] = "Absorb Shields in Healthbar",
				}, -- [8]
				{
					["OptionsValues"] = {
						["BSborderth"] = 2,
						["BStimer_size"] = 12,
						["BSdesc_size"] = 15,
						["BStimer_color"] = {
							1, -- [1]
							1, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.ExtraIconFrame:SetOption (\"text_size\", modTable.config.BStimer_size)\n    unitFrame.ExtraIconFrame:SetOption (\"text_color\", modTable.config.BStimer_color)\n    unitFrame.ExtraIconFrame:SetOption (\"desc_text_size\", modTable.config.BSdesc_size)\n    unitFrame.ExtraIconFrame:SetOption (\"stack_text_size\", modTable.config.BSstack_size)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier ()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier = function()\n        \n        if modTable.config.BShidefriendl and unitFrame.actorType == \"friendlyplayer\" then\n            unitFrame.ExtraIconFrame:Hide()\n        end      \n        \n        for index, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if (auraIcon:IsShown()) then\n                \n                local profile = Plater.db.profile\n                local Anchor = {\n                    side = modTable.config.Descanchor, \n                    x = modTable.config.Descxoff, \n                    y = modTable.config.Descyoff,\n                }              \n                local size = modTable.config.BSborderth\n                \n                \n                \n                auraIcon.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                auraIcon.Texture:ClearAllPoints()\n                auraIcon.Texture:SetAllPoints()\n                auraIcon.Border:Hide() \n                \n                Plater.SetFontOutlineAndShadow (auraIcon.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n                \n                Plater.SetAnchor (auraIcon.Desc, Anchor)\n                \n                auraIcon.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n                auraIcon.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)  \n                \n                if modTable.config.BScdreverse then\n                    auraIcon.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n                end\n                \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    unitFrame.ExtraIconFrame:SetOption (\"text_size\", modTable.config.BStimer_size)\n    unitFrame.ExtraIconFrame:SetOption (\"text_color\", modTable.config.BStimer_color)\n    unitFrame.ExtraIconFrame:SetOption (\"desc_text_size\", modTable.config.BSdesc_size)\n    unitFrame.ExtraIconFrame:SetOption (\"stack_text_size\", modTable.config.BSstack_size)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier ()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    envTable.auramodifier = function()\n        \n        if modTable.config.BShidefriendl and unitFrame.actorType == \"friendlyplayer\" then\n            unitFrame.ExtraIconFrame:Hide()\n        end      \n        \n        for index, auraIcon in ipairs (unitFrame.ExtraIconFrame.IconPool) do\n            if (auraIcon:IsShown()) then\n                \n                local profile = Plater.db.profile\n                local Anchor = {\n                    side = modTable.config.Descanchor, \n                    x = modTable.config.Descxoff, \n                    y = modTable.config.Descyoff,\n                }              \n                local size = modTable.config.BSborderth\n                \n                \n                \n                auraIcon.Texture:SetSize(profile.extra_icon_width - size/2, profile.extra_icon_height - size/2)\n                auraIcon.Texture:ClearAllPoints()\n                auraIcon.Texture:SetAllPoints()\n                auraIcon.Border:Hide() \n                \n                Plater.SetFontOutlineAndShadow (auraIcon.CountdownText, profile.aura_timer_text_outline, profile.aura_timer_text_shadow_color, profile.aura_timer_text_shadow_color_offset[1], profile.aura_timer_text_shadow_color_offset[2])\n                \n                Plater.SetAnchor (auraIcon.Desc, Anchor)\n                \n                auraIcon.Cooldown:SetEdgeTexture (profile.aura_cooldown_edge_texture)\n                auraIcon.Cooldown:SetDrawSwipe (profile.aura_cooldown_show_swipe)  \n                \n                if modTable.config.BScdreverse then\n                    auraIcon.Cooldown:SetReverse (profile.aura_cooldown_reverse)\n                end\n                \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1673061470,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/-FONAlf09/1",
					["Icon"] = 134328,
					["Enabled"] = true,
					["Revision"] = 360,
					["semver"] = "1.0.0",
					["Author"] = "Driani-Antonidas",
					["Desc"] = "",
					["Prio"] = 99,
					["version"] = 1,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Basic Options",
							["Name"] = "Basic Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "BShidefriendly",
							["Value"] = true,
							["Name"] = "Hide Buff Special at Friendly UnitFrame",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Hide Buff Special at Friendly UnitFrame",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "BScdreverse",
							["Value"] = true,
							["Name"] = "Swipe Closure Inverted",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, swipe closure inverted",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set Buff Special border thickness",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 2,
							["Name"] = "Border Thickness",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "BSborderth",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Buff Special Text Options",
							["Name"] = "Buff Special Text Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set timer text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 14,
							["Name"] = "Timer Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "BStimer_size",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "BStimer_color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Timer Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set timer text color",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set stack text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Stack Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "BSstack_size",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "Blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "",
							["Value"] = "Buff Special Player Name Options",
							["Name"] = "Buff Special Player Name Options",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Player Name Text Size",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "BSdesc_size",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 8,
							["Desc"] = "1(TOP-LEFT) / 2(LEFT) / 3(BOT-LEFT) / 4(BOT) / 5(BOT-RIGHT) / 6(RIGHT) / 7(TOP-RIGHT) / 8(TOP)",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 4,
							["Name"] = "Player Name Text Anchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "Descanchor",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text y-offset",
							["Min"] = -100,
							["Fraction"] = false,
							["Value"] = -2,
							["Name"] = "Player Name Text Y-offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "Descyoff",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "Set player name text x-offset",
							["Min"] = -100,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Player Name Text X-offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "Descxoff",
						}, -- [15]
					},
					["LastHookEdited"] = "",
					["Name"] = "Buff Special Options",
				}, -- [9]
				{
					["OptionsValues"] = {
						["manualNameOverwrites"] = {
							{
								"Mordretha, the Endless Empress", -- [1]
								"Mordretha", -- [2]
							}, -- [1]
						},
						["abbreviateLeftToRight"] = true,
						["nameLength"] = 18,
					},
					["LastHookEdited"] = "Initialization",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenName(unitId, unitFrame, modTable.config, envTable)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenName(unitId, unitFrame, modTable.config, envTable)\nend",
						["Initialization"] = "function (modTable)\n    local UnitName = UnitName\n    local select = select\n    local concat = table.concat\n    local strsplit = strsplit\n    local UnitGUID = UnitGUID\n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    \n    local utf8len = function(str)\n        if utf8Enabled then\n            return str:utf8len()\n        end\n        \n        local count = 0\n        for _ in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n        end\n        \n        return count\n    end\n    \n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    -- Left to right works in the following steps for \"The Best Warrior Linaori\":\n    -- T. Best Warrior Linaori\n    -- T.B. Warrior Linaori\n    -- T.B.W. Linaori\n    local reduceLeftToRight\n    reduceLeftToRight = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not rightPart or utf8len(rightPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return leftPart .. \" \" .. rightPart, \"\"\n        end\n        \n        local firstWord, remainingRightPart = rightPart:match(\"^([^ ]*)[ ](.*)$\")\n        if not firstWord then\n            firstWord = rightPart\n            remainingRightPart = \"\"\n        end\n        leftPart = leftPart .. utf8sub(firstWord, 1, 1) .. \".\"\n        \n        return reduceLeftToRight(leftPart, remainingRightPart, lastPartLength, nameLength)\n    end\n    \n    -- Right to left works in the following steps for \"The Best Warrior Linaori\":\n    -- The Best W. Linaori\n    -- The B.W. Linaori\n    -- T.B.W. Linaori\n    local reduceRightToLeft\n    reduceRightToLeft = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not leftPart or utf8len(leftPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return \"\", leftPart .. \" \" .. rightPart\n        end\n        \n        local remainingLeftPart, lastWord = leftPart:match(\"^(.*)[ ]([^ ]*)$\")\n        \n        if not remainingLeftPart then\n            remainingLeftPart = \"\"\n            lastWord = leftPart\n        end\n        \n        rightPart = utf8sub(lastWord, 1, 1) .. \".\" .. rightPart\n        \n        return reduceRightToLeft(remainingLeftPart, rightPart, lastPartLength, nameLength)\n    end\n    \n    local cutOffName = function (wholeName, config)\n        if config.noSplitCutoff then\n            return utf8sub(wholeName, 1, config.nameLength)\n        end\n        \n        return wholeName\n    end\n    \n    local returnUpdateName = function (unitFrame, visibleName)\n        unitFrame.namePlateUnitName = visibleName\n        unitFrame.PlateFrame.namePlateUnitName = visibleName\n        unitFrame.healthBar.unitName:SetText(visibleName)\n    end\n    \n    modTable.shortenName = function (unitId, unitFrame, config, envTable)\n        if not unitId then return end\n        \n        local nameLength = config.nameLength\n        local name = unitFrame.namePlateUnitName\n        \n        -- let the player overwrite the name regardless of length based on the NPC name\n        local manualNameOverwrite = config.manualNameOverwrites[name]\n        if manualNameOverwrite then\n            return returnUpdateName(unitFrame, manualNameOverwrite)\n        end\n        \n        -- let the player overwrite the name regardless of length based on the NPC ID\n        local npcId = select(6, strsplit(\"-\", UnitGUID(unitId)))\n        local manualNpcIdOverwrite = config.manualNameOverwrites[npcId]\n        if manualNpcIdOverwrite then\n            return returnUpdateName(unitFrame, manualNpcIdOverwrite)\n        end\n        \n        -- the original name is short enough already\n        if utf8len(name) <= nameLength then\n            return returnUpdateName(unitFrame, name)\n        end\n        \n        -- Naming often implies \"<name>, <title>\" or \"<title> <name>\"\n        if name:find(\",\") then\n            -- assumed that \",\" implies a title, and try to strip them of their title\n            local possibleName = name:match(\"^(.*)[,][^,]*$\")\n            \n            if possibleName then\n                if utf8len(possibleName) <= nameLength then\n                    return returnUpdateName(unitFrame, possibleName)\n                end\n                \n                -- in case of longer names: \"Linaori the best fury warrior ever, of the deeps\n                name = possibleName\n            end\n        end\n        \n        -- Forsworn Squad-Leader -> Forsworn Squad Leader\n        -- Squad-Leader of the Forsworn -> Squad Leader of the Forsworn\n        if config.hyphenAsSpace then\n            local lastPart\n            \n            -- keep \"Forsworn Squad-Leader\" as is, while still replacing \"Squad-Leader of the Forsworn\"\n            if config.keepHyphenInLastName then\n                local _, spaces = name:gsub(\" \", \"\")\n                if spaces > 0 then\n                    name, lastPart = name:match(\"^(.*)[ ]([^ ]*)$\")\n                end\n            end\n            \n            name = name:gsub(\"-\", \" \")\n            if lastPart then\n                name = name .. \" \" .. lastPart\n            end\n        end\n        \n        -- amount of times we can check if the name needs replacing\n        local _, occurrences = name:gsub(\" \", \"\")\n        \n        -- no spaces left to split on, just return whatever can be made of it\n        if occurrences == 0 then\n            return returnUpdateName(unitFrame, cutOffName(name, config))\n        end\n        \n        local nameToShorten, nameToKeep, nameToKeepLength\n        if config.keepRightSide then\n            -- we always want the last name if possible\n            -- example: Cleave Training Dummy -> Dummy\n            nameToShorten, nameToKeep = name:match(\"^(.*)[ ]([^ ]*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        else\n            -- we always want the first name if possible\n            -- example: Cleave Training Dummy -> Cleave\n            nameToKeep, nameToShorten = name:match(\"^([^ ]*)[ ](.*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        end\n        \n        -- in case the name to keep is too long, just use that\n        if nameToKeepLength > nameLength or not config.abbreviate then\n            return returnUpdateName(unitFrame, cutOffName(nameToKeep, config))\n        end\n        \n        local shortenedName\n        if config.abbreviateLeftToRight then\n            shortenedName, _ = reduceLeftToRight(\"\", nameToShorten, nameToKeepLength, nameLength)\n        else\n            _, shortenedName = reduceRightToLeft(nameToShorten, \"\", nameToKeepLength, nameLength)\n        end\n        \n        if config.keepRightSide then\n            return returnUpdateName(unitFrame, shortenedName .. \" \" .. nameToKeep)\n        else\n            return returnUpdateName(unitFrame, nameToKeep .. \" \" .. shortenedName)\n        end\n    end\nend",
					},
					["Time"] = 1673221042,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/QHPCLaX03/11",
					["Icon"] = 134331,
					["Enabled"] = true,
					["Revision"] = 721,
					["semver"] = "1.0.10",
					["Author"] = "Linalori-Ragnaros",
					["Desc"] = "Tries to make sense of long names",
					["Prio"] = 99,
					["Name"] = "Smart Name Shortener",
					["PlaterCore"] = 1,
					["version"] = 11,
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenName(unitId, unitFrame, modTable.config, envTable)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.shortenName(unitId, unitFrame, modTable.config, envTable)\nend",
						["Initialization"] = "function (modTable)\n    local UnitName = UnitName\n    local select = select\n    local concat = table.concat\n    local strsplit = strsplit\n    local UnitGUID = UnitGUID\n    local utf8Enabled = string.utf8len and string.utf8sub and true\n    \n    local utf8len = function(str)\n        if utf8Enabled then\n            return str:utf8len()\n        end\n        \n        local count = 0\n        for _ in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n        end\n        \n        return count\n    end\n    \n    local utf8sub = function(str, from, to)\n        if utf8Enabled then\n            return str:utf8sub(from, to)\n        end\n        \n        local extracted = {}\n        local size = 0\n        local count = 0\n        for char in str:gmatch(\"[%z\\1-\\127\\194-\\244][\\128-\\191]*\") do\n            count = count + 1\n            \n            if count >= from and count <= to then\n                size = size + 1\n                extracted[size] = char\n            end\n            \n            if count >= to then return concat(extracted) end\n        end\n        \n        return \"\"\n    end\n    \n    -- Left to right works in the following steps for \"The Best Warrior Linaori\":\n    -- T. Best Warrior Linaori\n    -- T.B. Warrior Linaori\n    -- T.B.W. Linaori\n    local reduceLeftToRight\n    reduceLeftToRight = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not rightPart or utf8len(rightPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return leftPart .. \" \" .. rightPart, \"\"\n        end\n        \n        local firstWord, remainingRightPart = rightPart:match(\"^([^ ]*)[ ](.*)$\")\n        if not firstWord then\n            firstWord = rightPart\n            remainingRightPart = \"\"\n        end\n        leftPart = leftPart .. utf8sub(firstWord, 1, 1) .. \".\"\n        \n        return reduceLeftToRight(leftPart, remainingRightPart, lastPartLength, nameLength)\n    end\n    \n    -- Right to left works in the following steps for \"The Best Warrior Linaori\":\n    -- The Best W. Linaori\n    -- The B.W. Linaori\n    -- T.B.W. Linaori\n    local reduceRightToLeft\n    reduceRightToLeft = function (leftPart, rightPart, lastPartLength, nameLength)\n        if not leftPart or utf8len(leftPart) == 0 then\n            return leftPart, rightPart\n        end\n        \n        -- 2 spaces added to the length after concat\n        if 2 + utf8len(leftPart) + utf8len(rightPart) + lastPartLength <= nameLength then\n            return \"\", leftPart .. \" \" .. rightPart\n        end\n        \n        local remainingLeftPart, lastWord = leftPart:match(\"^(.*)[ ]([^ ]*)$\")\n        \n        if not remainingLeftPart then\n            remainingLeftPart = \"\"\n            lastWord = leftPart\n        end\n        \n        rightPart = utf8sub(lastWord, 1, 1) .. \".\" .. rightPart\n        \n        return reduceRightToLeft(remainingLeftPart, rightPart, lastPartLength, nameLength)\n    end\n    \n    local cutOffName = function (wholeName, config)\n        if config.noSplitCutoff then\n            return utf8sub(wholeName, 1, config.nameLength)\n        end\n        \n        return wholeName\n    end\n    \n    local returnUpdateName = function (unitFrame, visibleName)\n        unitFrame.namePlateUnitName = visibleName\n        unitFrame.PlateFrame.namePlateUnitName = visibleName\n        unitFrame.healthBar.unitName:SetText(visibleName)\n    end\n    \n    modTable.shortenName = function (unitId, unitFrame, config, envTable)\n        if not unitId then return end\n        \n        local nameLength = config.nameLength\n        local name = unitFrame.namePlateUnitName\n        \n        -- let the player overwrite the name regardless of length based on the NPC name\n        local manualNameOverwrite = config.manualNameOverwrites[name]\n        if manualNameOverwrite then\n            return returnUpdateName(unitFrame, manualNameOverwrite)\n        end\n        \n        -- let the player overwrite the name regardless of length based on the NPC ID\n        local npcId = select(6, strsplit(\"-\", UnitGUID(unitId)))\n        local manualNpcIdOverwrite = config.manualNameOverwrites[npcId]\n        if manualNpcIdOverwrite then\n            return returnUpdateName(unitFrame, manualNpcIdOverwrite)\n        end\n        \n        -- the original name is short enough already\n        if utf8len(name) <= nameLength then\n            return returnUpdateName(unitFrame, name)\n        end\n        \n        -- Naming often implies \"<name>, <title>\" or \"<title> <name>\"\n        if name:find(\",\") then\n            -- assumed that \",\" implies a title, and try to strip them of their title\n            local possibleName = name:match(\"^(.*)[,][^,]*$\")\n            \n            if possibleName then\n                if utf8len(possibleName) <= nameLength then\n                    return returnUpdateName(unitFrame, possibleName)\n                end\n                \n                -- in case of longer names: \"Linaori the best fury warrior ever, of the deeps\n                name = possibleName\n            end\n        end\n        \n        -- Forsworn Squad-Leader -> Forsworn Squad Leader\n        -- Squad-Leader of the Forsworn -> Squad Leader of the Forsworn\n        if config.hyphenAsSpace then\n            local lastPart\n            \n            -- keep \"Forsworn Squad-Leader\" as is, while still replacing \"Squad-Leader of the Forsworn\"\n            if config.keepHyphenInLastName then\n                local _, spaces = name:gsub(\" \", \"\")\n                if spaces > 0 then\n                    name, lastPart = name:match(\"^(.*)[ ]([^ ]*)$\")\n                end\n            end\n            \n            name = name:gsub(\"-\", \" \")\n            if lastPart then\n                name = name .. \" \" .. lastPart\n            end\n        end\n        \n        -- amount of times we can check if the name needs replacing\n        local _, occurrences = name:gsub(\" \", \"\")\n        \n        -- no spaces left to split on, just return whatever can be made of it\n        if occurrences == 0 then\n            return returnUpdateName(unitFrame, cutOffName(name, config))\n        end\n        \n        local nameToShorten, nameToKeep, nameToKeepLength\n        if config.keepRightSide then\n            -- we always want the last name if possible\n            -- example: Cleave Training Dummy -> Dummy\n            nameToShorten, nameToKeep = name:match(\"^(.*)[ ]([^ ]*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        else\n            -- we always want the first name if possible\n            -- example: Cleave Training Dummy -> Cleave\n            nameToKeep, nameToShorten = name:match(\"^([^ ]*)[ ](.*)$\")\n            nameToKeepLength = utf8len(nameToKeep)\n        end\n        \n        -- in case the name to keep is too long, just use that\n        if nameToKeepLength > nameLength or not config.abbreviate then\n            return returnUpdateName(unitFrame, cutOffName(nameToKeep, config))\n        end\n        \n        local shortenedName\n        if config.abbreviateLeftToRight then\n            shortenedName, _ = reduceLeftToRight(\"\", nameToShorten, nameToKeepLength, nameLength)\n        else\n            _, shortenedName = reduceRightToLeft(nameToShorten, \"\", nameToKeepLength, nameLength)\n        end\n        \n        if config.keepRightSide then\n            return returnUpdateName(unitFrame, shortenedName .. \" \" .. nameToKeep)\n        else\n            return returnUpdateName(unitFrame, nameToKeep .. \" \" .. shortenedName)\n        end\n    end\nend",
					},
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 99,
							["Desc"] = "The length of the name can be before cutoff is applied",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 18,
							["Name"] = "Name length",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameLength",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Treat hyphens (-) as space",
							["Value"] = true,
							["Key"] = "hyphenAsSpace",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Also split names on hyphens instead of just the whole word",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Keep hyphen in the last name",
							["Value"] = true,
							["Key"] = "keepHyphenInLastName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When hyphens are treated as spaces, keep the last part of the name intact",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cutoff when no split can be done",
							["Value"] = true,
							["Key"] = "noSplitCutoff",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When the smallest word is still longer than \"Name length\", cut it off to the name length. If unchecked, will return the full name",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Abbreviate names (W.O. Warcraft)",
							["Value"] = true,
							["Key"] = "abbreviate",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If unchecked, nothing is shown instead",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Abbreviate left to right",
							["Value"] = false,
							["Key"] = "abbreviateLeftToRight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Where to start abbreviation. (ltr) \"T. Best Linaori\" vs (rtl) \"The B. Linaori\"",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Keep right side",
							["Value"] = true,
							["Key"] = "keepRightSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Keep the right side instead of left side of the name. Right side: \"T.B. Warrior\". Left side: \"The B.L.\"",
						}, -- [7]
						{
							["Type"] = 7,
							["Name"] = "Manual name overwrites",
							["Value"] = {
								{
									"Mordretha, the Endless Empress", -- [1]
									"Mordretha", -- [2]
								}, -- [1]
							},
							["Key"] = "manualNameOverwrites",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If a name matches the key, overwrite it with value and don't guess anything after",
						}, -- [8]
					},
				}, -- [10]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIndicator (unitFrame, unitId)\n    \nend\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    function envTable.UpdateIndicator (unitFrame, unitId)\n        local unitClassification = UnitClassification (unitId)\n        local unitName = UnitName (unitId)\n        unitName = unitName or UNKNOWN\n        \n        if (unitClassification == \"rareelite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. \"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t \" .. unitName)\n            \n        elseif (unitClassification == \"rare\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\AddOns\\\\Plater\\\\media\\\\star_full_64:12:12:0:0:64:64:0:64:0:64|t\" .. unitName)\n            \n        elseif (unitClassification == \"elite\") then\n            unitFrame.unitName:SetText (\"|TInterface\\\\GLUES\\\\CharacterSelect\\\\Glues-AddOn-Icons:12:12:0:0:64:16:48:64:0:16|t\" .. unitName)\n            \n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1672625256,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/UfM0TP_PR/1",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\star_full_64",
					["Enabled"] = true,
					["Revision"] = 35,
					["Options"] = {
					},
					["Author"] = "�r��ne-Kel'thuzad",
					["Desc"] = "Show yellow star for elite; Silver star for rares",
					["Prio"] = 99,
					["Name"] = "Rarity in the Name",
					["PlaterCore"] = 1,
					["version"] = 1,
					["LastHookEdited"] = "Constructor",
					["semver"] = "1.0.0",
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}       \n    \n    envTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"snow\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"gray\", --skull\n    }\n    \n    function envTable.UpdateMarkColor (unitFrame)\n        local raidMark = Plater.GetRaidMark (unitFrame)\n        \n        if (raidMark) then\n            Plater.SetNameplateColor (unitFrame, envTable.ColorByMark [raidMark])\n            envTable.HasRaidMark = true\n            \n        else\n            if (envTable.HasRaidMark) then\n                Plater.RefreshNameplateColor (unitFrame)\n                envTable.HasRaidMark = nil\n                \n            end\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \nend\n\n\n",
						["Raid Target"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \nend\n\n\n",
					},
					["Time"] = 1672803952,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/n5_b7Qrjj/1",
					["Icon"] = "Interface\\TARGETINGFRAME\\UI-RaidTargetingIcons",
					["Enabled"] = false,
					["Revision"] = 21,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the healthbar color based on the raid mark on the unit",
					["Prio"] = 99,
					["Name"] = "Color by Raid Mark",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Raid Target"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateMarkColor (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}       \n    \n    envTable.ColorByMark = {\n        \"gold\", --star\n        \"darkorange\", --circle\n        \"darkorchid\", --diamond\n        \"forestgreen\", --triangle\n        \"snow\", --moon\n        \"midnightblue\", --square\n        \"maroon\", --cross\n        \"gray\", --skull\n    }\n    \n    function envTable.UpdateMarkColor (unitFrame)\n        local raidMark = Plater.GetRaidMark (unitFrame)\n        \n        if (raidMark) then\n            Plater.SetNameplateColor (unitFrame, envTable.ColorByMark [raidMark])\n            envTable.HasRaidMark = true\n            \n        else\n            if (envTable.HasRaidMark) then\n                Plater.RefreshNameplateColor (unitFrame)\n                envTable.HasRaidMark = nil\n                \n            end\n        end\n    end\nend\n\n\n",
					},
					["version"] = 1,
				}, -- [12]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.CreateHoverHighlight(unitFrame)\nend\n\n\n",
						["Initialization"] = "function (modTable)\n    -- adding show for the glow frame to EnableHighlight\n    function Plater.EnableHighlight (unitFrame)\n        unitFrame.HighlightFrame:Show()\n        unitFrame.HighlightFrame.HighlightTexture:Show()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Show() end\n        \n        unitFrame.HighlightFrame.unit = unitFrame.namePlateUnitToken\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", Plater.CheckHighlight)\n    end\n    \n    -- adding hide for the glow frame to DisableHighlight\n    function Plater.DisableHighlight (unitFrame)\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", nil)\n        unitFrame.HighlightFrame:Hide()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Hide() end\n        unitFrame.HighlightFrame.HighlightTexture:Hide()\n    end\n    \n    -- adding hide/show for the glow frame to CheckHighlight\n    function Plater.CheckHighlight (self)\n        if UnitIsUnit(\"mouseover\", self.unit) and not UnitIsUnit(\"target\", self.unit) then\n            self.HighlightTexture:Show()\n            if self.glow then self.glow:Show() end\n        else\n            self.HighlightTexture:Hide()\n            if self.glow then self.glow:Hide() end\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- texture path for the glow\n    local texture = modTable.config.texPath\n    -- color of the glow { red, green, blue, alpha }\n    local color = modTable.config.glowColor\n    -- texture width/height modifier\n    -- range from 0-1 (0.01 is 1%, 0.1 is 10%, 1 is 100% of the healthbar size)\n    local x = modTable.config.x\n    local y = modTable.config.y\n    \n    function envTable.CreateHoverHighlight(unitFrame)\n        local unit = unitFrame\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local glow = unit.healthBar:CreateTexture(nil, \"background\", nil, -8)\n        glow:SetTexture(texture)\n        glow:SetBlendMode(\"ADD\")\n        glow:SetVertexColor(unpack(color))\n        glow:Hide()\n        unit.HighlightFrame.glow = glow\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local PixelUtil = PixelUtil or DFPixelUtil\n        local widthOs = unit.healthBar:GetWidth() * x\n        local heightOs = unit.healthBar:GetHeight() * y\n        local hover = unit.HighlightFrame.glow\n        hover:ClearAllPoints()\n        PixelUtil.SetPoint(hover, \"topleft\", unit.healthBar, \"topleft\", -widthOs, heightOs)\n        PixelUtil.SetPoint(hover, \"bottomright\", unit.healthBar, \"bottomright\", widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"bottomleft\", unit.healthBar, \"bottomleft\", -widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"topright\", unit.healthBar, \"topright\", widthOs, heightOs)\n    end\nend\n\n\n",
					},
					["Time"] = 1673062198,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/NbSpkcICY/3",
					["Icon"] = "INTERFACE\\ICONS\\inv_offhand_1h_artifactdoomhammer_d_06",
					["Enabled"] = true,
					["Revision"] = 347,
					["semver"] = "1.0.2",
					["Author"] = "Viciouwu-Tarren Mill",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Mouseover Highlight Glow",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Title",
							["Value"] = "MOUSEOVER HIGHLIGHT OPTIONS:",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Set color of the highlight texture.",
						}, -- [2]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface/ICONS/GlowNameplate",
							["Key"] = "texPath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Set texture path of the highlight texture.",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Size scaling",
							["Value"] = "SCALING MODIFIERS FOR WIDTH AND HEIGHT:",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 5,
							["Name"] = "Size scaling",
							["Value"] = "Width/height modifiers are based on percentage of healthbar size. Range from 0-1  (0.15 is 15%, 1 is 100% of the healthbar size).",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Name"] = "X modifier",
							["Value"] = "Set width of highlight texture (resizes texture horizontally).",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.25,
							["Key"] = "x",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "X modifier",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Y modifier",
							["Value"] = "Set height of highlight texture (resizes texture vertically).",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.5,
							["Key"] = "y",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Y modifier",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank",
							["Value"] = 0,
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 5,
							["Name"] = "",
							["Value"] = "SAVE.",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "",
							["Value"] = "RELOAD UI AFTER SAVING CHANGES.",
							["Key"] = "",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
					},
					["HooksTemp"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable, modTable)\n    envTable.CreateHoverHighlight(unitFrame)\nend\n\n\n",
						["Initialization"] = "function (modTable)\n    -- adding show for the glow frame to EnableHighlight\n    function Plater.EnableHighlight (unitFrame)\n        unitFrame.HighlightFrame:Show()\n        unitFrame.HighlightFrame.HighlightTexture:Show()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Show() end\n        \n        unitFrame.HighlightFrame.unit = unitFrame.namePlateUnitToken\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", Plater.CheckHighlight)\n    end\n    \n    -- adding hide for the glow frame to DisableHighlight\n    function Plater.DisableHighlight (unitFrame)\n        unitFrame.HighlightFrame:SetScript (\"OnUpdate\", nil)\n        unitFrame.HighlightFrame:Hide()\n        if unitFrame.HighlightFrame.glow then unitFrame.HighlightFrame.glow:Hide() end\n        unitFrame.HighlightFrame.HighlightTexture:Hide()\n    end\n    \n    -- adding hide/show for the glow frame to CheckHighlight\n    function Plater.CheckHighlight (self)\n        if UnitIsUnit(\"mouseover\", self.unit) and not UnitIsUnit(\"target\", self.unit) then\n            self.HighlightTexture:Show()\n            if self.glow then self.glow:Show() end\n        else\n            self.HighlightTexture:Hide()\n            if self.glow then self.glow:Hide() end\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    -- texture path for the glow\n    local texture = modTable.config.texPath\n    -- color of the glow { red, green, blue, alpha }\n    local color = modTable.config.glowColor\n    -- texture width/height modifier\n    -- range from 0-1 (0.01 is 1%, 0.1 is 10%, 1 is 100% of the healthbar size)\n    local x = modTable.config.x\n    local y = modTable.config.y\n    \n    function envTable.CreateHoverHighlight(unitFrame)\n        local unit = unitFrame\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local glow = unit.healthBar:CreateTexture(nil, \"background\", nil, -8)\n        glow:SetTexture(texture)\n        glow:SetBlendMode(\"ADD\")\n        glow:SetVertexColor(unpack(color))\n        glow:Hide()\n        unit.HighlightFrame.glow = glow\n        \n        -- code taken and slightly modified from https://wago.io/nwGoQyQ9q | Author: Continuity\n        local PixelUtil = PixelUtil or DFPixelUtil\n        local widthOs = unit.healthBar:GetWidth() * x\n        local heightOs = unit.healthBar:GetHeight() * y\n        local hover = unit.HighlightFrame.glow\n        hover:ClearAllPoints()\n        PixelUtil.SetPoint(hover, \"topleft\", unit.healthBar, \"topleft\", -widthOs, heightOs)\n        PixelUtil.SetPoint(hover, \"bottomright\", unit.healthBar, \"bottomright\", widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"bottomleft\", unit.healthBar, \"bottomleft\", -widthOs, -heightOs)\n        PixelUtil.SetPoint(hover, \"topright\", unit.healthBar, \"topright\", widthOs, heightOs)\n    end\nend\n\n\n",
					},
					["version"] = 3,
				}, -- [13]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Constructor",
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\")\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\")\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
					},
					["Time"] = 1673221107,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "https://wago.io/T37kZgkmc/1",
					["Icon"] = 133004,
					["Enabled"] = true,
					["Revision"] = 55,
					["semver"] = "1.0.0",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Adds a pixels perfect border around the cast bar spell icon.",
					["Prio"] = 99,
					["Name"] = "Cast Icon Border",
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.castBar.IconOverlayFrame) then\n        unitFrame.castBar.IconOverlayFrame:Hide()\n    end\n    \nend\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BuildFrames (unitFrame)\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.AnchorSide = \"left\"\n    envTable.BorderThickness = 1\n    envTable.BorderColor = \"black\"\n    \n    --private\n    function envTable.BuildFrames (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.IconBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.IconBorder:SetBorderSizes (size, size, size, size)\n        castBar.IconBorder:UpdateSizes()\n        \n        local icon = castBar.Icon\n        if (envTable.AnchorSide == \"left\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\")\n            icon:SetPoint (\"bottomright\", castBar, \"bottomleft\")\n            icon:SetWidth (icon:GetHeight())\n            \n        elseif (envTable.AnchorSide == \"right\") then\n            icon:ClearAllPoints()\n            icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\")\n            icon:SetPoint (\"bottomleft\", castBar, \"bottomright\")\n            icon:SetWidth (icon:GetHeight())\n            \n        end\n        \n        icon:Show()\n        castBar.IconOverlayFrame:Show()\n    end\n    \n    if (not unitFrame.castBar.IconOverlayFrame) then\n        --icon support frame\n        unitFrame.castBar.IconOverlayFrame = CreateFrame (\"frame\", nil, unitFrame.castBar)\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"topleft\", unitFrame.castBar.Icon, \"topleft\")\n        unitFrame.castBar.IconOverlayFrame:SetPoint (\"bottomright\", unitFrame.castBar.Icon, \"bottomright\")\n        \n        unitFrame.castBar.IconBorder = CreateFrame (\"frame\", nil,  unitFrame.castBar.IconOverlayFrame, \"NamePlateFullBorderTemplate\")\n    end    \n    \nend\n\n\n\n\n",
					},
					["version"] = 1,
				}, -- [14]
				{
					["OptionsValues"] = {
						["textY"] = 0,
						["textX"] = 10,
						["iconSize"] = 10,
						["iconAnchorX"] = -2,
						["textFontFace"] = "Roboto BoldCondensed",
						["iconAnchorY"] = 0,
						["textColor"] = {
							0.02352941408753395, -- [1]
							0.5921568870544434, -- [2]
							0, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local strText = \"\"\n    \n    if unitFrame and unitFrame.namePlateIsQuestObjective then\n        \n        for i, questInfo in ipairs(unitFrame.QuestInfo) do\n            if questInfo.yourQuest and not questInfo.finished then\n                local qtext = questInfo.questText:lower()\n                \n                -- Loot Quest\n                if questInfo.total \n                and not string.find(qtext, \"slain\") \n                and not string.find(qtext, \"killed\") \n                and not string.find(qtext, \"subdued\")\n                and not string.find(qtext, \"protect\")\n                then\n                    strText = questInfo.total - questInfo.amount\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconBag);\n                    break\n                    \n                    -- Kill Quest\n                elseif questInfo.total \n                and (string.find(qtext, \"slain\") \n                    or string.find(qtext, \"killed\")\n                    or string.find(qtext, \"subdued\")\n                    or string.find(qtext, \"protect\")) \n                then\n                    strText = questInfo.total - questInfo.amount\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                    break\n                    \n                    -- Percentage quest\n                elseif not questInfo.total then\n                    local curr = questInfo.amount or 0\n                    if modTable.config['percentRemaining'] then\n                        strText = math.floor(100 - curr) .. \"%\"\n                    else\n                        strText = math.floor(curr) .. \"%\"\n                    end\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                    break\n                    \n                    -- Use item quest\n                else\n                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuestParts);\n                    break                    \n                end\n            end \n        end\n        \n        unitFrame.questProgressIconFrame:Show();\n        unitFrame.healthBar.questProgressTextFrame:SetText(strText)\n    else\n        unitFrame.questProgressIconFrame:Hide();\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- positioning\n    local iconAnchor = {\n        side = modTable.config['iconAnchorSide'],\n        x = modTable.config['iconAnchorX'],\n        y = modTable.config['iconAnchorY'],\n    };\n    \n    -- icon options\n    envTable.iconSkull = [[Interface\\TargetingFrame\\UI-RaidTargetingIcon_8]];\n    envTable.iconBag = [[Interface\\GroupFrame\\UI-Group-MasterLooter]];\n    envTable.iconQuest = [[Interface\\GossipFrame\\AvailableQuestIcon]];\n    envTable.iconQuestParts = [[Interface\\QuestFrame\\AutoQuest-Parts]]\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    envTable.questProgressIconFrame = unitFrame.questProgressIconFrame or unitFrame:CreateTexture (nil, \"overlay\")\n    envTable.questProgressIconFrame:SetTexture (modTable.config['iconQuest'])\n    envTable.questProgressIconFrame:SetSize (modTable.config['iconSize'], modTable.config['iconSize'])\n    Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n    unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    \n    \n    --create the text frame that will show the quest progress\n    envTable.questProgressTextFrame = unitFrame.healthBar.questProgressTextFrame or Plater:CreateLabel (unitFrame.healthBar);\n    Plater:SetFontFace (envTable.questProgressTextFrame, modTable.config['textFontFace']);\n    Plater:SetFontSize (envTable.questProgressTextFrame, modTable.config['textSize']);\n    Plater:SetFontColor (envTable.questProgressTextFrame, modTable.config['textColor']);\n    Plater:SetFontOutline (envTable.questProgressTextFrame, modTable.config['textOutline']);\n    DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, modTable.config['textShadowAlpha']);\n    envTable.questProgressTextFrame:SetPoint (modTable.config['textAnchor'], unitFrame.questProgressIconFrame, modTable.config['textIconAnchor'], modTable.config['textX'], modTable.config['textY']);\n    unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n    envTable.questProgressTextFrame:SetText(\"\")\n    \nend",
					},
					["Time"] = 1673166355,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/PMdq2Rg_N/13",
					["Icon"] = "INTERFACE\\ICONS\\Ability_Hunter_SniperShot",
					["Enabled"] = true,
					["Revision"] = 4175,
					["semver"] = "1.0.12",
					["Author"] = "Evolutious",
					["Desc"] = "Adds a text indicator for quest progress to show how many times the objective has to be completed.",
					["Prio"] = 99,
					["Name"] = "QuestProgress",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 4,
							["Name"] = "Quest Percent Remaining",
							["Value"] = false,
							["Key"] = "percentRemaining",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set this if you want percent based quests to reflect the amount progressed or the amount remaining.",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 17",
							["Value"] = 0,
							["Key"] = "option17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 16",
							["Value"] = "Changing the below settings require a /reload to take effect",
							["Key"] = "option16",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								0.36862745098039, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Sets the text color",
						}, -- [4]
						{
							["Type"] = 3,
							["Name"] = "Text Font",
							["Value"] = "Friz Quadrata TT",
							["Key"] = "textFontFace",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Set this to the font you wish to use over the quest icon. You will need to set this manually. Default is: Friz Quadrata TT",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Sets the text size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "textSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [6]
						{
							["Type"] = 3,
							["Name"] = "Text Outline",
							["Value"] = "OUTLINE",
							["Key"] = "textOutline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Set the outline of the text. Options: NONE, OUTLINE, THICKOUTLINE. Default is: OUTLINE",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Sets the text shadow alpha. Options: 0 = Transparent, 1 = 100% Solid",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Key"] = "textShadowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Shadow Alpha",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Adjusts the text left and right",
							["Min"] = -64,
							["Fraction"] = false,
							["Value"] = 2,
							["Key"] = "textX",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text X Offset",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Adjusts the text up and down",
							["Min"] = -64,
							["Fraction"] = false,
							["Value"] = -4,
							["Key"] = "textY",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Y Offset",
						}, -- [10]
						{
							["Type"] = 3,
							["Name"] = "Text Anchor",
							["Value"] = "CENTER",
							["Key"] = "textAnchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Sets the anchor point for the text. Options: CENTER, TOP BOTTOM, TOPLEFT, LEFT, BOTTOMLEFT, TOPRIGHT, RIGHT, BOTTOMRIGHT",
						}, -- [11]
						{
							["Type"] = 3,
							["Name"] = "Text Anchor to Icon",
							["Value"] = "CENTER",
							["Key"] = "textIconAnchor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Sets the anchor point for the text relative to the icon. Options: CENTER, TOP BOTTOM, TOPLEFT, LEFT, BOTTOMLEFT, TOPRIGHT, RIGHT, BOTTOMRIGHT",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 22",
							["Value"] = 0,
							["Key"] = "option22",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Sets the icon size",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 12,
							["Key"] = "iconSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 8,
							["Desc"] = "Sets the anchor point for the icon. Options: 1 = TOP LEFT, 2 = LEFT, 3 = BOTTOM LEFT, 4 = BOTTOM, 5 = BOTTOM RIGHT, 6 = RIGHT, 7 = TOP RIGHT, 8 = TOP",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 6,
							["Key"] = "iconAnchorSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Anchor Side",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Adjusts the icon left and right",
							["Min"] = -64,
							["Fraction"] = false,
							["Value"] = 4,
							["Key"] = "iconAnchorX",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Anchor X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 64,
							["Desc"] = "Adjusts the icon up and down",
							["Min"] = -64,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "iconAnchorY",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "icon Anchor Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "Option 16",
							["Value"] = 0,
							["Key"] = "option16",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    local strText = \"\"\n    \n    if unitFrame and unitFrame.namePlateIsQuestObjective then\n        \n        for i, questInfo in ipairs(unitFrame.QuestInfo) do\n            if questInfo.yourQuest and not questInfo.finished then\n                local qtext = questInfo.questText:lower()\n                \n                -- Loot Quest\n                if questInfo.total \n                and not string.find(qtext, \"slain\") \n                and not string.find(qtext, \"killed\") \n                and not string.find(qtext, \"subdued\")\n                and not string.find(qtext, \"protect\")\n                then\n                    strText = questInfo.total - questInfo.amount\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconBag);\n                    break\n                    \n                    -- Kill Quest\n                elseif questInfo.total \n                and (string.find(qtext, \"slain\") \n                    or string.find(qtext, \"killed\")\n                    or string.find(qtext, \"subdued\")\n                    or string.find(qtext, \"protect\")) \n                then\n                    strText = questInfo.total - questInfo.amount\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                    break\n                    \n                    -- Percentage quest\n                elseif not questInfo.total then\n                    local curr = questInfo.amount or 0\n                    if modTable.config['percentRemaining'] then\n                        strText = math.floor(100 - curr) .. \"%\"\n                    else\n                        strText = math.floor(curr) .. \"%\"\n                    end\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconSkull);\n                    break\n                    \n                    -- Use item quest\n                else\n                    strText = unitFrame.QuestAmountTotal - (unitFrame.QuestAmountCurrent or 0)\n                    unitFrame.questProgressIconFrame:SetTexture (envTable.iconQuestParts);\n                    break                    \n                end\n            end \n        end\n        \n        unitFrame.questProgressIconFrame:Show();\n        unitFrame.healthBar.questProgressTextFrame:SetText(strText)\n    else\n        unitFrame.questProgressIconFrame:Hide();\n        unitFrame.healthBar.questProgressTextFrame:SetText(\"\")\n    end\nend\n\n\n\n\n",
						["Initialization"] = "function (modTable)\n    --insert code here\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    -- positioning\n    local iconAnchor = {\n        side = modTable.config['iconAnchorSide'],\n        x = modTable.config['iconAnchorX'],\n        y = modTable.config['iconAnchorY'],\n    };\n    \n    -- icon options\n    envTable.iconSkull = [[Interface\\TargetingFrame\\UI-RaidTargetingIcon_8]];\n    envTable.iconBag = [[Interface\\GroupFrame\\UI-Group-MasterLooter]];\n    envTable.iconQuest = [[Interface\\GossipFrame\\AvailableQuestIcon]];\n    envTable.iconQuestParts = [[Interface\\QuestFrame\\AutoQuest-Parts]]\n    \n    ------------------------------------------------------------------------------------------------------------- \n    --frames:\n    \n    --create the icon frame that will show the quest need\n    envTable.questProgressIconFrame = unitFrame.questProgressIconFrame or unitFrame:CreateTexture (nil, \"overlay\")\n    envTable.questProgressIconFrame:SetTexture (modTable.config['iconQuest'])\n    envTable.questProgressIconFrame:SetSize (modTable.config['iconSize'], modTable.config['iconSize'])\n    Plater.SetAnchor (envTable.questProgressIconFrame, iconAnchor)\n    unitFrame.questProgressIconFrame = envTable.questProgressIconFrame\n    \n    \n    --create the text frame that will show the quest progress\n    envTable.questProgressTextFrame = unitFrame.healthBar.questProgressTextFrame or Plater:CreateLabel (unitFrame.healthBar);\n    Plater:SetFontFace (envTable.questProgressTextFrame, modTable.config['textFontFace']);\n    Plater:SetFontSize (envTable.questProgressTextFrame, modTable.config['textSize']);\n    Plater:SetFontColor (envTable.questProgressTextFrame, modTable.config['textColor']);\n    Plater:SetFontOutline (envTable.questProgressTextFrame, modTable.config['textOutline']);\n    DetailsFramework:SetFontShadow (envTable.questProgressTextFrame, 0, 0, 0, modTable.config['textShadowAlpha']);\n    envTable.questProgressTextFrame:SetPoint (modTable.config['textAnchor'], unitFrame.questProgressIconFrame, modTable.config['textIconAnchor'], modTable.config['textX'], modTable.config['textY']);\n    unitFrame.healthBar.questProgressTextFrame = envTable.questProgressTextFrame\n    envTable.questProgressTextFrame:SetText(\"\")\n    \nend",
					},
					["version"] = 13,
				}, -- [15]
				{
					["OptionsValues"] = {
						["t3Mobs"] = {
							1, -- [1]
							0.2313725650310516, -- [2]
							0.4000000357627869, -- [3]
							1, -- [4]
						},
						["t2Mobs"] = {
							1, -- [1]
							0.4117647409439087, -- [2]
							0, -- [3]
							1, -- [4]
						},
						["t1Mobs"] = {
							0, -- [1]
							0.6941176652908325, -- [2]
							1, -- [3]
							1, -- [4]
						},
					},
					["LastHookEdited"] = "",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
						["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        --[126682] = modTable.config[\"t1Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t2Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = \"#ff8200\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"],, --\"Saltfin Swimmer\"\n        --[126682] = \"deeppink\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Saltfin Swimmer\"\n        \n        --Affix NPCs:\n        --[161124] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Urg'roth, Breaker of Heroes\"\n        --[174773] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Spiteful\n        --[185685] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Urh Relic\n        --[185683] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Wo Relic\n        --[185680] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Vy Relic\n        [189878] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Nathrezim Infiltrator\n        [190128] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Zul'gamux\n        \n        \n        -- explosives\n        --[120651] = \"#ff8200\", --\"Fel Explosive\"\n        [120651] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Fel Explosive\"\n        \n        -- important - dark blue\n        --Dragonflight\n        [196576] = modTable.config[\"t1Mobs\"],\n        [197905] = modTable.config[\"t1Mobs\"],\n        [192333] = modTable.config[\"t1Mobs\"],\n        [197406] = modTable.config[\"t1Mobs\"],\n        [196202] = modTable.config[\"t1Mobs\"],\n        [104251] = modTable.config[\"t1Mobs\"],\n        [104274] = modTable.config[\"t1Mobs\"],\n        [188067] = modTable.config[\"t1Mobs\"],\n        [197698] = modTable.config[\"t1Mobs\"],\n        [197697] = modTable.config[\"t1Mobs\"],\n        [197535] = modTable.config[\"t1Mobs\"],\n        [187159] = modTable.config[\"t1Mobs\"],\n        [187154] = modTable.config[\"t1Mobs\"],\n        [191739] = modTable.config[\"t1Mobs\"],\n        [192791] = modTable.config[\"t1Mobs\"],\n        [194317] = modTable.config[\"t1Mobs\"],\n        [195265] = modTable.config[\"t1Mobs\"],\n        [194315] = modTable.config[\"t1Mobs\"],\n        [194316] = modTable.config[\"t1Mobs\"],\n        [195928] = modTable.config[\"t1Mobs\"],\n        [195927] = modTable.config[\"t1Mobs\"],\n        [195929] = modTable.config[\"t1Mobs\"],\n        [195930] = modTable.config[\"t1Mobs\"],\n        [195847] = modTable.config[\"t1Mobs\"],\n        [199717] = modTable.config[\"t1Mobs\"],\n        \n        --SL\n        [170490] = modTable.config[\"t1Mobs\"],\n        [170572] = modTable.config[\"t1Mobs\"],\n        [174197] = modTable.config[\"t1Mobs\"],\n        [174210] = modTable.config[\"t1Mobs\"],\n        [170882] = modTable.config[\"t1Mobs\"],\n        [163126] = modTable.config[\"t1Mobs\"],\n        [173016] = modTable.config[\"t1Mobs\"],\n        [166302] = modTable.config[\"t1Mobs\"],\n        [165529] = modTable.config[\"t1Mobs\"],\n        [165414] = modTable.config[\"t1Mobs\"],\n        [164921] = modTable.config[\"t1Mobs\"],\n        [163458] = modTable.config[\"t1Mobs\"],\n        [168420] = modTable.config[\"t1Mobs\"],\n        [168418] = modTable.config[\"t1Mobs\"],\n        [163459] = modTable.config[\"t1Mobs\"],\n        [168718] = modTable.config[\"t1Mobs\"],\n        [165076] = modTable.config[\"t1Mobs\"],\n        [167965] = modTable.config[\"t1Mobs\"],\n        [160495] = modTable.config[\"t1Mobs\"],\n        [166275] = modTable.config[\"t1Mobs\"],\n        [166299] = modTable.config[\"t1Mobs\"],\n        [166396] = modTable.config[\"t1Mobs\"],\n        [168627] = modTable.config[\"t1Mobs\"],\n        [164414] = modTable.config[\"t1Mobs\"],\n        [172265] = modTable.config[\"t1Mobs\"],\n        [168992] = modTable.config[\"t1Mobs\"],\n        [163891] = modTable.config[\"t1Mobs\"],\n        [173044] = modTable.config[\"t1Mobs\"],\n        [167612] = modTable.config[\"t1Mobs\"],\n        [167493] = modTable.config[\"t1Mobs\"],\n        [162049] = modTable.config[\"t1Mobs\"],\n        [162039] = modTable.config[\"t1Mobs\"],\n        [165222] = modTable.config[\"t1Mobs\"],\n        [163128] = modTable.config[\"t1Mobs\"],\n        [168357] = modTable.config[\"t1Mobs\"],\n        [180336] = modTable.config[\"t1Mobs\"],\n        [177817] = modTable.config[\"t1Mobs\"],\n        [178141] = modTable.config[\"t1Mobs\"],\n        \n        --BFA\n        [144296] = modTable.config[\"t1Mobs\"], --\"Spider Tank\"\n        [151476] = modTable.config[\"t1Mobs\"], --\"Blastatron X-80\"\n        [144301] = modTable.config[\"t1Mobs\"], --\"Living Waste\"\n        [150297] = modTable.config[\"t1Mobs\"], --\"Mechagon Renomarlizer\"\n        [150146] = modTable.config[\"t1Mobs\"], --\"Scrapbone Shaman\"\n        [150251] = modTable.config[\"t1Mobs\"], --\"Pistonhead Mechanic\"\n        [154758] = modTable.config[\"t1Mobs\"], --\"Toxic Monstrosity\"\n        [131677] = modTable.config[\"t1Mobs\"], --\"Heartsbane Runeweaver\"\n        [130635] = modTable.config[\"t1Mobs\"], --\"Stonefury\"\n        [128434] = modTable.config[\"t1Mobs\"], --\"Feasting Skyscreamer\"\n        [134150] = modTable.config[\"t1Mobs\"], --\"Runecarver Sorn\"\n        [128969] = modTable.config[\"t1Mobs\"], --\"Ashvane Commander\"\n        [131666] = modTable.config[\"t1Mobs\"], --\"Coven Thornshaper\"\n        [135365] = modTable.config[\"t1Mobs\"], --\"Matron Alma\"\n        [136214] = modTable.config[\"t1Mobs\"], --\"Windspeaker Heldis\"\n        [129367] = modTable.config[\"t1Mobs\"], --\"Bilge Rat Tempest\"\n        [131670] = modTable.config[\"t1Mobs\"], --\"Heartsbane Vinetwister\"\n        [130025] = modTable.config[\"t1Mobs\"], --\"Irontide Thug\"\n        [137478] = modTable.config[\"t1Mobs\"], --\"Queen Wasi\"\n        [130012] = modTable.config[\"t1Mobs\"], --\"Irontide Ravager\"\n        [136470] = modTable.config[\"t1Mobs\"], --\"Refreshment Vendor\"\n        [135329] = modTable.config[\"t1Mobs\"], --\"Matron Bryndle\"\n        [134417] = modTable.config[\"t1Mobs\"], --\"Deepsea Ritualist\"\n        [134174] = modTable.config[\"t1Mobs\"], --\"Shadow-Borne Witch Doctor\"\n        [122984] = modTable.config[\"t1Mobs\"], --\"Dazar'ai Colossus\"\n        [138281] = modTable.config[\"t1Mobs\"], --\"Faceless Corruptor\"\n        [133685] = modTable.config[\"t1Mobs\"], --\"Befouled Spirit\"\n        [133430] = modTable.config[\"t1Mobs\"], --\"Venture Co. Mastermind\"\n        [135204] = modTable.config[\"t1Mobs\"], --\"Spectral Hex Priest\"\n        [131812] = modTable.config[\"t1Mobs\"], --\"Heartsbane Soulcharmer\"\n        [134144] = modTable.config[\"t1Mobs\"], --\"Living Current\"\n        [129553] = modTable.config[\"t1Mobs\"], --\"Dinomancer Kish'o\"\n        [122972] = modTable.config[\"t1Mobs\"], --\"Dazar'ai Augur\"\n        [144167] = modTable.config[\"t1Mobs\"], --\"Kul Tiran Vanguard\"\n        [138019] = modTable.config[\"t1Mobs\"], --\"Kul Tiran Vanguard\"\n        [132530] = modTable.config[\"t1Mobs\"], --\"Kul Tiran Vanguard\"\n        [132481] = modTable.config[\"t1Mobs\"], --\"Kul Tiran Vanguard\"\n        [122969] = modTable.config[\"t1Mobs\"], --\"Zanchuli Witch-Doctor\"\n        [135241] = modTable.config[\"t1Mobs\"], --\"Bilge Rat Pillager\"\n        [134139] = modTable.config[\"t1Mobs\"], --\"Shrine Templar\"\n        \n        --Legion\n        [114626] = modTable.config[\"t1Mobs\"], --\"Forlorn Spirit\"\n        [114632] = modTable.config[\"t1Mobs\"], --\"Spectral Attendent\"\n        [114792] = modTable.config[\"t1Mobs\"], --\"Virtuous Lady\"\n        [183424] = modTable.config[\"t1Mobs\"], --\"Virtuous Gentleman\"\n        [114804] = modTable.config[\"t1Mobs\"], --\"Spectral Charger\"\n        [115488] = modTable.config[\"t1Mobs\"], --\"Infused Pyromancer\"\n        [95842] = modTable.config[\"t1Mobs\"],\n        [95834] = modTable.config[\"t1Mobs\"],\n        [96608] = modTable.config[\"t1Mobs\"],\n        [96640] = modTable.config[\"t1Mobs\"],\n        \n        --WOD\n        [81236] = modTable.config[\"t1Mobs\"], --\"Grimrail Technician\"\n        [82579] = modTable.config[\"t1Mobs\"], --\"Grom'kar Far Seer\"\n        [79720] = modTable.config[\"t1Mobs\"], --\"Grom'kar Boomer (boss version)\"\n        [81432] = modTable.config[\"t1Mobs\"], --\"Grom'kar Technician\"\n        [86526] = modTable.config[\"t1Mobs\"], --\"Grom'kar Chainmaster\"\n        [75713] = modTable.config[\"t1Mobs\"],\n        [76446] = modTable.config[\"t1Mobs\"],\n        [76104] = modTable.config[\"t1Mobs\"],\n        \n        --MOP\n        [59873] = modTable.config[\"t1Mobs\"],\n        [59555] = modTable.config[\"t1Mobs\"],\n        [59547] = modTable.config[\"t1Mobs\"],\n        [65317] = modTable.config[\"t1Mobs\"],\n        [59546] = modTable.config[\"t1Mobs\"],\n        [59553] = modTable.config[\"t1Mobs\"],\n        [59552] = modTable.config[\"t1Mobs\"],\n        [59545] = modTable.config[\"t1Mobs\"],\n        [59544] = modTable.config[\"t1Mobs\"],\n        \n        -- semi important - light blue\n        --Dragonflight\n        [196044] = modTable.config[\"t2Mobs\"],\n        [196200] = modTable.config[\"t2Mobs\"],\n        [104270] = modTable.config[\"t2Mobs\"],\n        [104278] = modTable.config[\"t2Mobs\"],\n        [187969] = modTable.config[\"t2Mobs\"],\n        [190034] = modTable.config[\"t2Mobs\"],\n        [198047] = modTable.config[\"t2Mobs\"],\n        [197985] = modTable.config[\"t2Mobs\"],\n        [195119] = modTable.config[\"t2Mobs\"],\n        [200126] = modTable.config[\"t2Mobs\"],\n        [200137] = modTable.config[\"t2Mobs\"],\n        [191164] = modTable.config[\"t2Mobs\"],\n        [196102] = modTable.config[\"t2Mobs\"],\n        [186741] = modTable.config[\"t2Mobs\"],\n        [192800] = modTable.config[\"t2Mobs\"],\n        [194894] = modTable.config[\"t2Mobs\"],\n        [195696] = modTable.config[\"t2Mobs\"],\n        [195851] = modTable.config[\"t2Mobs\"],\n        [193373] = modTable.config[\"t2Mobs\"],\n        [193544] = modTable.config[\"t2Mobs\"],\n        \n        --SL\n        [166589] = modTable.config[\"t2Mobs\"],\n        [171343] = modTable.config[\"t2Mobs\"],\n        [163894] = modTable.config[\"t2Mobs\"],\n        [168942] = modTable.config[\"t2Mobs\"],\n        [163882] = modTable.config[\"t2Mobs\"],\n        [163862] = modTable.config[\"t2Mobs\"],\n        [164562] = modTable.config[\"t2Mobs\"],\n        [171799] = modTable.config[\"t2Mobs\"],\n        [170690] = modTable.config[\"t2Mobs\"],\n        [164266] = modTable.config[\"t2Mobs\"],\n        [164185] = modTable.config[\"t2Mobs\"],\n        [162103] = modTable.config[\"t2Mobs\"],\n        [165872] = modTable.config[\"t2Mobs\"],\n        [168658] = modTable.config[\"t2Mobs\"],\n        [168318] = modTable.config[\"t2Mobs\"],\n        [168717] = modTable.config[\"t2Mobs\"],\n        [163520] = modTable.config[\"t2Mobs\"],\n        [168572] = modTable.config[\"t2Mobs\"],\n        [162317] = modTable.config[\"t2Mobs\"],\n        [163621] = modTable.config[\"t2Mobs\"],\n        [162040] = modTable.config[\"t2Mobs\"],\n        [167536] = modTable.config[\"t2Mobs\"],\n        [171376] = modTable.config[\"t2Mobs\"],\n        [169861] = modTable.config[\"t2Mobs\"],\n        [167876] = modTable.config[\"t2Mobs\"],\n        [162047] = modTable.config[\"t2Mobs\"],\n        [172981] = modTable.config[\"t2Mobs\"],\n        [174175] = modTable.config[\"t2Mobs\"],\n        [165430] = modTable.config[\"t2Mobs\"],\n        [166276] = modTable.config[\"t2Mobs\"],\n        [165946] = modTable.config[\"t2Mobs\"],\n        [162744] = modTable.config[\"t2Mobs\"],\n        [168393] = modTable.config[\"t2Mobs\"],\n        [168396] = modTable.config[\"t2Mobs\"],\n        [167998] = modTable.config[\"t2Mobs\"],\n        [170850] = modTable.config[\"t2Mobs\"],\n        [163086] = modTable.config[\"t2Mobs\"],\n        [162038] = modTable.config[\"t2Mobs\"],\n        [169905] = modTable.config[\"t2Mobs\"],\n        [163620] = modTable.config[\"t2Mobs\"],\n        [164510] = modTable.config[\"t2Mobs\"],\n        [164557] = modTable.config[\"t2Mobs\"],\n        [165919] = modTable.config[\"t2Mobs\"],\n        [167111] = modTable.config[\"t2Mobs\"],\n        [163121] = modTable.config[\"t2Mobs\"],\n        [167607] = modTable.config[\"t2Mobs\"],\n        [162689] = modTable.config[\"t2Mobs\"],\n        [164292] = modTable.config[\"t2Mobs\"],\n        [168886] = modTable.config[\"t2Mobs\"],\n        [165137] = modTable.config[\"t2Mobs\"],\n        [163618] = modTable.config[\"t2Mobs\"],\n        [168443] = modTable.config[\"t2Mobs\"],\n        [177816] = modTable.config[\"t2Mobs\"],\n        [180348] = modTable.config[\"t2Mobs\"],\n        [178171] = modTable.config[\"t2Mobs\"],\n        \n        --BFA\n        [144295] = modTable.config[\"t2Mobs\"], --\"Mechagon Mechanic\"\n        [144298] = modTable.config[\"t2Mobs\"], --\"Defense Bot Mk III\"\n        [150143] = modTable.config[\"t2Mobs\"], --\"Scrapbone Grunder\"\n        [150276] = modTable.config[\"t2Mobs\"], --\"Heavy Scrapbot\"\n        [150169] = modTable.config[\"t2Mobs\"], --\"Toxic Lurker\"\n        [135239] = modTable.config[\"t2Mobs\"], --\"Spectral Witch Doctor\"\n        [133912] = modTable.config[\"t2Mobs\"], --\"Bloodsworn Defiler\"\n        [133835] = modTable.config[\"t2Mobs\"], --\"Feral Bloodswarmer\"\n        [136076] = modTable.config[\"t2Mobs\"], --\"Agitated Nimbus\"\n        [127486] = modTable.config[\"t2Mobs\"], --\"Ashvane Officer\"\n        [135007] = modTable.config[\"t2Mobs\"], --\"Orb Guardian\"\n        [144311] = modTable.config[\"t2Mobs\"], --\"Orb Guardian\"\n        [131850] = modTable.config[\"t2Mobs\"], --\"Maddened Survivalist\"\n        [135552] = modTable.config[\"t2Mobs\"], --\"Deathtouched Slaver\"\n        [139949] = modTable.config[\"t2Mobs\"], --\"Plague Doctor\"\n        [139284] = modTable.config[\"t2Mobs\"], --\"Plague Doctor\"\n        [129602] = modTable.config[\"t2Mobs\"], --\"Irontide Enforcer\"\n        [134232] = modTable.config[\"t2Mobs\"], --\"Hired Assassin\"\n        [135474] = modTable.config[\"t2Mobs\"], --\"Thistle Acolyte\"\n        [136083] = modTable.config[\"t2Mobs\"], --\"Forgotten Denizen\"\n        [136297] = modTable.config[\"t2Mobs\"], --\"Forgotten Denizen\"\n        [134990] = modTable.config[\"t2Mobs\"], --\"Charged Dust Devil\"\n        [128969] = modTable.config[\"t2Mobs\"], --\"Ashvane Commander\"\n        [134364] = modTable.config[\"t2Mobs\"], --\"Faithless Tender\"\n        [122973] = modTable.config[\"t2Mobs\"], --\"Dazar'ai Confessor\"\n        [135049] = modTable.config[\"t2Mobs\"], --\"Dreadwing Raven\"\n        [129547] = modTable.config[\"t2Mobs\"], --\"Blacktooth Knuckleduster\"\n        [134701] = modTable.config[\"t2Mobs\"], --\"Blood Effigy\"\n        [131436] = modTable.config[\"t2Mobs\"], --\"Chosen Blood Matron\"\n        [133870] = modTable.config[\"t2Mobs\"], --\"Diseased Lasher\"\n        [136249] = modTable.config[\"t2Mobs\"], --\"Guardian Elemental\"\n        [134251] = modTable.config[\"t2Mobs\"], --\"Seneschal M'bara\"\n        [130400] = modTable.config[\"t2Mobs\"], --\"Irontide Crusher\"\n        [136186] = modTable.config[\"t2Mobs\"], --\"Tidesage Spiritualist\"\n        [130661] = modTable.config[\"t2Mobs\"], --\"Venture Co. Earthshaper\"\n        [130026] = modTable.config[\"t2Mobs\"], --\"Bilge Rat Seaspeaker\"\n        [135204] = modTable.config[\"t2Mobs\"], --\"Spectral Hex Priest\"\n        [129370] = modTable.config[\"t2Mobs\"], --\"Irontide Waveshaper\"\n        [144071] = modTable.config[\"t2Mobs\"], --\"Irontide Waveshaper\"\n        [131586] = modTable.config[\"t2Mobs\"], --\"Banquet Steward\"\n        [131009] = modTable.config[\"t2Mobs\"], --\"Spirit of Gold\"\n        [137103] = modTable.config[\"t2Mobs\"], --\"Blood Visage\"\n        [134284] = modTable.config[\"t2Mobs\"], --\"Fallen Deathspeaker\"\n        [138187] = modTable.config[\"t2Mobs\"], --\"Grotesque Horror\"\n        [134629] = modTable.config[\"t2Mobs\"], --\"Scaled Krolusk Rider\"\n        [141284] = modTable.config[\"t2Mobs\"], --\"Kul Tiran Wavetender\"\n        [142293] = modTable.config[\"t2Mobs\"], --\"Kul Tiran Wavetender\"\n        \n        --Legion\n        [114526] = modTable.config[\"t2Mobs\"], --\"Ghostly Understudy\"\n        [116548] = modTable.config[\"t2Mobs\"], --\"Backup Singer\"\n        [114624] = modTable.config[\"t2Mobs\"], --\"Arcane Warden\"\n        [114542] = modTable.config[\"t2Mobs\"], --\"Ghostly Philanthropist\"\n        [114637] = modTable.config[\"t2Mobs\"], --\"Spectral Sentry\" \n        [114796] = modTable.config[\"t2Mobs\"], --\"Wholesome Hostess\"\n        [183425] = modTable.config[\"t2Mobs\"], --\"Wholesome Host\"\n        [96664] = modTable.config[\"t2Mobs\"],\n        \n        --WOD\n        [82590] = modTable.config[\"t2Mobs\"], --\"Grimrail Scout\"\n        [83028] = modTable.config[\"t2Mobs\"], --\"Grom'kar Deadeye\"\n        [80936] = modTable.config[\"t2Mobs\"], --\"Grom'kar Grenadier\"\n        [79739] = modTable.config[\"t2Mobs\"], --\"Grom'kar Grenadier (boss version)\"\n        [88163] = modTable.config[\"t2Mobs\"], --\"Grom'kar Cinderseer\"\n        [80937] = modTable.config[\"t2Mobs\"], --\"Grom'kar Gunner\"\n        [77483] = modTable.config[\"t2Mobs\"], --\"Grom'kar Gunner (boss version)\"\n        [77700] = modTable.config[\"t2Mobs\"],\n        [75459] = modTable.config[\"t2Mobs\"],\n        \n        --some \"deeppurple\"\n        [114783] = modTable.config[\"t2Mobs\"], --\"Reformed Maiden\"\n        [114544] = modTable.config[\"t2Mobs\"], --\"Skeletal Usher\"\n        [114794] = modTable.config[\"t2Mobs\"], --\"Skeletal Hound\"\n        [114636] = modTable.config[\"t2Mobs\"], --\"Phantom Guardsman\"\n        [183423] = modTable.config[\"t2Mobs\"], --\"Reformed Bachelor\"\n        [114802] = modTable.config[\"t2Mobs\"], --\"Spectral Journeyman\"\n        \n        --some \"lightpurple\"\n        [114526] = modTable.config[\"t2Mobs\"], --\"Phantom Crew\"\n        [114633] = modTable.config[\"t2Mobs\"], --\"Spectral Valet\"\n        [114715] = modTable.config[\"t2Mobs\"], --\"Ghostly Chef\"\n        [115765] = modTable.config[\"t2Mobs\"], --\"Abstract Nullifier\"\n        [114338] = modTable.config[\"t2Mobs\"], --\"Mana Confluence\"\n        \n        \n        -- t3 mobs - light red\n        --Dragonflight\n        [196045] = modTable.config[\"t3Mobs\"],\n        [200387] = modTable.config[\"t3Mobs\"],\n        [186740] = modTable.config[\"t3Mobs\"],\n        [192796] = modTable.config[\"t3Mobs\"],\n        [194896] = modTable.config[\"t3Mobs\"],\n        [193457] = modTable.config[\"t3Mobs\"],\n        [193462] = modTable.config[\"t3Mobs\"],\n        \n        --SL\n        [164506] = modTable.config[\"t3Mobs\"],\n        [162691] = modTable.config[\"t3Mobs\"],\n        [163524] = modTable.config[\"t3Mobs\"],\n        [165824] = modTable.config[\"t3Mobs\"],\n        [169893] = modTable.config[\"t3Mobs\"],\n        [169927] = modTable.config[\"t3Mobs\"],\n        [168446] = modTable.config[\"t3Mobs\"],\n        [165197] = modTable.config[\"t3Mobs\"],\n        [173447] = modTable.config[\"t3Mobs\"],\n        [163619] = modTable.config[\"t3Mobs\"],\n        [177808] = modTable.config[\"t3Mobs\"],\n        \n        --BFA\n        [151613] = modTable.config[\"t3Mobs\"], --\"Anti-Personnel Squirrel\"\n        [144293] = modTable.config[\"t3Mobs\"], --\"Waste Processing Unit\"\n        [151657] = modTable.config[\"t3Mobs\"], --\"Bomb Tonk\"\n        [150292] = modTable.config[\"t3Mobs\"], --\"Mechagon Cavalry\"\n        [150160] = modTable.config[\"t3Mobs\"], --\"Scrapbone Bully\"\n        [150254] = modTable.config[\"t3Mobs\"], --\"Scraphound\"\n        [150165] = modTable.config[\"t3Mobs\"], --\"Slime Elemental\"\n        [135245] = modTable.config[\"t3Mobs\"], --\"Bilge Rat Demolisher\"\n        [135235] = modTable.config[\"t3Mobs\"], --\"Spectral Beastmaster\"\n        [131685] = modTable.config[\"t3Mobs\"], --\"Runic Disciple\"\n        [136643] = modTable.config[\"t3Mobs\"], --\"Azerite Extractor\"\n        [134041] = modTable.config[\"t3Mobs\"], --\"Infected Peasant\"\n        [130404] = modTable.config[\"t3Mobs\"], --\"Vermin Trapper\"\n        [127485] = modTable.config[\"t3Mobs\"], --\"Bilge Rat Looter\"\n        [135706] = modTable.config[\"t3Mobs\"], --\"Bilge Rat Looter\"\n        [134600] = modTable.config[\"t3Mobs\"], --\"Sandswept Marksman\"\n        [131818] = modTable.config[\"t3Mobs\"], --\"Marked Sister\"\n        [122971] = modTable.config[\"t3Mobs\"], --\"Dazar'ai Juggernaut\"\n        [137614] = modTable.config[\"t3Mobs\"], --\"Demolishing Terror\"\n        [137625] = modTable.config[\"t3Mobs\"], --\"Demolishing Terror\"\n        [137626] = modTable.config[\"t3Mobs\"], --\"Demolishing Terror\"\n        [140447] = modTable.config[\"t3Mobs\"], --\"Demolishing Terror\"\n        [134012] = modTable.config[\"t3Mobs\"], --\"Taskmaster Askari\"\n        [131858] = modTable.config[\"t3Mobs\"], --\"Thornguard\"\n        [135048] = modTable.config[\"t3Mobs\"], --\"Gorestained Piglet\"\n        [135192] = modTable.config[\"t3Mobs\"], --\"Honored Raptor\"\n        [134896] = modTable.config[\"t3Mobs\"], --\"Sewer Vicejaw\"\n        [127482] = modTable.config[\"t3Mobs\"], --\"Sewer Vicejaw\"\n        [130909] = modTable.config[\"t3Mobs\"], --\"Fetid Maggot\"\n        [130485] = modTable.config[\"t3Mobs\"], --\"Mechanized Peacekeeper\"\n        [136139] = modTable.config[\"t3Mobs\"], --\"Mechanized Peacekeeper\"\n        [137487] = modTable.config[\"t3Mobs\"], --\"Skeletal Hunting Raptor\"\n        [137830] = modTable.config[\"t3Mobs\"], --\"Pallid Gorger\"\n        [136391] = modTable.config[\"t3Mobs\"], --\"Heart Guardian\"\n        [139946] = modTable.config[\"t3Mobs\"], --\"Heart Guardian\"\n        [139425] = modTable.config[\"t3Mobs\"], --\"Crazed Incubator\"\n        [137484] = modTable.config[\"t3Mobs\"], --\"King A'akul\"\n        [130488] = modTable.config[\"t3Mobs\"], --\"Mech Jockey\"\n        [127879] = modTable.config[\"t3Mobs\"], --\"Shieldbearer of Zul\"\n        [135989] = modTable.config[\"t3Mobs\"], --\"Shieldbearer of Zul\"\n        \n        --Legion\n        [115019] = modTable.config[\"t3Mobs\"], --\"Coldmist Widow\"\n        [97087] = modTable.config[\"t3Mobs\"],\n        [96574] = modTable.config[\"t3Mobs\"],\n        \n        --WOD\n        [80935] = modTable.config[\"t3Mobs\"], --\"Grom'kar Boomer\"\n        [83389] = modTable.config[\"t3Mobs\"], --\"Ironwing Flamespitter\"\n        [81212] = modTable.config[\"t3Mobs\"], --\"Grimrail Overseer\"\n        [81279] = modTable.config[\"t3Mobs\"], --\"Grom'kar Flameslinger\"\n        [75652] = modTable.config[\"t3Mobs\"],\n        [75966] = modTable.config[\"t3Mobs\"],\n        \n        --some \"hotpink\"\n        [80938] = modTable.config[\"t3Mobs\"], --\"Grom'kar Hulk\"\n        [82597] = modTable.config[\"t3Mobs\"], --\"Grom'kar Captain\"\n        [83025] = modTable.config[\"t3Mobs\"], --\"Grom'kar Battlemaster\"\n        [81603] = modTable.config[\"t3Mobs\"], --\"Champion Druna\"\n        [83026] = modTable.config[\"t3Mobs\"], --\"Champion Olugar\"\n        [84520] = modTable.config[\"t3Mobs\"], --\"Pitwarden Gwarnok\"\n        [84028] = modTable.config[\"t3Mobs\"], --\"Siegemaster Rokra\"\n        [83578] = modTable.config[\"t3Mobs\"], --\"Ogron Laborer\"\n        [83392] = modTable.config[\"t3Mobs\"], --\"Rampaging Clefthoof\"\n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        \n        if modTable.useThreatColors and InCombatLockdown() then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame.namePlateUnitName]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (unitFrame.namePlateUnitToken)\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
					},
					["Time"] = 1674979974,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "https://wago.io/UKpo0_GbE/30",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Enabled"] = true,
					["Revision"] = 778,
					["semver"] = "1.4.0",
					["Author"] = "Viash-Thrall",
					["Desc"] = "Color the nameplates of important m+ mobs",
					["Prio"] = 99,
					["Name"] = "M+ Colored Mobs",
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Option 1",
							["Value"] = "NPC Colors:",
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Most Important:",
							["Value"] = {
								0, -- [1]
								0.086274509803922, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "t1Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Most important mobs, usually focus targets (regular interrupts / stuns needed, etc.)",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Semi Important",
							["Value"] = {
								0, -- [1]
								0.81960784313725, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "t2Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Semi important mobs, interrupts / stuns necessary, keep an eye out!",
						}, -- [3]
						{
							["Type"] = 1,
							["Name"] = "Less Important:",
							["Value"] = {
								1, -- [1]
								0.59607843137255, -- [2]
								0.51372549019608, -- [3]
								1, -- [4]
							},
							["Key"] = "t3Mobs",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Less important mobs, usally only have one mechanic which nees watching (cones, cleave, irregular interrupts, etc.)",
						}, -- [4]
						{
							["Type"] = 6,
							["Name"] = "Option 6",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 4,
							["Name"] = "Color Explosives",
							["Value"] = true,
							["Key"] = "explosivesEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Explosives Color",
							["Value"] = {
								1, -- [1]
								0.4, -- [2]
								0.70196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "explosivesColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 9",
							["Value"] = 0,
							["Key"] = "option9",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Color M+ Affix NPCs",
							["Value"] = true,
							["Key"] = "s4Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "\"M+ Affix NPCs\"",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "M+ Affix NPCs Color",
							["Value"] = {
								1, -- [1]
								0.070588235294118, -- [2]
								0.56862745098039, -- [3]
								1, -- [4]
							},
							["Key"] = "s4Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "\"M+ Affix NPCs\"",
						}, -- [10]
						{
							["Type"] = 6,
							["Name"] = "Option 18",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Use Target Color",
							["Value"] = true,
							["Key"] = "targetEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 1,
							["Name"] = "Target Color",
							["Value"] = {
								0.27058823529412, -- [1]
								0.50980392156863, -- [2]
								0.70196078431373, -- [3]
								1, -- [4]
							},
							["Key"] = "targetColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 4,
							["Name"] = "Ignore Target Color on Players",
							["Value"] = false,
							["Key"] = "ignoreTargetOnPlayers",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 6,
							["Name"] = "Option 21",
							["Value"] = 0,
							["Key"] = "option21",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Use Focus Color",
							["Value"] = true,
							["Key"] = "focusEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 1,
							["Name"] = "Focus Color",
							["Value"] = {
								1, -- [1]
								0.49019607843137, -- [2]
								0.30980392156863, -- [3]
								1, -- [4]
							},
							["Key"] = "focusColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 5,
							["Name"] = "Additional Options:",
							["Value"] = "Additional Options:",
							["Key"] = "option26",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 4,
							["Name"] = "Color Healthbar",
							["Value"] = true,
							["Key"] = "colorHealthbar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 4,
							["Name"] = "Color Name",
							["Value"] = false,
							["Key"] = "colorName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 4,
							["Name"] = "Raid Mark Colors",
							["Value"] = true,
							["Key"] = "raidMarkColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 4,
							["Name"] = "Use Threat Colors",
							["Value"] = false,
							["Key"] = "threatColors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use threat colors if you are tank without aggro or dps with aggro",
						}, -- [22]
						{
							["Type"] = 4,
							["Name"] = "Color Rares",
							["Value"] = true,
							["Key"] = "rareEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [23]
					},
					["HooksTemp"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    modTable.UpdateColor (unitFrame, envTable)\nend",
						["Initialization"] = "function (modTable)\n    \n    modTable.colorHealthBar = modTable.config[\"colorHealthbar\"]\n    modTable.colorNameText = modTable.config[\"colorName\"]\n    modTable.showRaidMarkColors = modTable.config[\"raidMarkColors\"]\n    modTable.useTargetColor = modTable.config[\"targetEnabled\"]\n    modTable.ignoreTargetColorOnPlayers = modTable.config[\"ignoreTargetOnPlayers\"]\n    modTable.useFocusColor = modTable.config[\"focusEnabled\"]\n    modTable.targetColor = modTable.config[\"targetColor\"]\n    modTable.focusColor = modTable.config[\"focusColor\"]\n    modTable.useThreatColors = modTable.config[\"threatColors\"] -- use threat colors if you are tank without aggro or dps with aggro\n    modTable.colorRares = modTable.config[\"rareEnabled\"]\n    \n    -- you can replace any color text line with 'nil' to skip this mark from being colored, e.g.:    nil, --star \n    modTable.ColorByMark = {\n        [1] = \"#d9cf45\",--YellowStar\n        [2] = \"#ed820f\", --Orange Circle\n        [3] = \"#b30fd6\", --Purple Diamond\n        [4] = \"#24a824\", --Green Triangle\n        [5] = \"#99bfd9\", --Silver Moon\n        [6] = \"#00a3ff\", --Blue Square\n        [7] = \"#d12e2e\", --Red Cross\n        [8] = \"#e3d4bd\", --White Skull    \n    }\n    \n    -- rare-type colors\n    modTable.RareColors = {\n        --[\"elite\"] = \"darkgoldenrod\",\n        [\"rareelite\"] = \"goldenrod\",\n        [\"rare\"] = \"silver\",\n        [\"worldboss\"] = \"darkmagenta\",\n    }\n    \n    modTable.NpcColors = {\n        \n        --[126682] = modTable.config[\"t1Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t2Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"], --\"Saltfin Swimmer\"\n        --[126682] = \"#ff8200\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"t3Mobs\"],, --\"Saltfin Swimmer\"\n        --[126682] = \"deeppink\", --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Saltfin Swimmer\"\n        --[126682] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Saltfin Swimmer\"\n        \n        --Affix NPCs:\n        --[161124] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, --\"Urg'roth, Breaker of Heroes\"\n        --[174773] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Spiteful\n        --[185685] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Urh Relic\n        --[185683] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Wo Relic\n        --[185680] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Vy Relic\n        [189878] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Nathrezim Infiltrator\n        [190128] = modTable.config[\"s4Enabled\"] and modTable.config[\"s4Color\"] or nil, -- Zul'gamux\n        \n        \n        -- explosives\n        --[120651] = \"#ff8200\", --\"Fel Explosive\"\n        [120651] = modTable.config[\"explosivesEnabled\"] and modTable.config[\"explosivesColor\"] or nil, --\"Fel Explosive\"\n        \n        -- important - dark blue\n        --Dragonflight\n        [196576] = modTable.config[\"t1Mobs\"],\n        [197905] = modTable.config[\"t1Mobs\"],\n        [192333] = modTable.config[\"t1Mobs\"],\n        [197406] = modTable.config[\"t1Mobs\"],\n        [196202] = modTable.config[\"t1Mobs\"],\n        [104251] = modTable.config[\"t1Mobs\"],\n        [104274] = modTable.config[\"t1Mobs\"],\n        [188067] = modTable.config[\"t1Mobs\"],\n        [197698] = modTable.config[\"t1Mobs\"],\n        [197697] = modTable.config[\"t1Mobs\"],\n        [197535] = modTable.config[\"t1Mobs\"],\n        [187159] = modTable.config[\"t1Mobs\"],\n        [187154] = modTable.config[\"t1Mobs\"],\n        [191739] = modTable.config[\"t1Mobs\"],\n        [192791] = modTable.config[\"t1Mobs\"],\n        [194317] = modTable.config[\"t1Mobs\"],\n        [195265] = modTable.config[\"t1Mobs\"],\n        [194315] = modTable.config[\"t1Mobs\"],\n        [194316] = modTable.config[\"t1Mobs\"],\n        [195928] = modTable.config[\"t1Mobs\"],\n        [195927] = modTable.config[\"t1Mobs\"],\n        [195929] = modTable.config[\"t1Mobs\"],\n        [195930] = modTable.config[\"t1Mobs\"],\n        [195847] = modTable.config[\"t1Mobs\"],\n        [199717] = modTable.config[\"t1Mobs\"],\n        \n        --SL\n        [170490] = modTable.config[\"t1Mobs\"],\n        [170572] = modTable.config[\"t1Mobs\"],\n        [174197] = modTable.config[\"t1Mobs\"],\n        [174210] = modTable.config[\"t1Mobs\"],\n        [170882] = modTable.config[\"t1Mobs\"],\n        [163126] = modTable.config[\"t1Mobs\"],\n        [173016] = modTable.config[\"t1Mobs\"],\n        [166302] = modTable.config[\"t1Mobs\"],\n        [165529] = modTable.config[\"t1Mobs\"],\n        [165414] = modTable.config[\"t1Mobs\"],\n        [164921] = modTable.config[\"t1Mobs\"],\n        [163458] = modTable.config[\"t1Mobs\"],\n        [168420] = modTable.config[\"t1Mobs\"],\n        [168418] = modTable.config[\"t1Mobs\"],\n        [163459] = modTable.config[\"t1Mobs\"],\n        [168718] = modTable.config[\"t1Mobs\"],\n        [165076] = modTable.config[\"t1Mobs\"],\n        [167965] = modTable.config[\"t1Mobs\"],\n        [160495] = modTable.config[\"t1Mobs\"],\n        [166275] = modTable.config[\"t1Mobs\"],\n        [166299] = modTable.config[\"t1Mobs\"],\n        [166396] = modTable.config[\"t1Mobs\"],\n        [168627] = modTable.config[\"t1Mobs\"],\n        [164414] = modTable.config[\"t1Mobs\"],\n        [172265] = modTable.config[\"t1Mobs\"],\n        [168992] = modTable.config[\"t1Mobs\"],\n        [163891] = modTable.config[\"t1Mobs\"],\n        [173044] = modTable.config[\"t1Mobs\"],\n        [167612] = modTable.config[\"t1Mobs\"],\n        [167493] = modTable.config[\"t1Mobs\"],\n        [162049] = modTable.config[\"t1Mobs\"],\n        [162039] = modTable.config[\"t1Mobs\"],\n        [165222] = modTable.config[\"t1Mobs\"],\n        [163128] = modTable.config[\"t1Mobs\"],\n        [168357] = modTable.config[\"t1Mobs\"],\n        [180336] = modTable.config[\"t1Mobs\"],\n        [177817] = modTable.config[\"t1Mobs\"],\n        [178141] = modTable.config[\"t1Mobs\"],\n        \n        --BFA\n        [144296] = modTable.config[\"t1Mobs\"], --\"Spider Tank\"\n        [151476] = modTable.config[\"t1Mobs\"], --\"Blastatron X-80\"\n        [144301] = modTable.config[\"t1Mobs\"], --\"Living Waste\"\n        [150297] = modTable.config[\"t1Mobs\"], --\"Mechagon Renomarlizer\"\n        [150146] = modTable.config[\"t1Mobs\"], --\"Scrapbone Shaman\"\n        [150251] = modTable.config[\"t1Mobs\"], --\"Pistonhead Mechanic\"\n        [154758] = modTable.config[\"t1Mobs\"], --\"Toxic Monstrosity\"\n        [131677] = modTable.config[\"t1Mobs\"], --\"Heartsbane Runeweaver\"\n        [130635] = modTable.config[\"t1Mobs\"], --\"Stonefury\"\n        [128434] = modTable.config[\"t1Mobs\"], --\"Feasting Skyscreamer\"\n        [134150] = modTable.config[\"t1Mobs\"], --\"Runecarver Sorn\"\n        [128969] = modTable.config[\"t1Mobs\"], --\"Ashvane Commander\"\n        [131666] = modTable.config[\"t1Mobs\"], --\"Coven Thornshaper\"\n        [135365] = modTable.config[\"t1Mobs\"], --\"Matron Alma\"\n        [136214] = modTable.config[\"t1Mobs\"], --\"Windspeaker Heldis\"\n        [129367] = modTable.config[\"t1Mobs\"], --\"Bilge Rat Tempest\"\n        [131670] = modTable.config[\"t1Mobs\"], --\"Heartsbane Vinetwister\"\n        [130025] = modTable.config[\"t1Mobs\"], --\"Irontide Thug\"\n        [137478] = modTable.config[\"t1Mobs\"], --\"Queen Wasi\"\n        [130012] = modTable.config[\"t1Mobs\"], --\"Irontide Ravager\"\n        [136470] = modTable.config[\"t1Mobs\"], --\"Refreshment Vendor\"\n        [135329] = modTable.config[\"t1Mobs\"], --\"Matron Bryndle\"\n        [134417] = modTable.config[\"t1Mobs\"], --\"Deepsea Ritualist\"\n        [134174] = modTable.config[\"t1Mobs\"], --\"Shadow-Borne Witch Doctor\"\n        [122984] = modTable.config[\"t1Mobs\"], --\"Dazar'ai Colossus\"\n        [138281] = modTable.config[\"t1Mobs\"], --\"Faceless Corruptor\"\n        [133685] = modTable.config[\"t1Mobs\"], --\"Befouled Spirit\"\n        [133430] = modTable.config[\"t1Mobs\"], --\"Venture Co. Mastermind\"\n        [135204] = modTable.config[\"t1Mobs\"], --\"Spectral Hex Priest\"\n        [131812] = modTable.config[\"t1Mobs\"], --\"Heartsbane Soulcharmer\"\n        [134144] = modTable.config[\"t1Mobs\"], --\"Living Current\"\n        [129553] = modTable.config[\"t1Mobs\"], --\"Dinomancer Kish'o\"\n        [122972] = modTable.config[\"t1Mobs\"], --\"Dazar'ai Augur\"\n        [144167] = modTable.config[\"t1Mobs\"], --\"Kul Tiran Vanguard\"\n        [138019] = modTable.config[\"t1Mobs\"], --\"Kul Tiran Vanguard\"\n        [132530] = modTable.config[\"t1Mobs\"], --\"Kul Tiran Vanguard\"\n        [132481] = modTable.config[\"t1Mobs\"], --\"Kul Tiran Vanguard\"\n        [122969] = modTable.config[\"t1Mobs\"], --\"Zanchuli Witch-Doctor\"\n        [135241] = modTable.config[\"t1Mobs\"], --\"Bilge Rat Pillager\"\n        [134139] = modTable.config[\"t1Mobs\"], --\"Shrine Templar\"\n        \n        --Legion\n        [114626] = modTable.config[\"t1Mobs\"], --\"Forlorn Spirit\"\n        [114632] = modTable.config[\"t1Mobs\"], --\"Spectral Attendent\"\n        [114792] = modTable.config[\"t1Mobs\"], --\"Virtuous Lady\"\n        [183424] = modTable.config[\"t1Mobs\"], --\"Virtuous Gentleman\"\n        [114804] = modTable.config[\"t1Mobs\"], --\"Spectral Charger\"\n        [115488] = modTable.config[\"t1Mobs\"], --\"Infused Pyromancer\"\n        [95842] = modTable.config[\"t1Mobs\"],\n        [95834] = modTable.config[\"t1Mobs\"],\n        [96608] = modTable.config[\"t1Mobs\"],\n        [96640] = modTable.config[\"t1Mobs\"],\n        \n        --WOD\n        [81236] = modTable.config[\"t1Mobs\"], --\"Grimrail Technician\"\n        [82579] = modTable.config[\"t1Mobs\"], --\"Grom'kar Far Seer\"\n        [79720] = modTable.config[\"t1Mobs\"], --\"Grom'kar Boomer (boss version)\"\n        [81432] = modTable.config[\"t1Mobs\"], --\"Grom'kar Technician\"\n        [86526] = modTable.config[\"t1Mobs\"], --\"Grom'kar Chainmaster\"\n        [75713] = modTable.config[\"t1Mobs\"],\n        [76446] = modTable.config[\"t1Mobs\"],\n        [76104] = modTable.config[\"t1Mobs\"],\n        \n        --MOP\n        [59873] = modTable.config[\"t1Mobs\"],\n        [59555] = modTable.config[\"t1Mobs\"],\n        [59547] = modTable.config[\"t1Mobs\"],\n        [65317] = modTable.config[\"t1Mobs\"],\n        [59546] = modTable.config[\"t1Mobs\"],\n        [59553] = modTable.config[\"t1Mobs\"],\n        [59552] = modTable.config[\"t1Mobs\"],\n        [59545] = modTable.config[\"t1Mobs\"],\n        [59544] = modTable.config[\"t1Mobs\"],\n        \n        -- semi important - light blue\n        --Dragonflight\n        [196044] = modTable.config[\"t2Mobs\"],\n        [196200] = modTable.config[\"t2Mobs\"],\n        [104270] = modTable.config[\"t2Mobs\"],\n        [104278] = modTable.config[\"t2Mobs\"],\n        [187969] = modTable.config[\"t2Mobs\"],\n        [190034] = modTable.config[\"t2Mobs\"],\n        [198047] = modTable.config[\"t2Mobs\"],\n        [197985] = modTable.config[\"t2Mobs\"],\n        [195119] = modTable.config[\"t2Mobs\"],\n        [200126] = modTable.config[\"t2Mobs\"],\n        [200137] = modTable.config[\"t2Mobs\"],\n        [191164] = modTable.config[\"t2Mobs\"],\n        [196102] = modTable.config[\"t2Mobs\"],\n        [186741] = modTable.config[\"t2Mobs\"],\n        [192800] = modTable.config[\"t2Mobs\"],\n        [194894] = modTable.config[\"t2Mobs\"],\n        [195696] = modTable.config[\"t2Mobs\"],\n        [195851] = modTable.config[\"t2Mobs\"],\n        [193373] = modTable.config[\"t2Mobs\"],\n        [193544] = modTable.config[\"t2Mobs\"],\n        \n        --SL\n        [166589] = modTable.config[\"t2Mobs\"],\n        [171343] = modTable.config[\"t2Mobs\"],\n        [163894] = modTable.config[\"t2Mobs\"],\n        [168942] = modTable.config[\"t2Mobs\"],\n        [163882] = modTable.config[\"t2Mobs\"],\n        [163862] = modTable.config[\"t2Mobs\"],\n        [164562] = modTable.config[\"t2Mobs\"],\n        [171799] = modTable.config[\"t2Mobs\"],\n        [170690] = modTable.config[\"t2Mobs\"],\n        [164266] = modTable.config[\"t2Mobs\"],\n        [164185] = modTable.config[\"t2Mobs\"],\n        [162103] = modTable.config[\"t2Mobs\"],\n        [165872] = modTable.config[\"t2Mobs\"],\n        [168658] = modTable.config[\"t2Mobs\"],\n        [168318] = modTable.config[\"t2Mobs\"],\n        [168717] = modTable.config[\"t2Mobs\"],\n        [163520] = modTable.config[\"t2Mobs\"],\n        [168572] = modTable.config[\"t2Mobs\"],\n        [162317] = modTable.config[\"t2Mobs\"],\n        [163621] = modTable.config[\"t2Mobs\"],\n        [162040] = modTable.config[\"t2Mobs\"],\n        [167536] = modTable.config[\"t2Mobs\"],\n        [171376] = modTable.config[\"t2Mobs\"],\n        [169861] = modTable.config[\"t2Mobs\"],\n        [167876] = modTable.config[\"t2Mobs\"],\n        [162047] = modTable.config[\"t2Mobs\"],\n        [172981] = modTable.config[\"t2Mobs\"],\n        [174175] = modTable.config[\"t2Mobs\"],\n        [165430] = modTable.config[\"t2Mobs\"],\n        [166276] = modTable.config[\"t2Mobs\"],\n        [165946] = modTable.config[\"t2Mobs\"],\n        [162744] = modTable.config[\"t2Mobs\"],\n        [168393] = modTable.config[\"t2Mobs\"],\n        [168396] = modTable.config[\"t2Mobs\"],\n        [167998] = modTable.config[\"t2Mobs\"],\n        [170850] = modTable.config[\"t2Mobs\"],\n        [163086] = modTable.config[\"t2Mobs\"],\n        [162038] = modTable.config[\"t2Mobs\"],\n        [169905] = modTable.config[\"t2Mobs\"],\n        [163620] = modTable.config[\"t2Mobs\"],\n        [164510] = modTable.config[\"t2Mobs\"],\n        [164557] = modTable.config[\"t2Mobs\"],\n        [165919] = modTable.config[\"t2Mobs\"],\n        [167111] = modTable.config[\"t2Mobs\"],\n        [163121] = modTable.config[\"t2Mobs\"],\n        [167607] = modTable.config[\"t2Mobs\"],\n        [162689] = modTable.config[\"t2Mobs\"],\n        [164292] = modTable.config[\"t2Mobs\"],\n        [168886] = modTable.config[\"t2Mobs\"],\n        [165137] = modTable.config[\"t2Mobs\"],\n        [163618] = modTable.config[\"t2Mobs\"],\n        [168443] = modTable.config[\"t2Mobs\"],\n        [177816] = modTable.config[\"t2Mobs\"],\n        [180348] = modTable.config[\"t2Mobs\"],\n        [178171] = modTable.config[\"t2Mobs\"],\n        \n        --BFA\n        [144295] = modTable.config[\"t2Mobs\"], --\"Mechagon Mechanic\"\n        [144298] = modTable.config[\"t2Mobs\"], --\"Defense Bot Mk III\"\n        [150143] = modTable.config[\"t2Mobs\"], --\"Scrapbone Grunder\"\n        [150276] = modTable.config[\"t2Mobs\"], --\"Heavy Scrapbot\"\n        [150169] = modTable.config[\"t2Mobs\"], --\"Toxic Lurker\"\n        [135239] = modTable.config[\"t2Mobs\"], --\"Spectral Witch Doctor\"\n        [133912] = modTable.config[\"t2Mobs\"], --\"Bloodsworn Defiler\"\n        [133835] = modTable.config[\"t2Mobs\"], --\"Feral Bloodswarmer\"\n        [136076] = modTable.config[\"t2Mobs\"], --\"Agitated Nimbus\"\n        [127486] = modTable.config[\"t2Mobs\"], --\"Ashvane Officer\"\n        [135007] = modTable.config[\"t2Mobs\"], --\"Orb Guardian\"\n        [144311] = modTable.config[\"t2Mobs\"], --\"Orb Guardian\"\n        [131850] = modTable.config[\"t2Mobs\"], --\"Maddened Survivalist\"\n        [135552] = modTable.config[\"t2Mobs\"], --\"Deathtouched Slaver\"\n        [139949] = modTable.config[\"t2Mobs\"], --\"Plague Doctor\"\n        [139284] = modTable.config[\"t2Mobs\"], --\"Plague Doctor\"\n        [129602] = modTable.config[\"t2Mobs\"], --\"Irontide Enforcer\"\n        [134232] = modTable.config[\"t2Mobs\"], --\"Hired Assassin\"\n        [135474] = modTable.config[\"t2Mobs\"], --\"Thistle Acolyte\"\n        [136083] = modTable.config[\"t2Mobs\"], --\"Forgotten Denizen\"\n        [136297] = modTable.config[\"t2Mobs\"], --\"Forgotten Denizen\"\n        [134990] = modTable.config[\"t2Mobs\"], --\"Charged Dust Devil\"\n        [128969] = modTable.config[\"t2Mobs\"], --\"Ashvane Commander\"\n        [134364] = modTable.config[\"t2Mobs\"], --\"Faithless Tender\"\n        [122973] = modTable.config[\"t2Mobs\"], --\"Dazar'ai Confessor\"\n        [135049] = modTable.config[\"t2Mobs\"], --\"Dreadwing Raven\"\n        [129547] = modTable.config[\"t2Mobs\"], --\"Blacktooth Knuckleduster\"\n        [134701] = modTable.config[\"t2Mobs\"], --\"Blood Effigy\"\n        [131436] = modTable.config[\"t2Mobs\"], --\"Chosen Blood Matron\"\n        [133870] = modTable.config[\"t2Mobs\"], --\"Diseased Lasher\"\n        [136249] = modTable.config[\"t2Mobs\"], --\"Guardian Elemental\"\n        [134251] = modTable.config[\"t2Mobs\"], --\"Seneschal M'bara\"\n        [130400] = modTable.config[\"t2Mobs\"], --\"Irontide Crusher\"\n        [136186] = modTable.config[\"t2Mobs\"], --\"Tidesage Spiritualist\"\n        [130661] = modTable.config[\"t2Mobs\"], --\"Venture Co. Earthshaper\"\n        [130026] = modTable.config[\"t2Mobs\"], --\"Bilge Rat Seaspeaker\"\n        [135204] = modTable.config[\"t2Mobs\"], --\"Spectral Hex Priest\"\n        [129370] = modTable.config[\"t2Mobs\"], --\"Irontide Waveshaper\"\n        [144071] = modTable.config[\"t2Mobs\"], --\"Irontide Waveshaper\"\n        [131586] = modTable.config[\"t2Mobs\"], --\"Banquet Steward\"\n        [131009] = modTable.config[\"t2Mobs\"], --\"Spirit of Gold\"\n        [137103] = modTable.config[\"t2Mobs\"], --\"Blood Visage\"\n        [134284] = modTable.config[\"t2Mobs\"], --\"Fallen Deathspeaker\"\n        [138187] = modTable.config[\"t2Mobs\"], --\"Grotesque Horror\"\n        [134629] = modTable.config[\"t2Mobs\"], --\"Scaled Krolusk Rider\"\n        [141284] = modTable.config[\"t2Mobs\"], --\"Kul Tiran Wavetender\"\n        [142293] = modTable.config[\"t2Mobs\"], --\"Kul Tiran Wavetender\"\n        \n        --Legion\n        [114526] = modTable.config[\"t2Mobs\"], --\"Ghostly Understudy\"\n        [116548] = modTable.config[\"t2Mobs\"], --\"Backup Singer\"\n        [114624] = modTable.config[\"t2Mobs\"], --\"Arcane Warden\"\n        [114542] = modTable.config[\"t2Mobs\"], --\"Ghostly Philanthropist\"\n        [114637] = modTable.config[\"t2Mobs\"], --\"Spectral Sentry\" \n        [114796] = modTable.config[\"t2Mobs\"], --\"Wholesome Hostess\"\n        [183425] = modTable.config[\"t2Mobs\"], --\"Wholesome Host\"\n        [96664] = modTable.config[\"t2Mobs\"],\n        \n        --WOD\n        [82590] = modTable.config[\"t2Mobs\"], --\"Grimrail Scout\"\n        [83028] = modTable.config[\"t2Mobs\"], --\"Grom'kar Deadeye\"\n        [80936] = modTable.config[\"t2Mobs\"], --\"Grom'kar Grenadier\"\n        [79739] = modTable.config[\"t2Mobs\"], --\"Grom'kar Grenadier (boss version)\"\n        [88163] = modTable.config[\"t2Mobs\"], --\"Grom'kar Cinderseer\"\n        [80937] = modTable.config[\"t2Mobs\"], --\"Grom'kar Gunner\"\n        [77483] = modTable.config[\"t2Mobs\"], --\"Grom'kar Gunner (boss version)\"\n        [77700] = modTable.config[\"t2Mobs\"],\n        [75459] = modTable.config[\"t2Mobs\"],\n        \n        --some \"deeppurple\"\n        [114783] = modTable.config[\"t2Mobs\"], --\"Reformed Maiden\"\n        [114544] = modTable.config[\"t2Mobs\"], --\"Skeletal Usher\"\n        [114794] = modTable.config[\"t2Mobs\"], --\"Skeletal Hound\"\n        [114636] = modTable.config[\"t2Mobs\"], --\"Phantom Guardsman\"\n        [183423] = modTable.config[\"t2Mobs\"], --\"Reformed Bachelor\"\n        [114802] = modTable.config[\"t2Mobs\"], --\"Spectral Journeyman\"\n        \n        --some \"lightpurple\"\n        [114526] = modTable.config[\"t2Mobs\"], --\"Phantom Crew\"\n        [114633] = modTable.config[\"t2Mobs\"], --\"Spectral Valet\"\n        [114715] = modTable.config[\"t2Mobs\"], --\"Ghostly Chef\"\n        [115765] = modTable.config[\"t2Mobs\"], --\"Abstract Nullifier\"\n        [114338] = modTable.config[\"t2Mobs\"], --\"Mana Confluence\"\n        \n        \n        -- t3 mobs - light red\n        --Dragonflight\n        [196045] = modTable.config[\"t3Mobs\"],\n        [200387] = modTable.config[\"t3Mobs\"],\n        [186740] = modTable.config[\"t3Mobs\"],\n        [192796] = modTable.config[\"t3Mobs\"],\n        [194896] = modTable.config[\"t3Mobs\"],\n        [193457] = modTable.config[\"t3Mobs\"],\n        [193462] = modTable.config[\"t3Mobs\"],\n        \n        --SL\n        [164506] = modTable.config[\"t3Mobs\"],\n        [162691] = modTable.config[\"t3Mobs\"],\n        [163524] = modTable.config[\"t3Mobs\"],\n        [165824] = modTable.config[\"t3Mobs\"],\n        [169893] = modTable.config[\"t3Mobs\"],\n        [169927] = modTable.config[\"t3Mobs\"],\n        [168446] = modTable.config[\"t3Mobs\"],\n        [165197] = modTable.config[\"t3Mobs\"],\n        [173447] = modTable.config[\"t3Mobs\"],\n        [163619] = modTable.config[\"t3Mobs\"],\n        [177808] = modTable.config[\"t3Mobs\"],\n        \n        --BFA\n        [151613] = modTable.config[\"t3Mobs\"], --\"Anti-Personnel Squirrel\"\n        [144293] = modTable.config[\"t3Mobs\"], --\"Waste Processing Unit\"\n        [151657] = modTable.config[\"t3Mobs\"], --\"Bomb Tonk\"\n        [150292] = modTable.config[\"t3Mobs\"], --\"Mechagon Cavalry\"\n        [150160] = modTable.config[\"t3Mobs\"], --\"Scrapbone Bully\"\n        [150254] = modTable.config[\"t3Mobs\"], --\"Scraphound\"\n        [150165] = modTable.config[\"t3Mobs\"], --\"Slime Elemental\"\n        [135245] = modTable.config[\"t3Mobs\"], --\"Bilge Rat Demolisher\"\n        [135235] = modTable.config[\"t3Mobs\"], --\"Spectral Beastmaster\"\n        [131685] = modTable.config[\"t3Mobs\"], --\"Runic Disciple\"\n        [136643] = modTable.config[\"t3Mobs\"], --\"Azerite Extractor\"\n        [134041] = modTable.config[\"t3Mobs\"], --\"Infected Peasant\"\n        [130404] = modTable.config[\"t3Mobs\"], --\"Vermin Trapper\"\n        [127485] = modTable.config[\"t3Mobs\"], --\"Bilge Rat Looter\"\n        [135706] = modTable.config[\"t3Mobs\"], --\"Bilge Rat Looter\"\n        [134600] = modTable.config[\"t3Mobs\"], --\"Sandswept Marksman\"\n        [131818] = modTable.config[\"t3Mobs\"], --\"Marked Sister\"\n        [122971] = modTable.config[\"t3Mobs\"], --\"Dazar'ai Juggernaut\"\n        [137614] = modTable.config[\"t3Mobs\"], --\"Demolishing Terror\"\n        [137625] = modTable.config[\"t3Mobs\"], --\"Demolishing Terror\"\n        [137626] = modTable.config[\"t3Mobs\"], --\"Demolishing Terror\"\n        [140447] = modTable.config[\"t3Mobs\"], --\"Demolishing Terror\"\n        [134012] = modTable.config[\"t3Mobs\"], --\"Taskmaster Askari\"\n        [131858] = modTable.config[\"t3Mobs\"], --\"Thornguard\"\n        [135048] = modTable.config[\"t3Mobs\"], --\"Gorestained Piglet\"\n        [135192] = modTable.config[\"t3Mobs\"], --\"Honored Raptor\"\n        [134896] = modTable.config[\"t3Mobs\"], --\"Sewer Vicejaw\"\n        [127482] = modTable.config[\"t3Mobs\"], --\"Sewer Vicejaw\"\n        [130909] = modTable.config[\"t3Mobs\"], --\"Fetid Maggot\"\n        [130485] = modTable.config[\"t3Mobs\"], --\"Mechanized Peacekeeper\"\n        [136139] = modTable.config[\"t3Mobs\"], --\"Mechanized Peacekeeper\"\n        [137487] = modTable.config[\"t3Mobs\"], --\"Skeletal Hunting Raptor\"\n        [137830] = modTable.config[\"t3Mobs\"], --\"Pallid Gorger\"\n        [136391] = modTable.config[\"t3Mobs\"], --\"Heart Guardian\"\n        [139946] = modTable.config[\"t3Mobs\"], --\"Heart Guardian\"\n        [139425] = modTable.config[\"t3Mobs\"], --\"Crazed Incubator\"\n        [137484] = modTable.config[\"t3Mobs\"], --\"King A'akul\"\n        [130488] = modTable.config[\"t3Mobs\"], --\"Mech Jockey\"\n        [127879] = modTable.config[\"t3Mobs\"], --\"Shieldbearer of Zul\"\n        [135989] = modTable.config[\"t3Mobs\"], --\"Shieldbearer of Zul\"\n        \n        --Legion\n        [115019] = modTable.config[\"t3Mobs\"], --\"Coldmist Widow\"\n        [97087] = modTable.config[\"t3Mobs\"],\n        [96574] = modTable.config[\"t3Mobs\"],\n        \n        --WOD\n        [80935] = modTable.config[\"t3Mobs\"], --\"Grom'kar Boomer\"\n        [83389] = modTable.config[\"t3Mobs\"], --\"Ironwing Flamespitter\"\n        [81212] = modTable.config[\"t3Mobs\"], --\"Grimrail Overseer\"\n        [81279] = modTable.config[\"t3Mobs\"], --\"Grom'kar Flameslinger\"\n        [75652] = modTable.config[\"t3Mobs\"],\n        [75966] = modTable.config[\"t3Mobs\"],\n        \n        --some \"hotpink\"\n        [80938] = modTable.config[\"t3Mobs\"], --\"Grom'kar Hulk\"\n        [82597] = modTable.config[\"t3Mobs\"], --\"Grom'kar Captain\"\n        [83025] = modTable.config[\"t3Mobs\"], --\"Grom'kar Battlemaster\"\n        [81603] = modTable.config[\"t3Mobs\"], --\"Champion Druna\"\n        [83026] = modTable.config[\"t3Mobs\"], --\"Champion Olugar\"\n        [84520] = modTable.config[\"t3Mobs\"], --\"Pitwarden Gwarnok\"\n        [84028] = modTable.config[\"t3Mobs\"], --\"Siegemaster Rokra\"\n        [83578] = modTable.config[\"t3Mobs\"], --\"Ogron Laborer\"\n        [83392] = modTable.config[\"t3Mobs\"], --\"Rampaging Clefthoof\"\n    }\n    \n    function modTable.UpdateColor (unitFrame, envTable)\n        if not unitFrame or unitFrame.IsNpcWithoutHealthbar or unitFrame.IsFriendlyPlayerWithoutHealthbar then return end\n        \n        if modTable.useThreatColors and InCombatLockdown() then\n            if unitFrame.namePlateThreatIsTanking and not Plater.PlayerIsTank then\n                return\n            end\n            if not unitFrame.namePlateThreatIsTanking and Plater.PlayerIsTank then\n                return\n            end\n        end\n        \n        local unitIsPlayer = unitFrame.ActorType == \"friendlyplayer\" or unitFrame.ActorType == \"enemyplayer\"\n        \n        if modTable.useTargetColor then\n            if unitFrame.namePlateIsTarget then\n                if not unitIsPlayer or (not modTable.ignoreTargetColorOnPlayers and unitIsPlayer)  then\n                    if modTable.colorHealthBar then\n                        Plater.SetNameplateColor (unitFrame, modTable.targetColor)\n                    end\n                    if modTable.colorNameText then\n                        Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.targetColor))\n                    end\n                    envTable.HasRaidMark = nil\n                    envTable.isTarget = true\n                    envTable.wasTarget = false\n                end\n                return\n            elseif envTable.isTarget then\n                envTable.isTarget = false\n                envTable.wasTarget = true\n            end\n        end\n        \n        if modTable.useFocusColor then\n            if UnitIsUnit (unitFrame.namePlateUnitToken, \"focus\") then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, modTable.focusColor)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.focusColor))\n                end\n                envTable.HasRaidMark = nil\n                envTable.isFocus = true\n                envTable.wasFocus = false\n                return\n            elseif envTable.isFocus then\n                envTable.isFocus = false\n                envTable.wasFocus = true\n            end\n        end\n        \n        -- from \"Color by Raid Mark\"\n        local raidMark = nil\n        if modTable.showRaidMarkColors and unitFrame.unit then\n            raidMark = Plater.GetRaidMark (unitFrame)\n        end\n        if (raidMark and modTable.ColorByMark [raidMark]) then\n            if modTable.colorHealthBar then\n                Plater.SetNameplateColor (unitFrame, modTable.ColorByMark [raidMark])\n            end\n            if modTable.colorNameText then\n                Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(modTable.ColorByMark [raidMark]))\n            end\n            envTable.HasRaidMark = true\n        else\n            --attempt to get the color from the unit color list\n            local color = modTable.NpcColors [unitFrame.namePlateUnitNameLower] or modTable.NpcColors [unitFrame.namePlateUnitName] or modTable.NpcColors [unitFrame.namePlateNpcId] or (modTable.colorRares and modTable.RareColors[UnitClassification(unitFrame.namePlateUnitToken)])\n            --if the color exists, set the health bar color\n            if (color) then\n                if modTable.colorHealthBar then\n                    Plater.SetNameplateColor (unitFrame, color)\n                end\n                if modTable.colorNameText then\n                    Plater:SetFontColor (unitFrame.unitName, Plater:ParseColors(color))\n                end\n                envTable.HasRaidMark = nil\n            elseif envTable.HasRaidMark or envTable.wasTarget or envTable.wasFocus then\n                if unitIsPlayer  then\n                    Plater.FindAndSetNameplateColor (unitFrame)\n                else\n                    Plater.RefreshNameplateColor (unitFrame)\n                end\n                if modTable.colorNameText then\n                    --Plater.UpdatePlateText (unitFrame.PlateFrame, Plater.db.profile.plate_config[unitFrame.ActorType], false)\n                    modTable.resetNameColor(unitFrame)\n                end\n                envTable.HasRaidMark = nil\n                envTable.wasTarget = false\n                envTable.wasFocus = false\n            end\n        end\n    end\n    \n    function modTable.resetNameColor(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        local nameString = unitFrame.unitName\n        local plateConfigs = Plater.db.profile.plate_config[unitFrame.ActorType]\n        local ACTORTYPE_FRIENDLY_PLAYER = \"friendlyplayer\"\n        \n        if (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_guild_color and plateFrame.playerGuildName == Plater.PlayerGuildName) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_guild_color))\n            \n        elseif (Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_friends_color and Plater.FriendsCache [plateFrame.namePlateUnitName]) then\n            Plater:SetFontColor (nameString, unpack(Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_friend_color))\n            \n        elseif (plateFrame.actorType == ACTORTYPE_FRIENDLY_PLAYER and Plater.db.profile.plate_config [ACTORTYPE_FRIENDLY_PLAYER].actorname_use_class_color) then\n            local _, unitClass = UnitClass (unitFrame.namePlateUnitToken)\n            if (unitClass) then\n                local color = RAID_CLASS_COLORS [unitClass]\n                Plater:SetFontColor (nameString, color.r, color.g, color.b)\n            else\n                Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n            end\n            \n        else\n            Plater:SetFontColor (nameString, plateConfigs.actorname_text_color)\n        end\n    end\n    \nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if modTable.useTargetColor then\n        modTable.UpdateColor (unitFrame, envTable)\n    end\nend\n\n\n\n\n\n\n",
					},
					["version"] = 30,
				}, -- [16]
			},
			["auras_per_row_amount2"] = 6,
			["aura_width"] = 14,
			["ghost_auras"] = {
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
				},
			},
			["pet_width_scale"] = 0.9999999403953552,
			["quick_hide"] = true,
			["extra_icon_timer_size"] = 11,
			["target_highlight_color"] = {
				1, -- [1]
				1, -- [2]
			},
			["extra_icon_stack_outline"] = "OUTLINE",
			["resources"] = {
				["scale"] = 0.7999999523162842,
			},
			["click_space"] = {
				120, -- [1]
				20, -- [2]
			},
			["extra_icon_auras"] = {
				323149, -- [1]
				333737, -- [2]
				323059, -- [3]
				343502, -- [4]
			},
			["castbar_target_font"] = "Roboto BoldCondensed",
			["ui_parent_cast_level"] = 10,
			["castbar_target_outline"] = "NONE",
			["global_offset_y"] = -1,
			["ui_parent_buff2_level"] = 10,
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["aura_show_enrage"] = true,
			["use_color_lerp"] = true,
			["castbar_target_anchor"] = {
				["y"] = -0.8000030517578125,
			},
			["not_affecting_combat_enabled"] = true,
			["extra_icon_timer_outline"] = "OUTLINE",
			["health_statusbar_bgcolor"] = {
				0.2117647230625153, -- [1]
				0.2117647230625153, -- [2]
				0.2117647230625153, -- [3]
				0.9500000029802322, -- [4]
			},
			["script_banned_user"] = {
				["Player-3674-08A5D7A3"] = true,
			},
			["pet_height_scale"] = 0.9999999403953552,
			["aura_x_offset"] = 1,
			["first_run3"] = true,
			["color_override_colors"] = {
				[3] = {
					0.74509803921569, -- [1]
					0.18823529411765, -- [2]
					0.11372549019608, -- [3]
				},
				[4] = {
					1, -- [1]
					0.79607843137255, -- [2]
					0.2078431372549, -- [3]
				},
			},
			["cast_statusbar_spark_alpha"] = 0,
			["indicator_raidmark_scale"] = 0.699999988079071,
			["widget_bar_scale"] = 0.8499999642372131,
			["ui_parent_buff_level"] = 10,
			["aura_sort"] = true,
			["health_statusbar_bgtexture"] = "Minimalist",
			["aura_breakline_space"] = 1.199999928474426,
			["indicator_raidmark_anchor"] = {
				["y"] = 2.239997863769531,
				["x"] = -0.5600051879882812,
				["side"] = 8,
			},
			["tank"] = {
				["colors"] = {
					["aggro"] = {
						0.86666666666667, -- [1]
						0.43529411764706, -- [2]
						0, -- [3]
					},
					["noaggro"] = {
						0.74509803921569, -- [1]
						0.18823529411765, -- [2]
						0.11372549019608, -- [3]
					},
					["nocombat"] = {
						0.74509803921569, -- [1]
						0.18823529411765, -- [2]
						0.11372549019608, -- [3]
					},
				},
			},
			["aura_tracker"] = {
				["buff_banned"] = {
					["333575"] = true,
					["318486"] = true,
					["333553"] = true,
					["216777"] = true,
					["317602"] = true,
					["302564"] = true,
					["292664"] = true,
					["61574"] = true,
					["303380"] = true,
					["333579"] = true,
					["284471"] = true,
					["268710"] = true,
					["236502"] = true,
					["61573"] = true,
					["206150"] = true,
					["311571"] = true,
					["284882"] = true,
					["5760"] = true,
					["209746"] = true,
					["286145"] = true,
					["266499"] = true,
					["343553"] = true,
				},
				["buff"] = {
					273607, -- [1]
					283928, -- [2]
					311975, -- [3]
					343208, -- [4]
					197862, -- [5]
					66235, -- [6]
					344548, -- [7]
					189949, -- [8]
					343196, -- [9]
					317929, -- [10]
					259895, -- [11]
					290494, -- [12]
					327993, -- [13]
					322540, -- [14]
					332672, -- [15]
					321708, -- [16]
					305395, -- [17]
					41450, -- [18]
					200327, -- [19]
					290583, -- [20]
					320407, -- [21]
					236801, -- [22]
					194223, -- [23]
					333920, -- [24]
					74001, -- [25]
					212753, -- [26]
					175395, -- [27]
					197874, -- [28]
					200816, -- [29]
					196718, -- [30]
					173898, -- [31]
					315948, -- [32]
					122783, -- [33]
					322108, -- [34]
					343150, -- [35]
					296497, -- [36]
					344363, -- [37]
					205202, -- [38]
					255016, -- [39]
					289626, -- [40]
					337851, -- [41]
					228048, -- [42]
					341857, -- [43]
					23333, -- [44]
					198144, -- [45]
					292152, -- [46]
					321702, -- [47]
					29166, -- [48]
					197061, -- [49]
					215776, -- [50]
					209194, -- [51]
					272682, -- [52]
					212640, -- [53]
					216451, -- [54]
					79542, -- [55]
					187827, -- [56]
					124974, -- [57]
					207812, -- [58]
					212295, -- [59]
					34976, -- [60]
					196555, -- [61]
					129035, -- [62]
					316849, -- [63]
					265314, -- [64]
					69369, -- [65]
					321745, -- [66]
					316828, -- [67]
					278454, -- [68]
					285272, -- [69]
					279043, -- [70]
					203048, -- [71]
					198817, -- [72]
					316834, -- [73]
					344878, -- [74]
					320379, -- [75]
					335255, -- [76]
					231627, -- [77]
					328767, -- [78]
					198111, -- [79]
					125174, -- [80]
					317138, -- [81]
					322110, -- [82]
					284508, -- [83]
					236439, -- [84]
					328682, -- [85]
					325208, -- [86]
					185422, -- [87]
					317138, -- [88]
					213602, -- [89]
					323048, -- [90]
				},
				["debuff_banned"] = {
					["331653"] = true,
					["169623"] = true,
					["6343"] = true,
					["206760"] = true,
					["286581"] = true,
					["279416"] = true,
					["295367"] = true,
					["256148"] = true,
					["5760"] = true,
					["204242"] = true,
					["294909"] = true,
					["255909"] = true,
					["273836"] = true,
				},
				["debuff_tracked"] = {
					["323059"] = false,
					["335372"] = false,
				},
				["debuff"] = {
					315341, -- [1]
					207756, -- [2]
					280322, -- [3]
					340075, -- [4]
					316220, -- [5]
					280321, -- [6]
					319504, -- [7]
					256495, -- [8]
					190533, -- [9]
					345569, -- [10]
					347037, -- [11]
					343217, -- [12]
				},
				["buff_tracked"] = {
					["344662"] = true,
					["209859"] = true,
					[227931] = true,
					[233210] = true,
					["343503"] = true,
					[297133] = true,
					[163689] = true,
					["338510"] = false,
				},
			},
			["castbar_target_show"] = true,
			["cast_statusbar_color"] = {
				nil, -- [1]
				1, -- [2]
				nil, -- [3]
				0.96000000089407, -- [4]
			},
			["update_throttle"] = 0.2499999850988388,
			["focus_indicator_enabled"] = false,
			["castbar_icon_show"] = false,
			["indicator_extra_raidmark"] = false,
			["aura_show_debuffs_personal"] = false,
			["extra_icon_timer_font"] = "Expressway",
			["not_affecting_combat_alpha"] = 0.699999988079071,
			["use_health_animation"] = true,
			["target_highlight_alpha"] = 0.7999999523162842,
			["target_shady_combat_only"] = false,
			["auto_toggle_stacking_enabled"] = true,
			["indicator_elite"] = false,
			["cast_statusbar_fadeout_time"] = 0.49999997019768,
			["target_shady_alpha"] = 0.5999999642372131,
			["aura_stack_anchor"] = {
				["y"] = 1,
				["x"] = 5,
				["side"] = 12,
			},
			["tap_denied_color"] = {
				0.46666666666667, -- [1]
				0.46666666666667, -- [2]
				0.46666666666667, -- [3]
			},
			["health_selection_overlay"] = "Minimalist",
			["target_highlight_height"] = 3,
			["first_run2"] = true,
			["health_animation_time_dilatation"] = 2,
			["version"] = 12,
			["health_selection_overlay_alpha"] = 0,
			["aura_cooldown_show_swipe"] = false,
			["range_check_power_bar_alpha"] = 0.8999999761581421,
			["aura_show_offensive_cd"] = true,
			["extra_icon_auras_mine"] = {
				["209859"] = false,
				[323059] = false,
				[343502] = false,
				[323149] = false,
				[333737] = false,
			},
			["script_data_trash"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1671311518,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 511,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["__TrashAt"] = 1673407503,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						373017, -- [2]
						386781, -- [3]
						384823, -- [4]
						372735, -- [5]
						385536, -- [6]
						392398, -- [7]
						375596, -- [8]
						387135, -- [9]
						209033, -- [10]
						360850, -- [11]
						212784, -- [12]
						207980, -- [13]
						199033, -- [14]
						199034, -- [15]
						200969, -- [16]
						394512, -- [17]
						397881, -- [18]
						396020, -- [19]
						374430, -- [20]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 7,
							["Key"] = "segmentsAmount",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Spark Color",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Key"] = "sparkColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Name"] = "Cast Color by SpellID",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Key"] = "castColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, scriptTable.config.segmentsAmount do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \nend",
					["Time"] = 1670202019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 468,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["__TrashAt"] = 1673407503,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 5,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670202618,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 798,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["__TrashAt"] = 1674689406,
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a big animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 4",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Name"] = "Flash",
							["Value"] = "Flash:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation",
							["Value"] = "Dot Animation:",
							["Key"] = "option14",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Name"] = "Option 19",
							["Value"] = "Cast Bar",
							["Key"] = "option19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\nend",
				}, -- [3]
			},
			["patch_version"] = 25,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 7,
			["number_region_first_run"] = true,
			["script_auto_imported"] = {
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Aura - Invalidate Unit"] = 1,
				["Add - Important [P]"] = 4,
				["Unit - Main Target"] = 11,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Unit - Health Markers"] = 12,
				["Cast - Glowing [P]"] = 10,
				["Cast - Important Target [P]"] = 2,
				["Unit - Show Energy"] = 11,
				["Relics 9.2 M Dungeons"] = 2,
				["Cast - Quick Flash"] = 2,
				["Cast - Alert + Timer [P]"] = 4,
				["Unit Power"] = 1,
				["Blink by Time Left"] = 1,
				["Aura is Shield [P]"] = 2,
				["Add - Warning [P]"] = 5,
				["Fixate"] = 11,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - On Going Cast [P]"] = 2,
				["Color Change"] = 1,
				["Cast - Stop Casting"] = 4,
				["Auto Set Skull"] = 11,
				["Spiteful Affix"] = 3,
				["Cast - Tank Interrupt"] = 12,
				["Add - Non Elite Trash [P]"] = 4,
				["Unit - Important"] = 11,
				["Aura Border Color"] = 1,
				["Countdown"] = 11,
				["Fixate by Unit Buff [P]"] = 2,
				["Cast - Frontal Cone"] = 15,
				["Add - Explode on Die [P]"] = 1,
				["Cast - Shield Interrupt"] = 2,
				["Explosion Affix M+"] = 14,
				["Cast - Very Important"] = 15,
				["Fixate On You"] = 11,
			},
			["aura2_grow_direction"] = 3,
			["cast_statusbar_texture"] = "Minimalist",
			["extra_icon_show_purge_border"] = {
				nil, -- [1]
				0.92549019607843, -- [2]
			},
			["cast_statusbar_spark_texture"] = "Interface\\AddOns\\Plater\\images\\spark8",
			["cast_statusbar_color_interrupted"] = {
				0.8, -- [1]
				0.30196078431373, -- [2]
				0.30196078431373, -- [3]
			},
			["indicator_faction"] = false,
			["transparency_behavior_use_division"] = true,
			["auto_toggle_friendly_enabled"] = true,
			["dps"] = {
				["colors"] = {
					["aggro"] = {
						0.86666666666667, -- [1]
						0.43529411764706, -- [2]
					},
					["notontank"] = {
						0.50196078431373, -- [1]
						0.50196078431373, -- [2]
					},
					["noaggro"] = {
						0.74509803921569, -- [1]
						0.18823529411765, -- [2]
						0.11372549019608, -- [3]
					},
				},
			},
			["castbar_target_text_size"] = 6,
			["indicator_rare"] = false,
			["auto_toggle_stacking"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
			["aura_border_colors_by_type"] = true,
			["cast_statusbar_spark_width"] = 7,
		},
	},
	["profileKeys"] = {
		["Úlfhédnar - Hyjal"] = "Thezdin",
		["Thezkin - Hyjal"] = "Thezdin",
		["Thezadin - Hyjal"] = "Thezdin",
		["Jägare - Hyjal"] = "Default",
		["Thezbank - Mannoroth"] = "Default",
		["Foulfellow - Hyjal"] = "Thezdin",
		["Thez - Hyjal"] = "Thezdin",
		["Thezdruid - Hyjal"] = "Default",
		["Thezknight - Hyjal"] = "Default",
		["Thezidari - Hyjal"] = "Thezdin",
		["Thezdgar - Hyjal"] = "Default",
		["Thezdin - Hyjal"] = "Thezdin",
		["Thezfu - Hyjal"] = "Thezdin",
		["Thezbot - Azgalor"] = "Default",
		["Thezdivh - Hyjal"] = "Default",
	},
	["captured_casts"] = {
		[392080] = {
			["source"] = "Pudgy Riverbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196017,
		},
		[157170] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Soulbinder",
			["npcID"] = 77812,
		},
		[376725] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[195049] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wormtalon Huntress",
			["npcID"] = 104643,
		},
		[387987] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Keen Skywatcher",
			["npcID"] = 190778,
		},
		[167920] = {
			["source"] = "Iron Trap",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83925,
		},
		[188907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkfiend Dreadbringer",
			["npcID"] = 92789,
		},
		[376727] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[59528] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 1985,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28587,
		},
		[396180] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Crawler",
			["npcID"] = 186620,
		},
		[369563] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["npcID"] = 184581,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[392087] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Leapmaize Ambusher",
			["npcID"] = 193378,
		},
		[56969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Scale-Binder",
			["npcID"] = 26735,
		},
		[161781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grumpling",
			["npcID"] = 96449,
		},
		[158198] = {
			["source"] = "Blackrock Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78197,
		},
		[367521] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[240611] = {
			["source"] = "Tidescale Seacaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120482,
		},
		[241635] = {
			["encounterName"] = "Maiden of Vigilance",
			["source"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118289,
		},
		[59529] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 1985,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28587,
		},
		[371618] = {
			["source"] = "Cindershard Igniter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198382,
		},
		[396189] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197129,
		},
		[369573] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Baelog",
			["npcID"] = 184581,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[166903] = {
			["source"] = "Karak the Great Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87105,
		},
		[375716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Primalist Mage",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191206,
		},
		[382883] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Vile Rothexer",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194487,
		},
		[194545] = {
			["source"] = "Stormwind Battlemage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134193,
		},
		[377765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Windborne Primalist",
			["npcID"] = 189485,
		},
		[244709] = {
			["encounterName"] = "Portal Keeper Hasabel",
			["source"] = "Blazing Imp",
			["encounterID"] = 2064,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122783,
		},
		[151548] = {
			["source"] = "Bloodmaul Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75272,
		},
		[375719] = {
			["source"] = "Primalbound Water Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190739,
		},
		[59146] = {
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29820,
		},
		[188404] = {
			["encounterName"] = "Hymdall",
			["source"] = "Storm Drake",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97788,
		},
		[385958] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[152573] = {
			["source"] = "Gorian Battle Boar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89171,
		},
		[211439] = {
			["encounterName"] = "Gul'dan",
			["source"] = "The Demon Within",
			["npcID"] = 111022,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1866,
		},
		[166906] = {
			["source"] = "Karak the Great Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87105,
		},
		[374699] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[388008] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[391081] = {
			["source"] = "Tserasor the Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190598,
		},
		[395177] = {
			["source"] = "Massive Magmashell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193152,
		},
		[405415] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[375727] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2559,
		},
		[158207] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Pearltusk",
			["npcID"] = 82452,
		},
		[9672] = {
			["source"] = "Bloodmaul Frostbender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88437,
		},
		[205300] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Essence of Corruption",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103691,
		},
		[210931] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Eye of Il'gynoth",
			["encounterID"] = 1873,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105906,
		},
		[386991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Proto-Drake",
			["npcID"] = 194146,
		},
		[389040] = {
			["source"] = "Thondrozus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192769,
		},
		[271310] = {
			["source"] = "Pathfinder Tacha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200263,
		},
		[395184] = {
			["source"] = "Blazing Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185883,
		},
		[396208] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197126,
		},
		[370615] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[38033] = {
			["source"] = "Hatecoil Spitespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89025,
		},
		[59020] = {
			["source"] = "Spitting Cobra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29774,
		},
		[59148] = {
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[385974] = {
			["encounterName"] = "Vexamus",
			["source"] = "Professor Maxdormu",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[236529] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Huntress Kasparian",
			["encounterID"] = 2050,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118523,
		},
		[151558] = {
			["source"] = "Bloodmaul Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75272,
		},
		[185854] = {
			["source"] = "Nightmare Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92792,
		},
		[231411] = {
			["source"] = "Loraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115879,
		},
		[373692] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[373693] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[203771] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Defiled Druid Spirit",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103080,
		},
		[258030] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Apocalypsis Module",
			["npcID"] = 130179,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[385980] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strunraan",
			["npcID"] = 193534,
		},
		[374719] = {
			["source"] = "Muckjaw Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188039,
		},
		[244722] = {
			["encounterName"] = "Antoran High Command",
			["source"] = "Admiral Svirax",
			["encounterID"] = 2070,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122367,
		},
		[393148] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maneet",
			["npcID"] = 188704,
		},
		[39058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grannok",
			["npcID"] = 93057,
		},
		[387006] = {
			["source"] = "Rotting Treant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186361,
		},
		[185857] = {
			["source"] = "7th Legion Sharpshooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134084,
		},
		[389054] = {
			["source"] = "Arcane Forager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196694,
		},
		[212475] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grelda the Hag",
			["npcID"] = 95123,
		},
		[209404] = {
			["source"] = "Duskwatch Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104247,
		},
		[378818] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Thaumaturge",
			["npcID"] = 192788,
		},
		[389056] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[374724] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[392130] = {
			["source"] = "Professor Maxdormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[271329] = {
			["source"] = "Pathfinder Tacha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200263,
		},
		[392132] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muugurv",
			["npcID"] = 194225,
		},
		[238584] = {
			["source"] = "Felfire Tormentor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115646,
		},
		[222716] = {
			["source"] = "Taintheart Befouler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111354,
		},
		[236537] = {
			["source"] = "Smoldering Infernal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118065,
		},
		[372683] = {
			["source"] = "Infused Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187894,
		},
		[378827] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Plunderer",
			["npcID"] = 192786,
		},
		[61326] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Scale-Binder",
			["npcID"] = 26735,
		},
		[376780] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[150032] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["npcID"] = 74475,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1655,
		},
		[225790] = {
			["source"] = "Malfurion Stormrage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106482,
		},
		[374735] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[145938] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gom",
			["npcID"] = 71959,
		},
		[387021] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Agitated Essence",
			["npcID"] = 192238,
		},
		[160271] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dryback Acidroller",
			["npcID"] = 78255,
		},
		[378832] = {
			["source"] = "Skulking Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196384,
		},
		[388046] = {
			["source"] = "Stinkbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187033,
		},
		[391118] = {
			["source"] = "Scalebane Lieutenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191739,
		},
		[395214] = {
			["source"] = "Worldcarver A'tir",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186859,
		},
		[383953] = {
			["source"] = "Bakar Companion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194255,
		},
		[210948] = {
			["encounterName"] = "Elerethe Renferal",
			["source"] = "Elerethe Renferal",
			["encounterID"] = 1876,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106087,
		},
		[378835] = {
			["source"] = "Brackenhide Rotflinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186362,
		},
		[384978] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[233983] = {
			["encounterName"] = "Demonic Inquisition",
			["source"] = "Belac",
			["encounterID"] = 2048,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116691,
		},
		[400335] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[212997] = {
			["encounterName"] = "Tichondrius",
			["source"] = "Tichondrius",
			["encounterID"] = 1862,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103685,
		},
		[372696] = {
			["source"] = "Primal Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188244,
		},
		[248317] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Argus the Unmaker",
			["npcID"] = 124828,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[59152] = {
			["source"] = "Stormforged Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28835,
		},
		[233473] = {
			["source"] = "Prophet Velen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117042,
		},
		[150038] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["npcID"] = 74475,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1655,
		},
		[375770] = {
			["source"] = "Frozion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193655,
		},
		[152598] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Firefury Giant",
			["npcID"] = 74971,
		},
		[165907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorian Beast-Lasher",
			["npcID"] = 87095,
		},
		[211464] = {
			["source"] = "Felbound Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104278,
		},
		[187406] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Runelord Ragnar",
			["npcID"] = 108579,
		},
		[372701] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[153623] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[398296] = {
			["source"] = "Shambling Infester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200387,
		},
		[386012] = {
			["source"] = "Nokhud Neophyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196263,
		},
		[388060] = {
			["source"] = "Stinkbreath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187033,
		},
		[387037] = {
			["source"] = "Primal Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195917,
		},
		[241155] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lieutenant Silvermight",
			["npcID"] = 120789,
		},
		[404442] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[398300] = {
			["source"] = "Shambling Infester",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200387,
		},
		[387039] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Commander",
			["npcID"] = 195761,
		},
		[164887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Mender",
			["npcID"] = 81820,
		},
		[36247] = {
			["source"] = "Felblood Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89754,
		},
		[68895] = {
			["source"] = "Spiteful Apparition",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36551,
		},
		[391136] = {
			["source"] = "Drakonid Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187240,
		},
		[212492] = {
			["encounterName"] = "Spellblade Aluriel",
			["source"] = "Spellblade Aluriel",
			["encounterID"] = 1871,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104881,
		},
		[373733] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2613,
		},
		[174614] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karosh Blackwind",
			["npcID"] = 86959,
		},
		[192018] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95833,
		},
		[197137] = {
			["source"] = "Hatecoil Wrangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100216,
		},
		[218124] = {
			["encounterName"] = "Elerethe Renferal",
			["source"] = "Elerethe Renferal",
			["encounterID"] = 1876,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106087,
		},
		[211470] = {
			["source"] = "Shadow Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104300,
		},
		[387045] = {
			["source"] = "Proto Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195177,
		},
		[151581] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Overseer",
			["npcID"] = 75193,
		},
		[168473] = {
			["source"] = "Darting Swift Feather",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84013,
		},
		[383975] = {
			["source"] = "Raging Windlord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200390,
		},
		[191508] = {
			["source"] = "Valarjar Aspirant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101637,
		},
		[386024] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194894,
		},
		[376811] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[387049] = {
			["source"] = "Wild Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191787,
		},
		[401382] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Past Self",
			["npcID"] = 185800,
		},
		[386026] = {
			["source"] = "Unstable Squall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194895,
		},
		[374765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ravenous Bloodbeak",
			["npcID"] = 185350,
		},
		[373742] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2613,
		},
		[395241] = {
			["source"] = "Primalist Voltweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198868,
		},
		[372719] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[386028] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[383981] = {
			["source"] = "Rising Tempest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194575,
		},
		[385005] = {
			["source"] = "Primalsworn Furbolg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190738,
		},
		[387054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brinetooth Hunter",
			["npcID"] = 187281,
		},
		[174108] = {
			["source"] = "Iron Cauterizer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85127,
		},
		[167966] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["npcID"] = 83893,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[231439] = {
			["source"] = "Corrupted Arcane Assistant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115849,
		},
		[164896] = {
			["source"] = "Mok'gol Wolfsong",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86659,
		},
		[211477] = {
			["source"] = "Legion Hound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104277,
		},
		[372730] = {
			["source"] = "Primal Juggernaut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188244,
		},
		[224276] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Illidan Stormrage",
			["npcID"] = 113063,
		},
		[200218] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reaves",
			["npcID"] = 101462,
		},
		[241680] = {
			["encounterName"] = "Harjatan",
			["source"] = "Mistress Sassz'ine",
			["encounterID"] = 2036,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 121184,
		},
		[395254] = {
			["source"] = "Primalist Tempestmaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198878,
		},
		[177696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Moltnoma",
			["npcID"] = 82614,
		},
		[376827] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[118297] = {
			["source"] = "Primal Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61029,
		},
		[177185] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thorny Lasher",
			["npcID"] = 84310,
		},
		[376829] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[387067] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186740,
		},
		[372735] = {
			["source"] = "Flashfrost Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187969,
		},
		[385024] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Salamander",
			["npcID"] = 196968,
		},
		[48280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blingtron 5000",
			["npcID"] = 77789,
		},
		[194080] = {
			["source"] = "Nightmare Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95599,
		},
		[174117] = {
			["source"] = "Iron Cauterizer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85127,
		},
		[374789] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[392194] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[385029] = {
			["source"] = "Fleshripper Vulture",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186246,
		},
		[6358] = {
			["source"] = "Cenindus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184600,
		},
		[369674] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonevault Geomancer",
			["npcID"] = 184022,
		},
		[369675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonevault Geomancer",
			["npcID"] = 184022,
		},
		[164907] = {
			["source"] = "Reanimated Ritual Bones",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75715,
		},
		[369677] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Olaf",
			["npcID"] = 184580,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[208929] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Corruptor Tentacle",
			["encounterID"] = 1873,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105383,
		},
		[374797] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Protective Breezehunter",
			["npcID"] = 193338,
		},
		[395273] = {
			["source"] = "Primal Stormsentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196856,
		},
		[385036] = {
			["source"] = "Primalist Galesinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190373,
		},
		[170028] = {
			["encounterName"] = "Yalnu",
			["source"] = "Lady Baihu",
			["npcID"] = 84358,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[236572] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highlord Kruul",
			["npcID"] = 117198,
		},
		[384014] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[9739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lyrathos Darkgrove",
			["npcID"] = 92335,
		},
		[209443] = {
			["encounterName"] = "Xavius",
			["source"] = "Xavius",
			["encounterID"] = 1864,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103769,
		},
		[386063] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[392207] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zenet Avis",
			["npcID"] = 193209,
		},
		[376851] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[234015] = {
			["encounterName"] = "Demonic Inquisition",
			["source"] = "Belac",
			["encounterID"] = 2048,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116691,
		},
		[156722] = {
			["source"] = "Shadowmoon Exhumer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77700,
		},
		[169519] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Disturbed Podling",
			["npcID"] = 85407,
		},
		[387091] = {
			["source"] = "Time-Lost Sunseeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187239,
		},
		[218148] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Solarist Tel'arn",
			["npcID"] = 109038,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[171056] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felguard Sentinel",
			["npcID"] = 92026,
		},
		[385046] = {
			["source"] = "Skulking Gutstabber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186242,
		},
		[395284] = {
			["source"] = "Rugren",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201563,
		},
		[59800] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 1984,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28546,
		},
		[199210] = {
			["source"] = "Valarjar Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96640,
		},
		[203817] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Corrupted Mushroom",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103095,
		},
		[375834] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[386072] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Professor Intinosa",
			["npcID"] = 195354,
		},
		[175665] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorian Enforcer",
			["npcID"] = 86275,
		},
		[256542] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Argus the Unmaker",
			["npcID"] = 124828,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[396313] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Stormcaller",
			["npcID"] = 185147,
		},
		[169012] = {
			["source"] = "Burning Familiar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84446,
		},
		[396315] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Stormcaller",
			["npcID"] = 185147,
		},
		[396316] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Huntmaster",
			["npcID"] = 185353,
		},
		[376865] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[256544] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Argus the Unmaker",
			["npcID"] = 124828,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[391198] = {
			["source"] = "Tserasor the Preserver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190598,
		},
		[396317] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[160312] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Cleric",
			["npcID"] = 77134,
		},
		[230951] = {
			["encounterName"] = "Spellblade Aluriel",
			["source"] = "Fel Soul",
			["encounterID"] = 1871,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115905,
		},
		[369703] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["npcID"] = 184018,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2556,
		},
		[241702] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Shadowsoul",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 121193,
		},
		[374823] = {
			["source"] = "Squallbringer Cyraz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190370,
		},
		[393251] = {
			["source"] = "Frenzied Grovetalon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187507,
		},
		[236072] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Soul Queen Dejahna",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118462,
		},
		[395299] = {
			["source"] = "Spellforged Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194402,
		},
		[192563] = {
			["source"] = "Valarjar Purifier",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97197,
		},
		[254500] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Imperator Deconix",
			["npcID"] = 127723,
		},
		[385063] = {
			["source"] = "Primalist Cinderweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190207,
		},
		[211503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eredar Mageslayer",
			["npcID"] = 114245,
		},
		[389159] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[373803] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Infused Whelp",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189893,
		},
		[202290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Xalian Felblaze",
			["npcID"] = 113555,
		},
		[385065] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[240169] = {
			["source"] = "Undersea Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120463,
		},
		[396327] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[13323] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[377900] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Skullhauler",
			["npcID"] = 199298,
		},
		[154175] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["encounterID"] = 1679,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75452,
		},
		[203827] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Corrupted Mushroom",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103096,
		},
		[385068] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197145,
		},
		[396330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Sentry",
			["npcID"] = 185357,
		},
		[240171] = {
			["source"] = "Undersea Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120463,
		},
		[203828] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Corrupted Mushroom",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103097,
		},
		[209971] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["source"] = "Elisande",
			["npcID"] = 106643,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1872,
		},
		[398380] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[386096] = {
			["source"] = "Screechflight Cursewife",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184816,
		},
		[392239] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snowy Mammoth Bull",
			["npcID"] = 193514,
		},
		[56860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mage Hunter Initiate",
			["npcID"] = 26728,
		},
		[382002] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apex Blazewing",
			["npcID"] = 193291,
		},
		[387122] = {
			["source"] = "Arcane Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186740,
		},
		[404526] = {
			["source"] = "Freed Tauren Prisoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203204,
		},
		[393265] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tombcaller Ganzaya",
			["npcID"] = 188509,
		},
		[166464] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["npcID"] = 82682,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1751,
		},
		[200248] = {
			["source"] = "Risen Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98280,
		},
		[374839] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2612,
		},
		[387125] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[204344] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktalon Assassin",
			["npcID"] = 191955,
		},
		[377912] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[260651] = {
			["source"] = "Karkinus the Capsizer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200907,
		},
		[387127] = {
			["source"] = "Primalist Thunderbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195696,
		},
		[245807] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Garothi Annihilator",
			["npcID"] = 123398,
		},
		[394294] = {
			["source"] = "Vyzos the Prophet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191308,
		},
		[198715] = {
			["source"] = "Val'kyr Battlemaiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 100876,
		},
		[376892] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[205370] = {
			["encounterName"] = "Krosus",
			["source"] = "Krosus",
			["encounterID"] = 1842,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101002,
		},
		[386107] = {
			["source"] = "Screechflight Hexclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 183995,
		},
		[183872] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felblood Corruptor",
			["npcID"] = 92396,
		},
		[389179] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["npcID"] = 189719,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[246833] = {
			["encounterName"] = "Kin'garoth",
			["source"] = "Kin'garoth",
			["encounterID"] = 2088,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122578,
		},
		[396346] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Dominator",
			["npcID"] = 193839,
		},
		[372800] = {
			["source"] = "Expedition Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187125,
		},
		[260654] = {
			["source"] = "Karkinus the Capsizer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200907,
		},
		[106797] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[396348] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gutchewer Bear",
			["npcID"] = 197134,
		},
		[328781] = {
			["source"] = "Vault Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199126,
		},
		[391230] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bisquius",
			["npcID"] = 197557,
		},
		[396349] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fleshripper Vulture",
			["npcID"] = 197133,
		},
		[396350] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fleshripper Vulture",
			["npcID"] = 197133,
		},
		[377923] = {
			["source"] = "Bound Spark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186624,
		},
		[392257] = {
			["source"] = "Broadhoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187478,
		},
		[398400] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[200256] = {
			["source"] = "Arcane Minion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101549,
		},
		[372808] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[377927] = {
			["source"] = "Smoldering Feather",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192690,
		},
		[396355] = {
			["source"] = "Tarasek Marauder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184461,
		},
		[398403] = {
			["source"] = "Furious Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200431,
		},
		[169033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Burning Fiend",
			["npcID"] = 86530,
		},
		[157772] = {
			["source"] = "Shadowmoon Prophet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80787,
		},
		[212031] = {
			["source"] = "Bound Energy",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105705,
		},
		[245303] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Asara, Mother of Night",
			["encounterID"] = 2073,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122467,
		},
		[193092] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[370764] = {
			["source"] = "Crystal Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187160,
		},
		[387145] = {
			["source"] = "Stormcaller Solongo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194315,
		},
		[188486] = {
			["source"] = "Felsmith Damorka",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92647,
		},
		[370766] = {
			["source"] = "Crystal Thrasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196117,
		},
		[396360] = {
			["source"] = "Tarasek Marauder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184461,
		},
		[153679] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1653,
		},
		[169036] = {
			["source"] = "Shadowheart Fiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92083,
		},
		[9613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkfiend Defiler",
			["npcID"] = 93111,
		},
		[59167] = {
			["source"] = "Stormfury Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28826,
		},
		[374865] = {
			["source"] = "Spotted Prowler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187487,
		},
		[387151] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[390223] = {
			["source"] = "Flashfrost Tarasek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187089,
		},
		[391247] = {
			["source"] = "Bazual",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193532,
		},
		[396366] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimetalon Spellflinger",
			["npcID"] = 195756,
		},
		[187466] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Supreme Lord Kazzak",
			["npcID"] = 94015,
		},
		[183883] = {
			["source"] = "Felblood Goliath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92397,
		},
		[369750] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Scaleripper",
			["npcID"] = 187602,
		},
		[392273] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ergburk",
			["npcID"] = 194409,
		},
		[369751] = {
			["source"] = "Qalashi Skirmisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186792,
		},
		[150612] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frost Wolf",
			["npcID"] = 75672,
		},
		[393298] = {
			["source"] = "Smoldering Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188673,
		},
		[396370] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Controller",
			["npcID"] = 195836,
		},
		[397394] = {
			["source"] = "Nokhud Thunderfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193373,
		},
		[383062] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189531,
		},
		[369754] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["npcID"] = 184018,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2556,
		},
		[183886] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felblood Evoker",
			["npcID"] = 92398,
		},
		[393302] = {
			["source"] = "Smoldering Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188673,
		},
		[392279] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Proto-Dragon",
			["npcID"] = 194089,
		},
		[372828] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Shaman",
			["npcID"] = 186679,
		},
		[390233] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rendvith",
			["npcID"] = 196971,
		},
		[173138] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Beremus the Overgrowth",
			["npcID"] = 80700,
		},
		[392281] = {
			["source"] = "Crystalus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193645,
		},
		[75068] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Magma Shaper",
			["npcID"] = 77992,
		},
		[393306] = {
			["source"] = "Primalist Earthwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193709,
		},
		[392283] = {
			["source"] = "Hungry Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188404,
		},
		[393307] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Flamecaller",
			["npcID"] = 193558,
		},
		[59169] = {
			["source"] = "Storming Vortex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28547,
		},
		[392284] = {
			["source"] = "Wild Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191787,
		},
		[185425] = {
			["source"] = "Steeljaw Grizzly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96677,
		},
		[392285] = {
			["source"] = "Proto Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195177,
		},
		[371812] = {
			["source"] = "Bound Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186626,
		},
		[158809] = {
			["source"] = "Arakkoa Outcast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85544,
		},
		[209485] = {
			["source"] = "Arcane Manifestation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105704,
		},
		[374885] = {
			["source"] = "Astral Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189555,
		},
		[394337] = {
			["source"] = "Morchok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187306,
		},
		[175190] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dominating Drudge",
			["npcID"] = 83640,
		},
		[159322] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wor'gol Shaman",
			["npcID"] = 75676,
		},
		[372839] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Raider",
			["npcID"] = 193840,
		},
		[396386] = {
			["source"] = "Melter Igneous",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188226,
		},
		[390245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Embertooth Spearhunter",
			["npcID"] = 188725,
		},
		[396388] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[377962] = {
			["source"] = "Berserk Yeti",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195056,
		},
		[247367] = {
			["encounterName"] = "Imonar the Soulhunter",
			["source"] = "Imonar the Soulhunter",
			["encounterID"] = 2082,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124158,
		},
		[374892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snowy Mammoth Calf",
			["npcID"] = 193606,
		},
		[394344] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Death's Shadow",
			["npcID"] = 190985,
		},
		[396392] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dueling Student",
			["npcID"] = 199377,
		},
		[383084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Springfeeder",
			["npcID"] = 192456,
		},
		[371824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Cauldron Keeper",
			["npcID"] = 186606,
		},
		[376943] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[235597] = {
			["encounterName"] = "Fallen Avatar",
			["source"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116939,
		},
		[374898] = {
			["source"] = "Shortcoat Mauler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195198,
		},
		[249418] = {
			["source"] = "Tarneth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 123533,
		},
		[372851] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[393327] = {
			["source"] = "Keen Skywatcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190778,
		},
		[377971] = {
			["source"] = "Gigantic Thresher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192919,
		},
		[375924] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["npcID"] = 184582,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[398447] = {
			["source"] = "Seismodor, Earth's Wrath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199664,
		},
		[396400] = {
			["source"] = "Glacias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199028,
		},
		[157794] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Magus",
			["npcID"] = 76263,
		},
		[395377] = {
			["source"] = "Thondrozus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192769,
		},
		[388211] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mossy Boulderfoot",
			["npcID"] = 187747,
		},
		[385141] = {
			["source"] = "Primalist Galesinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190373,
		},
		[387189] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rendvith",
			["npcID"] = 196971,
		},
		[209495] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[375929] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[387191] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strunraan",
			["npcID"] = 193534,
		},
		[249934] = {
			["encounterName"] = "The Defense of Eonar",
			["source"] = "The Paraxis",
			["encounterID"] = 2075,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124445,
		},
		[369788] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonebreaker",
			["npcID"] = 187907,
		},
		[157797] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Arbiter",
			["npcID"] = 77080,
		},
		[241233] = {
			["source"] = "Rez the Tombwatcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 121003,
		},
		[397431] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[372862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Splash",
			["npcID"] = 185645,
		},
		[369791] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["npcID"] = 184582,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[167012] = {
			["source"] = "Saberon Ambusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88813,
		},
		[241234] = {
			["source"] = "Umbral Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122851,
		},
		[372863] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189232,
		},
		[394362] = {
			["source"] = "Rasnar the War Ender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193232,
		},
		[164965] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Mender",
			["npcID"] = 81820,
		},
		[206939] = {
			["encounterName"] = "Gul'dan",
			["source"] = "Gul'dan",
			["npcID"] = 104154,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1866,
		},
		[386173] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[404601] = {
			["source"] = "Jamoku",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199914,
		},
		[389245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Archivist Edress",
			["npcID"] = 190153,
		},
		[173156] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Colm Breakstorm",
			["npcID"] = 87759,
		},
		[375937] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[198750] = {
			["encounterName"] = "Odyn",
			["source"] = "Stormforged Obliterator",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102019,
		},
		[392318] = {
			["source"] = "Initiate Zorig",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193985,
		},
		[389247] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blacktalon Avenger",
			["npcID"] = 187187,
		},
		[238677] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felbound Pyromage",
			["npcID"] = 120698,
		},
		[394367] = {
			["source"] = "Morchok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187306,
		},
		[388225] = {
			["source"] = "Frostfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192030,
		},
		[176229] = {
			["source"] = "Gorgorek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85042,
		},
		[255058] = {
			["encounterName"] = "Aggramar",
			["source"] = "Aggramar",
			["npcID"] = 121975,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2063,
		},
		[384132] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[168040] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["npcID"] = 83893,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[375943] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[385157] = {
			["source"] = "Riverback Rambler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189463,
		},
		[377991] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[387205] = {
			["source"] = "Tyrhold Gryphon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198417,
		},
		[384134] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192791,
		},
		[393348] = {
			["source"] = "Stalwart Broodwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198263,
		},
		[375945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highlands Goat",
			["npcID"] = 193776,
		},
		[154221] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zipteq",
			["npcID"] = 78734,
		},
		[180327] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Volatile Darkstone Imp",
			["npcID"] = 118163,
		},
		[255061] = {
			["encounterName"] = "Aggramar",
			["source"] = "Aggramar",
			["npcID"] = 121975,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2063,
		},
		[396423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galestrike Proto-Dragon",
			["npcID"] = 187211,
		},
		[369806] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hulking Berserker",
			["npcID"] = 184020,
		},
		[243289] = {
			["source"] = "Inquisitor Sebilus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 121399,
		},
		[244825] = {
			["encounterName"] = "Felhounds of Sargeras",
			["source"] = "F'harg",
			["npcID"] = 122477,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2074,
		},
		[375950] = {
			["source"] = "Primalist Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190377,
		},
		[164973] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Tender",
			["npcID"] = 81985,
		},
		[141427] = {
			["source"] = "Spiteleaf Squirt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84655,
		},
		[379023] = {
			["source"] = "Tundra Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194035,
		},
		[392332] = {
			["source"] = "Zumakh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194624,
		},
		[173676] = {
			["source"] = "Infected Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86215,
		},
		[394381] = {
			["source"] = "Root of Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185326,
		},
		[396430] = {
			["source"] = "Custodial Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192694,
		},
		[378003] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192680,
		},
		[392336] = {
			["source"] = "Arcane Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190776,
		},
		[385170] = {
			["source"] = "Wind Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191645,
		},
		[396432] = {
			["source"] = "Grod the Ancient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196385,
		},
		[393361] = {
			["source"] = "Nightrot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188707,
		},
		[390290] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[399504] = {
			["source"] = "Tarasek Frostclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201035,
		},
		[385172] = {
			["source"] = "Wind Serpent",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191645,
		},
		[382101] = {
			["source"] = "Rebel Conjurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195063,
		},
		[389268] = {
			["source"] = "Expedition Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187135,
		},
		[170608] = {
			["source"] = "Sargerei Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84094,
		},
		[191595] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felsworn Infester",
			["npcID"] = 96587,
		},
		[389269] = {
			["source"] = "Expedition Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187123,
		},
		[369818] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hulking Berserker",
			["npcID"] = 184020,
		},
		[243295] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Accusator Gnazh",
			["npcID"] = 121400,
		},
		[389270] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Expedition Guardian",
			["npcID"] = 187123,
		},
		[379033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Wardog",
			["npcID"] = 185465,
		},
		[389271] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[389273] = {
			["source"] = "Wyrmeater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186612,
		},
		[378012] = {
			["source"] = "Lavacaller Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186823,
		},
		[18651] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Garrison Marksman",
			["npcID"] = 88391,
		},
		[389274] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Shaman",
			["npcID"] = 186679,
		},
		[369823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vicious Basilisk",
			["npcID"] = 184023,
		},
		[22938] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muffinmon",
			["npcID"] = 112409,
		},
		[245857] = {
			["source"] = "Antoran Felguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 123478,
		},
		[177778] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Noxious Mandragora",
			["npcID"] = 84309,
		},
		[385181] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[207979] = {
			["source"] = "Jazshariu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104273,
		},
		[59433] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1973,
		},
		[243299] = {
			["source"] = "Shadow Council Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117776,
		},
		[391326] = {
			["source"] = "Honmor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193704,
		},
		[371875] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Trainee",
			["npcID"] = 189266,
		},
		[369828] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vicious Basilisk",
			["npcID"] = 184023,
		},
		[384161] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Irontorch",
			["npcID"] = 189464,
		},
		[166519] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Plume",
			["npcID"] = 82701,
		},
		[175221] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highwayman",
			["npcID"] = 83559,
		},
		[400542] = {
			["source"] = "Kalecgos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193460,
		},
		[147580] = {
			["source"] = "Thunderlord Packleader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78960,
		},
		[390305] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rendvith",
			["npcID"] = 196971,
		},
		[376997] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[239207] = {
			["encounterName"] = "Fallen Avatar",
			["source"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116939,
		},
		[395427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Lahar",
			["npcID"] = 189235,
		},
		[106823] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[383143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Shaman Rotknuckle",
			["npcID"] = 197356,
		},
		[159356] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malevolent Breath",
			["npcID"] = 78791,
		},
		[396454] = {
			["source"] = "Insatiable Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185715,
		},
		[373932] = {
			["encounterName"] = "Azureblade",
			["source"] = "Draconic Image",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190187,
		},
		[377004] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[172666] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grom'kar Warforger",
			["npcID"] = 77945,
		},
		[393385] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chalsec of the Earth",
			["npcID"] = 193847,
		},
		[378029] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Gashtooth",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186124,
		},
		[387243] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captivated Shellwarden",
			["npcID"] = 195962,
		},
		[59179] = {
			["source"] = "Titanium Thunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28965,
		},
		[245866] = {
			["source"] = "Hulking Demolisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 123476,
		},
		[35377] = {
			["source"] = "Magma Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77988,
		},
		[386223] = {
			["source"] = "Primal Stormshield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194896,
		},
		[373939] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Rotburst Totem",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190381,
		},
		[198263] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[236142] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Engine of Souls",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118460,
		},
		[167039] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Night-Twisted Soothsayer",
			["npcID"] = 85240,
		},
		[375988] = {
			["source"] = "Snowypelt Slyvern",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193438,
		},
		[245868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Antoran Doomguard",
			["npcID"] = 123477,
		},
		[392369] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earth Elemental",
			["npcID"] = 190173,
		},
		[270543] = {
			["source"] = "7th Legion Battlemage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134091,
		},
		[373942] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[235120] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Erupting Reflection",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119206,
		},
		[241263] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tidescale Witch",
			["npcID"] = 121011,
		},
		[189052] = {
			["source"] = "Black Rook Spectral Officer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95247,
		},
		[374969] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2612,
		},
		[377017] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[172161] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Spawn",
			["npcID"] = 85303,
		},
		[373947] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skaara",
			["npcID"] = 192949,
		},
		[369853] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Burly Rock-Thrower",
			["npcID"] = 184019,
		},
		[257645] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Aman'Thul",
			["npcID"] = 125885,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[395448] = {
			["source"] = "Voraazka",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193674,
		},
		[224374] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112668,
		},
		[388283] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[394426] = {
			["source"] = "Council Flamecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198503,
		},
		[68950] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["encounterID"] = 2006,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36497,
		},
		[387261] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[396475] = {
			["source"] = "Mellg the Ancient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196381,
		},
		[382143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reclaimer Makko",
			["npcID"] = 191536,
		},
		[392381] = {
			["source"] = "Fledgling Thunder Lizard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198815,
		},
		[247923] = {
			["encounterName"] = "Imonar the Soulhunter",
			["source"] = "Imonar the Soulhunter",
			["npcID"] = 124158,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2082,
		},
		[384194] = {
			["source"] = "Primalist Cinderweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190207,
		},
		[176261] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verdant Thorn-Weaver",
			["npcID"] = 89268,
		},
		[377029] = {
			["source"] = "Primal Scythid Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184853,
		},
		[224378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Celestial Acolyte",
			["npcID"] = 112655,
		},
		[258162] = {
			["source"] = "Lago the Drowned",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193025,
		},
		[172679] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gronnling Bonebreaker",
			["npcID"] = 80685,
		},
		[393411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chalsec of the Earth",
			["npcID"] = 193847,
		},
		[369865] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Raider",
			["npcID"] = 193840,
		},
		[59182] = {
			["source"] = "Unbound Firestorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28584,
		},
		[394436] = {
			["source"] = "Shas'ith",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189822,
		},
		[177287] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Talonpriest Ishaal",
			["npcID"] = 86760,
		},
		[405698] = {
			["source"] = "Baine Bloodhoof",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201362,
		},
		[405699] = {
			["source"] = "Baine Bloodhoof",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201362,
		},
		[193668] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[388296] = {
			["source"] = "Crust Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192626,
		},
		[394440] = {
			["source"] = "Dihar the Unyielding",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192225,
		},
		[174730] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowbourne Felcaster",
			["npcID"] = 84871,
		},
		[392394] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[392395] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[393419] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Penumbrus",
			["npcID"] = 189289,
		},
		[387277] = {
			["source"] = "Primal Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195917,
		},
		[404681] = {
			["source"] = "Storming Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202990,
		},
		[151697] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Overseer",
			["npcID"] = 75426,
		},
		[169613] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["npcID"] = 83846,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[392398] = {
			["source"] = "Primal Thundercloud",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197509,
		},
		[153234] = {
			["encounterName"] = "Azzakel, Vanguard of the Legion",
			["source"] = "Azzakel",
			["npcID"] = 75927,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1678,
		},
		[239741] = {
			["source"] = "Ghostly Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120194,
		},
		[240766] = {
			["source"] = "Guardian Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120777,
		},
		[157331] = {
			["source"] = "Greater Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77936,
		},
		[391380] = {
			["source"] = "Deathwind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187750,
		},
		[59696] = {
			["source"] = "Proto-Drake Handler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24082,
		},
		[388310] = {
			["source"] = "Custodial Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192694,
		},
		[392406] = {
			["source"] = "Storm Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197982,
		},
		[393430] = {
			["source"] = "Forge-Keep Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192703,
		},
		[188046] = {
			["source"] = "Denizen of the Dream",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198489,
		},
		[209033] = {
			["source"] = "Duskwatch Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104246,
		},
		[390361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shela the Windbinder",
			["npcID"] = 194884,
		},
		[391385] = {
			["source"] = "Summoned Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182815,
		},
		[393434] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Supplyhand",
			["npcID"] = 193790,
		},
		[388316] = {
			["source"] = "Researcher Sneakwing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196010,
		},
		[175763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Night-Twisted Brute",
			["npcID"] = 85241,
		},
		[384223] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[79964] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wheatizzle",
			["npcID"] = 112372,
		},
		[271612] = {
			["source"] = "Exodar Peacekeeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134943,
		},
		[375011] = {
			["source"] = "Seismic Force",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192745,
		},
		[393439] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sundered Supplyhand",
			["npcID"] = 193790,
		},
		[394463] = {
			["source"] = "Blightfur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193178,
		},
		[387297] = {
			["source"] = "Sundered Runebinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186354,
		},
		[394464] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Piercer Gigra",
			["npcID"] = 186511,
		},
		[234631] = {
			["source"] = "Smoldering Infernal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118065,
		},
		[178837] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cackling Pyromaniac",
			["npcID"] = 79510,
		},
		[395489] = {
			["source"] = "Karantun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193647,
		},
		[25054] = {
			["source"] = "Ancestral Prelate",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84717,
		},
		[394466] = {
			["source"] = "Primordial Hail",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189039,
		},
		[387300] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reclaimer Makko",
			["npcID"] = 191536,
		},
		[241287] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowsworn Invader",
			["npcID"] = 121021,
		},
		[372971] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Blacksmith",
			["npcID"] = 189471,
		},
		[156829] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gul'kosh",
			["npcID"] = 78437,
		},
		[369901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smoldering Feather",
			["npcID"] = 186965,
		},
		[153247] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["npcID"] = 75786,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1652,
		},
		[120149] = {
			["source"] = "Mirror Image",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194853,
		},
		[241290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tidescale Witch",
			["npcID"] = 121011,
		},
		[168092] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["npcID"] = 83892,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[241291] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowsworn Invader",
			["npcID"] = 121021,
		},
		[250505] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgotten Gryphon",
			["npcID"] = 193154,
		},
		[376049] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2559,
		},
		[395501] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[388335] = {
			["source"] = "Sundered Runebinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186354,
		},
		[393454] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Battlehorn Pyrhus",
			["npcID"] = 190986,
		},
		[271628] = {
			["source"] = "Teldrassil Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134938,
		},
		[371956] = {
			["source"] = "Primal Terrasentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188011,
		},
		[389360] = {
			["source"] = "Ancient Timekeeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192516,
		},
		[394479] = {
			["source"] = "Primordial Hail",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189039,
		},
		[175261] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Icejaw Rockbiter",
			["npcID"] = 72297,
		},
		[205462] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karuas",
			["npcID"] = 97859,
		},
		[57780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderlord Windfire",
			["npcID"] = 84088,
		},
		[393458] = {
			["source"] = "Malifron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190278,
		},
		[392435] = {
			["source"] = "Molkeej",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195430,
		},
		[389364] = {
			["source"] = "Ancient Timekeeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192516,
		},
		[271633] = {
			["source"] = "Mage-Commander Lyra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134163,
		},
		[387317] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruby Culler",
			["npcID"] = 190093,
		},
		[390389] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taranthiza's Image",
			["npcID"] = 197099,
		},
		[157348] = {
			["source"] = "Greater Storm Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77936,
		},
		[394485] = {
			["source"] = "Hypoxicron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186334,
		},
		[391414] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Borzgas",
			["npcID"] = 193896,
		},
		[172193] = {
			["source"] = "Infected Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86215,
		},
		[223381] = {
			["source"] = "Dire Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112153,
		},
		[394487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Death's Shadow",
			["npcID"] = 190985,
		},
		[190110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worgen Tracker",
			["npcID"] = 93961,
		},
		[174754] = {
			["source"] = "Sargerei Fiendspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 83020,
		},
		[192158] = {
			["encounterName"] = "Hyrja",
			["source"] = "Olmyr the Enlightened",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97202,
		},
		[379134] = {
			["source"] = "Rumbling Primalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187172,
		},
		[385277] = {
			["source"] = "Crust Lurker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192626,
		},
		[369921] = {
			["source"] = "Blazing Firesquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195448,
		},
		[160423] = {
			["source"] = "Pale Oracle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92536,
		},
		[383231] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavamancer",
			["npcID"] = 193944,
		},
		[374020] = {
			["source"] = "Containment Apparatus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190342,
		},
		[236694] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Captain Yathae Moonstrike",
			["encounterID"] = 2050,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118374,
		},
		[394496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruinous",
			["npcID"] = 193522,
		},
		[392449] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earth Elemental",
			["npcID"] = 190173,
		},
		[240790] = {
			["source"] = "Nether Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118044,
		},
		[251028] = {
			["source"] = "Eredar Soulbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127114,
		},
		[157355] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Voidseer Kalurg",
			["npcID"] = 83385,
		},
		[204448] = {
			["encounterName"] = "Skorpyron",
			["source"] = "Skorpyron",
			["encounterID"] = 1849,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102263,
		},
		[168105] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["npcID"] = 83892,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[378120] = {
			["source"] = "Unstable Rock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192799,
		},
		[376073] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[393478] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Penumbrus",
			["npcID"] = 189289,
		},
		[209568] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["source"] = "Expedient Elemental",
			["npcID"] = 105301,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1872,
		},
		[173737] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fungal Destroyer",
			["npcID"] = 87227,
		},
		[387337] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Therrocite",
			["npcID"] = 197749,
		},
		[241305] = {
			["source"] = "Razorjaw Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117154,
		},
		[172714] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Botani Greensworn",
			["npcID"] = 80696,
		},
		[396552] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[241306] = {
			["source"] = "Razorjaw Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117154,
		},
		[380174] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[375056] = {
			["encounterName"] = "Chargath, Bane of Scales",
			["source"] = "Chargath, Bane of Scales",
			["npcID"] = 189340,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2613,
		},
		[59575] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["encounterID"] = 2024,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24201,
		},
		[223392] = {
			["source"] = "Dire Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112153,
		},
		[394509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ruinous",
			["npcID"] = 193522,
		},
		[387343] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Therrocite",
			["npcID"] = 197749,
		},
		[189609] = {
			["source"] = "Maiev Shadowsong",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95041,
		},
		[222881] = {
			["source"] = "Shade of Akama",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111912,
		},
		[396559] = {
			["source"] = "Raszageth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199031,
		},
		[172718] = {
			["source"] = "Infected Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86215,
		},
		[214692] = {
			["source"] = "Gerenth the Vile",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107435,
		},
		[215204] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Vigilant Duskwatch",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104918,
		},
		[374038] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187767,
		},
		[241310] = {
			["source"] = "Fan'verg the Vicious",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 121030,
		},
		[172719] = {
			["source"] = "Infected Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86215,
		},
		[153268] = {
			["source"] = "Shadowmoon Exhumer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77700,
		},
		[161970] = {
			["source"] = "Deepmaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120022,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[373017] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[369946] = {
			["source"] = "Boneshaper Jardak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188693,
		},
		[375065] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186226,
		},
		[388374] = {
			["source"] = "Captured Raven",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191508,
		},
		[187565] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tainted Vine",
			["npcID"] = 114215,
		},
		[382233] = {
			["source"] = "Batak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193462,
		},
		[375068] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Lava Tentacles",
			["npcID"] = 190023,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2610,
		},
		[388377] = {
			["source"] = "Captured Raven",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191508,
		},
		[225445] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wheatizzle",
			["npcID"] = 112372,
		},
		[271670] = {
			["source"] = "Princess Talanji",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134092,
		},
		[167092] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cackling Pyromaniac",
			["npcID"] = 79510,
		},
		[253599] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clobex",
			["npcID"] = 127732,
		},
		[225446] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twirhp",
			["npcID"] = 112386,
		},
		[199341] = {
			["source"] = "Valarjar Trapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96934,
		},
		[55098] = {
			["encounterName"] = "Moorabi",
			["source"] = "Moorabi",
			["encounterID"] = 1980,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29305,
		},
		[225447] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scarab Lord Ahzesh",
			["npcID"] = 112335,
		},
		[221864] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["source"] = "Recursive Elemental",
			["npcID"] = 105299,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1872,
		},
		[255648] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Golganneth",
			["encounterID"] = 2092,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126268,
		},
		[244899] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Noura, Mother of Flames",
			["encounterID"] = 2073,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122468,
		},
		[388383] = {
			["source"] = "Imbu Waterseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191431,
		},
		[225448] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darragh",
			["npcID"] = 112414,
		},
		[149179] = {
			["source"] = "Grom'kar Grunt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 82047,
		},
		[239781] = {
			["source"] = "Ghostly Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120194,
		},
		[236710] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Kil'jaeden",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117269,
		},
		[225449] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jesibelle",
			["npcID"] = 112333,
		},
		[205486] = {
			["encounterName"] = "Star Augur Etraeus",
			["source"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1863,
		},
		[384291] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ayanga",
			["npcID"] = 192961,
		},
		[192178] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lyanis Moonfall",
			["npcID"] = 96755,
		},
		[217260] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Shaman",
			["npcID"] = 186679,
		},
		[378150] = {
			["source"] = "Primalist Magmashaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190186,
		},
		[375079] = {
			["source"] = "Squallbringer Cyraz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190370,
		},
		[149181] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grom'kar Grunt",
			["npcID"] = 82047,
		},
		[198833] = {
			["encounterName"] = "Lord Kur'talos Ravencrest",
			["source"] = "Latosius",
			["encounterID"] = 1835,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98970,
		},
		[166585] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Geomancer",
			["npcID"] = 78578,
		},
		[236712] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Priestess Lunaspyre",
			["npcID"] = 118518,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2050,
		},
		[392484] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Moskhoi",
			["npcID"] = 195093,
		},
		[221356] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Stardancer",
			["npcID"] = 111164,
		},
		[172728] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Creeping Vine",
			["npcID"] = 85538,
		},
		[59706] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23954,
		},
		[169657] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twisted Abomination",
			["npcID"] = 84767,
		},
		[373034] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Mudrunner",
			["npcID"] = 186690,
		},
		[392486] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[196787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel-Infused Fury",
			["npcID"] = 99956,
		},
		[382249] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185528,
		},
		[388392] = {
			["source"] = "Unruly Textbook",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196044,
		},
		[393511] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cauldronbearer Blakor",
			["npcID"] = 186783,
		},
		[378155] = {
			["encounterName"] = "Hackclaw's War-Band",
			["source"] = "Tricktotem",
			["encounterID"] = 2570,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186125,
		},
		[106856] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[149184] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grom'kar Grunt",
			["npcID"] = 82047,
		},
		[22883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Novice Timewalker",
			["npcID"] = 189583,
		},
		[202420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Xalian Felblaze",
			["npcID"] = 113555,
		},
		[398634] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200852,
		},
		[203956] = {
			["source"] = "Eredar Bonebreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127116,
		},
		[59835] = {
			["encounterName"] = "Loken",
			["source"] = "Loken",
			["encounterID"] = 1986,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28923,
		},
		[374066] = {
			["source"] = "Primalist Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190345,
		},
		[183482] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Harbormaster Korak",
			["npcID"] = 90094,
		},
		[389423] = {
			["source"] = "Thieving Conjurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196388,
		},
		[223921] = {
			["source"] = "Shade of Akama",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111912,
		},
		[377140] = {
			["source"] = "River Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191618,
		},
		[177341] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Noxious Sproutling",
			["npcID"] = 88729,
		},
		[373046] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[375094] = {
			["source"] = "Aggressive Hornstrider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193301,
		},
		[221875] = {
			["encounterName"] = "Star Augur Etraeus",
			["source"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1863,
		},
		[393523] = {
			["source"] = "Cracktooth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187528,
		},
		[223923] = {
			["source"] = "Corrupted Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112474,
		},
		[399666] = {
			["source"] = "Spellsworn Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200598,
		},
		[189116] = {
			["source"] = "Reanimated Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91860,
		},
		[393525] = {
			["source"] = "Ceeqa the Peacetaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188708,
		},
		[372027] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Embar Firepath",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187767,
		},
		[389431] = {
			["source"] = "Bazual",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193532,
		},
		[218806] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Solarist Tel'arn",
			["npcID"] = 109038,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[393527] = {
			["source"] = "Cracktooth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187528,
		},
		[371005] = {
			["source"] = "Crystal Thrasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196117,
		},
		[389433] = {
			["source"] = "Darktooth Spirit-Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195267,
		},
		[213688] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel Lord",
			["npcID"] = 107024,
		},
		[388410] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[385339] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[384316] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[389435] = {
			["source"] = "Darktooth Spirit-Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195267,
		},
		[387388] = {
			["source"] = "Thieving Conjurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196388,
		},
		[68982] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36502,
		},
		[374081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Godoloto",
			["npcID"] = 190022,
		},
		[173764] = {
			["source"] = "Infected Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86215,
		},
		[373059] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187771,
		},
		[394558] = {
			["source"] = "Unstable Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198577,
		},
		[404796] = {
			["source"] = "Freed Tauren Prisoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203204,
		},
		[223417] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grisly Trapper",
			["npcID"] = 112162,
		},
		[248499] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Argus the Unmaker",
			["encounterID"] = 2092,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124828,
		},
		[383298] = {
			["source"] = "Summoned Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 182815,
		},
		[3110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kupyap",
			["npcID"] = 416,
		},
		[175302] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Char the Burning",
			["npcID"] = 82311,
		},
		[389443] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196712,
		},
		[382277] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193457,
		},
		[395586] = {
			["source"] = "Spellforged Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194402,
		},
		[157387] = {
			["source"] = "Thunderlord Eagle-Eye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78962,
		},
		[393539] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Champion Choruk",
			["npcID"] = 186592,
		},
		[174791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ironwing Flamespitter",
			["npcID"] = 86373,
		},
		[393540] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zhurtan the Riverboiler",
			["npcID"] = 188687,
		},
		[387398] = {
			["source"] = "Worldbreaker Brute",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185589,
		},
		[165578] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["encounterID"] = 1679,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75452,
		},
		[389446] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Nullification Device",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196712,
		},
		[396613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[200898] = {
			["encounterName"] = "Inquisitor Tormentorum",
			["source"] = "Inquisitor Tormentorum",
			["npcID"] = 96015,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1850,
		},
		[396614] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Basilisk",
			["npcID"] = 191697,
		},
		[396615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sunscale Behemoth",
			["npcID"] = 193133,
		},
		[106864] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[157390] = {
			["source"] = "Thunderlord Packleader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78960,
		},
		[137427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nathanos Blightcaller",
			["npcID"] = 95852,
		},
		[158414] = {
			["source"] = "Commander Org'mok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89675,
		},
		[372047] = {
			["source"] = "Defier Draghar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187897,
		},
		[209602] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[395594] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zurgaz Corebreaker",
			["npcID"] = 193680,
		},
		[393547] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kraunot",
			["npcID"] = 186401,
		},
		[166605] = {
			["source"] = "Spiteleaf Stabber",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84656,
		},
		[200901] = {
			["encounterName"] = "Hyrja",
			["source"] = "Solsten",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97219,
		},
		[317791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[59839] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["encounterID"] = 1978,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29304,
		},
		[385359] = {
			["encounterName"] = "Gutshot",
			["source"] = "Gutshot",
			["encounterID"] = 2567,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186116,
		},
		[317792] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magus of the Dead",
			["npcID"] = 163366,
		},
		[384336] = {
			["source"] = "Nokhud Lancemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192800,
		},
		[393550] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kraunot",
			["npcID"] = 186401,
		},
		[144596] = {
			["source"] = "Gom",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 71959,
		},
		[167119] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadsting Lurker",
			["npcID"] = 95951,
		},
		[387410] = {
			["source"] = "Weaponmaster Vordak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186219,
		},
		[368983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Inferno",
			["npcID"] = 194095,
		},
		[387411] = {
			["source"] = "Soulharvester Tumen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195929,
		},
		[368984] = {
			["source"] = "Dragonbane Firebinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186605,
		},
		[372056] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187772,
		},
		[68988] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["encounterID"] = 2006,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36497,
		},
		[241343] = {
			["source"] = "Kelpfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120021,
		},
		[403794] = {
			["source"] = "Duzalgor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200610,
		},
		[239808] = {
			["source"] = "Eternal Soulguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120191,
		},
		[396629] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Elusive Prime Salamanther",
			["npcID"] = 194062,
		},
		[173265] = {
			["source"] = "Amorph Annihilator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86620,
		},
		[393559] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gethrel the South Wind",
			["npcID"] = 193848,
		},
		[241345] = {
			["source"] = "Defensive Countermeasure",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120449,
		},
		[239810] = {
			["source"] = "Eternal Soulguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120191,
		},
		[250048] = {
			["encounterName"] = "The Defense of Eonar",
			["source"] = "Essence of Eonar",
			["encounterID"] = 2075,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122500,
		},
		[152792] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[54850] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Colossus",
			["encounterID"] = 1983,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29307,
		},
		[204492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jandvik Bonepiercer",
			["npcID"] = 100948,
		},
		[382303] = {
			["encounterName"] = "Bromach",
			["source"] = "Bromach",
			["npcID"] = 184018,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2556,
		},
		[384351] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["npcID"] = 189719,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2615,
		},
		[381280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Uktulut Trainee",
			["npcID"] = 193203,
		},
		[394591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tombcaller Ganzaya",
			["npcID"] = 188509,
		},
		[396640] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Ancient Branch",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196548,
		},
		[389474] = {
			["source"] = "Frozion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193655,
		},
		[154331] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grove Cultivator Kados",
			["npcID"] = 133104,
		},
		[387427] = {
			["source"] = "Arcane Commander",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190776,
		},
		[389477] = {
			["source"] = "Rouen Icewind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193682,
		},
		[193235] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[169689] = {
			["source"] = "Kirox the Wind Dancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87656,
		},
		[389478] = {
			["source"] = "Darktooth Spirit-Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195267,
		},
		[376170] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[396646] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[252614] = {
			["source"] = "Flameweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127233,
		},
		[387433] = {
			["source"] = "Teerai Battlemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191494,
		},
		[385386] = {
			["source"] = "Menial Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192702,
		},
		[386410] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[169179] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["npcID"] = 83846,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[386411] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[378222] = {
			["source"] = "Cliffside Bullyswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198419,
		},
		[399721] = {
			["source"] = "Spellsworn Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200598,
		},
		[384365] = {
			["source"] = "Nokhud Lancemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192800,
		},
		[150753] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1653,
		},
		[384366] = {
			["source"] = "Doventhal the Chosen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186163,
		},
		[385390] = {
			["source"] = "Forge-Keep Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192700,
		},
		[152801] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[173788] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twisted Ancient",
			["npcID"] = 72785,
		},
		[60227] = {
			["source"] = "Dragonflayer Strategist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23956,
		},
		[389487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lookout Mordren",
			["npcID"] = 193668,
		},
		[387440] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195878,
		},
		[389488] = {
			["source"] = "Kerzanthi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196973,
		},
		[207573] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Ysondre",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102679,
		},
		[150755] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["npcID"] = 74790,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1654,
		},
		[393584] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gladehorn Armoredon",
			["npcID"] = 196555,
		},
		[372087] = {
			["source"] = "Defier Draghar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187897,
		},
		[374135] = {
			["source"] = "Highhorn Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194962,
		},
		[183005] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forsaken Bat-Rider",
			["npcID"] = 93687,
		},
		[222932] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Gorroc",
			["npcID"] = 111856,
		},
		[207064] = {
			["source"] = "Hatecoil Harpooner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107447,
		},
		[376186] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Overseer Lahar",
			["npcID"] = 189235,
		},
		[389496] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[191709] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grumpus",
			["npcID"] = 96448,
		},
		[372093] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Fire Elemental",
			["npcID"] = 191110,
		},
		[393592] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gethrel the South Wind",
			["npcID"] = 193848,
		},
		[392569] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[396665] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[387453] = {
			["source"] = "Professor Maxdormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189668,
		},
		[394620] = {
			["source"] = "Withering Writhebark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197366,
		},
		[392574] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[394622] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197131,
		},
		[384385] = {
			["source"] = "Prowling Frigidpelt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193062,
		},
		[392576] = {
			["source"] = "Tempest Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198047,
		},
		[172774] = {
			["source"] = "Icecrag Mountainbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87346,
		},
		[395648] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sogglmoggl",
			["npcID"] = 188859,
		},
		[12470] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magma Elemental",
			["npcID"] = 77988,
		},
		[399744] = {
			["source"] = "Spellsworn Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200598,
		},
		[395650] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Conjured Nightmare",
			["npcID"] = 199014,
		},
		[222939] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian Gorroc",
			["npcID"] = 111856,
		},
		[157931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Magus",
			["npcID"] = 76263,
		},
		[374152] = {
			["source"] = "Hungry Muckjaw Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197815,
		},
		[399746] = {
			["source"] = "Warp Crystal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201082,
		},
		[376200] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgewrought Monstrosity",
			["npcID"] = 194816,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2612,
		},
		[395652] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sogglmoggl",
			["npcID"] = 188859,
		},
		[184038] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Diretusk Piglet",
			["npcID"] = 92875,
		},
		[22121] = {
			["source"] = "Timberstep Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194041,
		},
		[152814] = {
			["source"] = "Shadowmoon Bone-Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75713,
		},
		[56775] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Magus",
			["npcID"] = 26722,
		},
		[393607] = {
			["source"] = "Bloodclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187553,
		},
		[389514] = {
			["source"] = "Bazual",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193532,
		},
		[216800] = {
			["source"] = "Thistleleaf Ruffian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91474,
		},
		[9591] = {
			["source"] = "Burrowing Leyworm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106630,
		},
		[345495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Frothing Pustule",
			["npcID"] = 175519,
		},
		[376208] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2559,
		},
		[196838] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99868,
		},
		[212707] = {
			["encounterName"] = "Elerethe Renferal",
			["source"] = "Elerethe Renferal",
			["encounterID"] = 1876,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106087,
		},
		[152818] = {
			["source"] = "Shadowmoon Bone-Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75713,
		},
		[393615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntmaster Amaa",
			["npcID"] = 188715,
		},
		[394639] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skewersnout",
			["npcID"] = 193181,
		},
		[164592] = {
			["source"] = "Bloodmaul Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75198,
		},
		[242909] = {
			["encounterName"] = "Goroth",
			["source"] = "Infernal Chaosbringer",
			["npcID"] = 118022,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2032,
		},
		[198888] = {
			["source"] = "Storm Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97068,
		},
		[394641] = {
			["source"] = "Frostfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192030,
		},
		[396689] = {
			["source"] = "Worldcarver A'tir",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186859,
		},
		[369049] = {
			["encounterName"] = "Emberon",
			["source"] = "Vault Keeper",
			["npcID"] = 186107,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2558,
		},
		[154356] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Soulpriest",
			["npcID"] = 76595,
		},
		[369050] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Stormsage",
			["npcID"] = 193750,
		},
		[252637] = {
			["source"] = "Slobbering Fiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126776,
		},
		[395670] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[169714] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarlroot",
			["npcID"] = 81984,
		},
		[170738] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Undermage Kesalon",
			["npcID"] = 85496,
		},
		[387481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brinetooth Bruiser",
			["npcID"] = 187285,
		},
		[385434] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[369055] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonbane Mender",
			["npcID"] = 186602,
		},
		[150776] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["npcID"] = 74790,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1654,
		},
		[125056] = {
			["source"] = "Ghostfeather",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 165189,
		},
		[164597] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Geomancer",
			["npcID"] = 75198,
		},
		[389532] = {
			["source"] = "Giant Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194588,
		},
		[395675] = {
			["source"] = "Embar Firepath",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187767,
		},
		[200429] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Leystone Basilisk",
			["npcID"] = 104877,
		},
		[375201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Untamed Stormwing",
			["npcID"] = 191588,
		},
		[398749] = {
			["source"] = "Irontide Bulwark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200850,
		},
		[397726] = {
			["source"] = "Shrieking Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187159,
		},
		[385442] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[393634] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rakkesh of the Flow",
			["npcID"] = 193849,
		},
		[174328] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soulbinder Nyami",
			["npcID"] = 76177,
		},
		[396709] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gutchewer Bear",
			["npcID"] = 197134,
		},
		[378282] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Thaumaturge",
			["npcID"] = 192788,
		},
		[30633] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Protector",
			["npcID"] = 26792,
		},
		[161533] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mandragora Lifedrinker",
			["npcID"] = 80699,
		},
		[244969] = {
			["encounterName"] = "Garothi Worldbreaker",
			["source"] = "Garothi Worldbreaker",
			["encounterID"] = 2076,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122450,
		},
		[381357] = {
			["source"] = "Hunting Ottuk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190267,
		},
		[246505] = {
			["source"] = "Fanatical Pyromancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127724,
		},
		[374192] = {
			["source"] = "Hungry Muckjaw Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197815,
		},
		[405929] = {
			["source"] = "Spellsworn Crecheguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203368,
		},
		[396717] = {
			["source"] = "Cyclas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199029,
		},
		[387504] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[251626] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Clubfist Beastlord",
			["npcID"] = 126767,
		},
		[340412] = {
			["source"] = "Forgotten Research",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202446,
		},
		[195320] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drogbar Manathirster",
			["npcID"] = 95866,
		},
		[395695] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sleeping Whelp",
			["npcID"] = 196073,
		},
		[388529] = {
			["source"] = "Seabreaker Skrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192931,
		},
		[61515] = {
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[197880] = {
			["source"] = "Bonespeaker Runeaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 93066,
		},
		[340414] = {
			["source"] = "Forgotten Research",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202446,
		},
		[372151] = {
			["source"] = "Gutchewer Bear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186284,
		},
		[377270] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mesmerized Healer",
			["npcID"] = 195961,
		},
		[370104] = {
			["source"] = "Qalashi Metalshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190767,
		},
		[398770] = {
			["source"] = "Vemormu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200701,
		},
		[385462] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rellen, The Learned",
			["npcID"] = 190949,
		},
		[394676] = {
			["source"] = "Council Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198501,
		},
		[60236] = {
			["source"] = "Storming Vortex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28547,
		},
		[388535] = {
			["source"] = "Gnawbone Chainchewer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196521,
		},
		[388537] = {
			["encounterName"] = "Vexamus",
			["source"] = "Vexamus",
			["encounterID"] = 2562,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194181,
		},
		[250095] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Torment of Aman'Thul",
			["npcID"] = 125837,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2073,
		},
		[394680] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Reclaimer Makko",
			["npcID"] = 191536,
		},
		[215288] = {
			["encounterName"] = "Elerethe Renferal",
			["source"] = "Elerethe Renferal",
			["encounterID"] = 1876,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106087,
		},
		[391610] = {
			["source"] = "Gusting Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190401,
		},
		[395707] = {
			["source"] = "Raszageth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199031,
		},
		[114571] = {
			["encounterName"] = "Lorewalker Stonestep",
			["source"] = "Strife",
			["encounterID"] = 1417,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59051,
		},
		[391613] = {
			["source"] = "Subterranean Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190404,
		},
		[376257] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Tarasek Earthreaver",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191225,
		},
		[398780] = {
			["source"] = "Farscale Myrmidon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200485,
		},
		[164615] = {
			["source"] = "Bloodmaul Flamespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81767,
		},
		[388544] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[392640] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[246516] = {
			["encounterName"] = "Kin'garoth",
			["source"] = "Kin'garoth",
			["npcID"] = 122578,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2088,
		},
		[164617] = {
			["source"] = "Bloodmaul Flamespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 81767,
		},
		[389572] = {
			["source"] = "Time-Lost Devilsaur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187262,
		},
		[126346] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grom'kar Grimshot",
			["npcID"] = 84340,
		},
		[396739] = {
			["source"] = "Gargantuan Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191606,
		},
		[178951] = {
			["source"] = "Gluttonous Giant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88159,
		},
		[387528] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthbound Primalist",
			["npcID"] = 193795,
		},
		[382410] = {
			["source"] = "Trickclaw Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185528,
		},
		[402888] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200681,
		},
		[178442] = {
			["source"] = "Infected Mechanic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89144,
		},
		[386509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ezrigeth",
			["npcID"] = 187666,
		},
		[187656] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felskorn Chosen",
			["npcID"] = 97851,
		},
		[373201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Windyfin Skybasher",
			["npcID"] = 187431,
		},
		[375249] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whitecrested Waddler",
			["npcID"] = 196240,
		},
		[178955] = {
			["source"] = "Gluttonous Giant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88159,
		},
		[389583] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonspawn Spell Weaver",
			["npcID"] = 196119,
		},
		[375251] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["npcID"] = 181861,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2610,
		},
		[396751] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Moth'go Deeploom",
			["npcID"] = 193735,
		},
		[369110] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["npcID"] = 184422,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2558,
		},
		[70043] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["encounterID"] = 2006,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36497,
		},
		[391634] = {
			["source"] = "Glacial Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190403,
		},
		[394706] = {
			["source"] = "Unstable Frost",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198702,
		},
		[199433] = {
			["source"] = "Stormfang Bonecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187931,
		},
		[224515] = {
			["source"] = "Nobleborn Warpcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112676,
		},
		[404945] = {
			["source"] = "Winglord Iyazael",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199401,
		},
		[200969] = {
			["source"] = "King Tor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97084,
		},
		[390613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snarglebone",
			["npcID"] = 197344,
		},
		[55633] = {
			["source"] = "Drakkari Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29832,
		},
		[384471] = {
			["source"] = "Magma Skitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196758,
		},
		[393686] = {
			["source"] = "Turboris",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187886,
		},
		[158997] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goren Burrower",
			["npcID"] = 82336,
		},
		[384474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skewersnout",
			["npcID"] = 193181,
		},
		[397783] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56448,
		},
		[392665] = {
			["source"] = "Time-Lost Thunderhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187258,
		},
		[383452] = {
			["source"] = "Snowscruff Bakar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193401,
		},
		[384476] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[247041] = {
			["source"] = "Seereel, the Spring",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193710,
		},
		[187664] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Supreme Lord Kazzak",
			["npcID"] = 94015,
		},
		[386526] = {
			["source"] = "Nullmagic Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187246,
		},
		[381408] = {
			["source"] = "Shiverweb Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192591,
		},
		[219913] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Violent Crageater",
			["npcID"] = 95916,
		},
		[209676] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[392671] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vicious Ice Borer",
			["npcID"] = 186392,
		},
		[390624] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Snarglebone",
			["npcID"] = 197344,
		},
		[376292] = {
			["encounterName"] = "Chrono-Lord Deios",
			["source"] = "Chrono-Lord Deios",
			["npcID"] = 184125,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2559,
		},
		[382435] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[235271] = {
			["encounterName"] = "Maiden of Vigilance",
			["source"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118289,
		},
		[248068] = {
			["encounterName"] = "Imonar the Soulhunter",
			["source"] = "Imonar the Soulhunter",
			["npcID"] = 124158,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2082,
		},
		[33624] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Undercity Mage",
			["npcID"] = 18971,
		},
		[369129] = {
			["source"] = "Modak Flamespit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186509,
		},
		[372201] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Irontorch",
			["npcID"] = 189464,
		},
		[248070] = {
			["encounterName"] = "Imonar the Soulhunter",
			["source"] = "Imonar the Soulhunter",
			["npcID"] = 124158,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2082,
		},
		[387559] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[196883] = {
			["source"] = "Lord Etheldrin Ravencrest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98521,
		},
		[396774] = {
			["source"] = "Primal Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190996,
		},
		[224525] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Butchie",
			["npcID"] = 112365,
		},
		[396775] = {
			["source"] = "Primal Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190996,
		},
		[403943] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200904,
		},
		[392682] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jadzigeth",
			["npcID"] = 188447,
		},
		[397801] = {
			["encounterName"] = "Wise Mari",
			["source"] = "Wise Mari",
			["encounterID"] = 1418,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56448,
		},
		[387564] = {
			["source"] = "Conjured Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196102,
		},
		[384493] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shikaar Hunter",
			["npcID"] = 184657,
		},
		[385517] = {
			["source"] = "Rotbow Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195222,
		},
		[394731] = {
			["source"] = "Unstable Earth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198709,
		},
		[224527] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scarab Lord Hamlet",
			["npcID"] = 112358,
		},
		[175899] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorian Runemaster",
			["npcID"] = 81272,
		},
		[185113] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thistleleaf Menace",
			["npcID"] = 91472,
		},
		[395756] = {
			["source"] = "Qalashi Flameslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196336,
		},
		[396780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Subjugator",
			["npcID"] = 195837,
		},
		[198934] = {
			["source"] = "Valarjar Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95834,
		},
		[392686] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Moskhoi",
			["npcID"] = 195093,
		},
		[53333] = {
			["encounterName"] = "Hadronox",
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Necromancer",
			["npcID"] = 29064,
		},
		[386546] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186741,
		},
		[178461] = {
			["source"] = "Amorphic Cognitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86144,
		},
		[158498] = {
			["source"] = "Darting Swift Feather",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84013,
		},
		[391666] = {
			["source"] = "Honmor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193704,
		},
		[225042] = {
			["source"] = "Corrupted Feeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113088,
		},
		[396786] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Controller",
			["npcID"] = 191654,
		},
		[381430] = {
			["source"] = "Agitated Keystone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189811,
		},
		[382454] = {
			["source"] = "Azure Dragonspawn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188802,
		},
		[395763] = {
			["source"] = "Qalashi Flameslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196336,
		},
		[225043] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Terrace Grove-Tender",
			["npcID"] = 112603,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[243983] = {
			["encounterName"] = "Portal Keeper Hasabel",
			["source"] = "Portal Keeper Hasabel",
			["encounterID"] = 2064,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122104,
		},
		[216342] = {
			["source"] = "Koralune Ettin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 99791,
		},
		[393718] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntmaster Amaa",
			["npcID"] = 188715,
		},
		[392695] = {
			["source"] = "Rymek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188846,
		},
		[372222] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[385531] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[386555] = {
			["source"] = "Dathea Stormlash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187768,
		},
		[372223] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonetender",
			["npcID"] = 189265,
		},
		[239379] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Huntress Kasparian",
			["npcID"] = 118523,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2050,
		},
		[381438] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hissing Springsoul",
			["npcID"] = 191712,
		},
		[15801] = {
			["source"] = "Thundercall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87102,
		},
		[375296] = {
			["source"] = "Skulking Bruiser",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196384,
		},
		[372225] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonesplitter",
			["npcID"] = 189467,
		},
		[377344] = {
			["source"] = "Territorial Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192329,
		},
		[372226] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonetender",
			["npcID"] = 189265,
		},
		[386559] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[257296] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Argus the Unmaker",
			["npcID"] = 124828,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[192288] = {
			["encounterName"] = "Hyrja",
			["source"] = "Olmyr the Enlightened",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97202,
		},
		[369157] = {
			["source"] = "Unruly Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196383,
		},
		[57046] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[387585] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["npcID"] = 189729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[278044] = {
			["source"] = "Morlash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201549,
		},
		[198944] = {
			["source"] = "Valarjar Shieldmaiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95832,
		},
		[158506] = {
			["source"] = "Windroc",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 79398,
		},
		[193826] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[393731] = {
			["source"] = "Flayfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187505,
		},
		[140592] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tideskorn Huntress",
			["npcID"] = 100446,
		},
		[392709] = {
			["source"] = "Rymek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188846,
		},
		[383496] = {
			["source"] = "Strunraan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193534,
		},
		[396805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karkidan",
			["npcID"] = 193725,
		},
		[56919] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horde Cleric",
			["npcID"] = 26803,
		},
		[382474] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[159021] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Durag the Dominator",
			["npcID"] = 77890,
		},
		[396807] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karkidan",
			["npcID"] = 193725,
		},
		[395784] = {
			["source"] = "Raszageth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199031,
		},
		[154415] = {
			["encounterName"] = "Soulbinder Nyami",
			["source"] = "Soulbinder Nyami",
			["npcID"] = 76177,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1685,
		},
		[384524] = {
			["encounterName"] = "Watcher Irideus",
			["source"] = "Watcher Irideus",
			["encounterID"] = 2615,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189719,
		},
		[250648] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Thu'raya, Mother of the Cosmos",
			["npcID"] = 125436,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2073,
		},
		[387596] = {
			["source"] = "Risen Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195877,
		},
		[58967] = {
			["source"] = "Drakkari Battle Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29836,
		},
		[249113] = {
			["encounterName"] = "Felhounds of Sargeras",
			["source"] = "F'harg",
			["encounterID"] = 2074,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122477,
		},
		[396812] = {
			["source"] = "Spellbound Scepter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196576,
		},
		[385551] = {
			["encounterName"] = "Gulping Goliath",
			["source"] = "Gulping Goliath",
			["encounterID"] = 2616,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189722,
		},
		[249114] = {
			["source"] = "Garothi Worldbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122450,
		},
		[388623] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[396814] = {
			["source"] = "Rimebound Controller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195836,
		},
		[385553] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Stormseeker Acolyte",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194990,
		},
		[208165] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[370198] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kauj",
			["npcID"] = 186386,
		},
		[153395] = {
			["source"] = "Carrion Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76057,
		},
		[150324] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Ruination",
			["npcID"] = 74570,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1655,
		},
		[372247] = {
			["source"] = "Duskpaw Hidestitcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187941,
		},
		[189227] = {
			["source"] = "Crawliac Cinderwitch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95174,
		},
		[384533] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Tuskarr Hero",
			["npcID"] = 194731,
		},
		[396819] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vorgan the Mangler",
			["npcID"] = 190467,
		},
		[385558] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[169265] = {
			["encounterName"] = "Yalnu",
			["source"] = "Yalnu",
			["npcID"] = 83846,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[243999] = {
			["encounterName"] = "Varimathras",
			["source"] = "Varimathras",
			["encounterID"] = 2069,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122366,
		},
		[17843] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Novice Timewalker",
			["npcID"] = 189583,
		},
		[393750] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taresh",
			["npcID"] = 188711,
		},
		[117665] = {
			["encounterName"] = "Sha of Doubt",
			["source"] = "Sha of Doubt",
			["encounterID"] = 1439,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56439,
		},
		[244000] = {
			["encounterName"] = "Portal Keeper Hasabel",
			["source"] = "Portal Keeper Hasabel",
			["npcID"] = 122104,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2064,
		},
		[396823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vorgan the Mangler",
			["npcID"] = 190467,
		},
		[378397] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Earthshard",
			["npcID"] = 185647,
		},
		[159030] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Burning Slagmaw",
			["npcID"] = 72348,
		},
		[388635] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Volatile Spark",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194999,
		},
		[373279] = {
			["source"] = "Thing From Beyond",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189988,
		},
		[375327] = {
			["source"] = "Subterranean Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190404,
		},
		[166197] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Bonecrusher",
			["npcID"] = 77995,
		},
		[249121] = {
			["encounterName"] = "The Defense of Eonar",
			["source"] = "The Paraxis",
			["encounterID"] = 2075,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124445,
		},
		[269882] = {
			["source"] = "Stormwind Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134195,
		},
		[387614] = {
			["source"] = "Ukhel Deathspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195851,
		},
		[392733] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Springshell Snapper",
			["npcID"] = 196619,
		},
		[392734] = {
			["source"] = "Sundered Pillager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199374,
		},
		[370212] = {
			["source"] = "Qalashi Wallcrasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187813,
		},
		[375331] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187768,
		},
		[385569] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[376356] = {
			["source"] = "Scout Watu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190025,
		},
		[387618] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primalist Infuser",
			["npcID"] = 196043,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2618,
		},
		[372262] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonesplitter",
			["npcID"] = 189467,
		},
		[388643] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[17140] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jesibelle",
			["npcID"] = 112333,
		},
		[377383] = {
			["source"] = "Alpha Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192333,
		},
		[195378] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rippling Lifefury",
			["npcID"] = 95869,
		},
		[175415] = {
			["source"] = "Gibblette the Cowardly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87352,
		},
		[192307] = {
			["encounterName"] = "Hyrja",
			["source"] = "Hyrja",
			["encounterID"] = 1806,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95833,
		},
		[385574] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[396836] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Colossal Glacier",
			["npcID"] = 194798,
		},
		[198962] = {
			["source"] = "Valarjar Runecarver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96664,
		},
		[191284] = {
			["encounterName"] = "Hymdall",
			["source"] = "Hymdall",
			["encounterID"] = 1805,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 94960,
		},
		[206641] = {
			["encounterName"] = "Trilliax",
			["source"] = "Trilliax",
			["encounterID"] = 1867,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104288,
		},
		[369197] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zhurtan the Riverboiler",
			["npcID"] = 188687,
		},
		[212784] = {
			["source"] = "Watchful Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105715,
		},
		[385578] = {
			["encounterName"] = "Azureblade",
			["source"] = "Azureblade",
			["encounterID"] = 2585,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186739,
		},
		[395816] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Wallcrasher",
			["npcID"] = 187813,
		},
		[377389] = {
			["source"] = "Alpha Eagle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192333,
		},
		[378413] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Fury",
			["npcID"] = 191111,
		},
		[9532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magula",
			["npcID"] = 91130,
		},
		[391723] = {
			["source"] = "Flamegullet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197697,
		},
		[166205] = {
			["source"] = "Bloodmaul Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 77995,
		},
		[394795] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molka The Grinder",
			["npcID"] = 193443,
		},
		[387629] = {
			["source"] = "Desecrated Ohuna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195876,
		},
		[393772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hihveer",
			["npcID"] = 188717,
		},
		[169277] = {
			["source"] = "Sargerei Destructor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84337,
		},
		[191288] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crashin' Thrashin' Flamer",
			["npcID"] = 76640,
		},
		[391726] = {
			["source"] = "Thunderhead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197698,
		},
		[384561] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tapionnuq",
			["npcID"] = 194731,
		},
		[375348] = {
			["source"] = "Gusting Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190401,
		},
		[394800] = {
			["source"] = "Council Earthcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198500,
		},
		[191290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crashin' Thrashin' Flamer",
			["npcID"] = 76640,
		},
		[372279] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187768,
		},
		[225586] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twirhp",
			["npcID"] = 112386,
		},
		[394802] = {
			["source"] = "Council Stormcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198502,
		},
		[375351] = {
			["source"] = "Glacial Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190403,
		},
		[231729] = {
			["encounterName"] = "Harjatan",
			["source"] = "Razorjaw Wavemender",
			["encounterID"] = 2036,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116569,
		},
		[392757] = {
			["source"] = "Stormbound Proto-Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195094,
		},
		[389686] = {
			["source"] = "Crystal Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187160,
		},
		[224564] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Moon Guard Acolyte",
			["npcID"] = 113988,
		},
		[377402] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[396854] = {
			["source"] = "Brutal Motivator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184453,
		},
		[397878] = {
			["source"] = "Corrupt Living Water",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59873,
		},
		[208697] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Deathglare Tentacle",
			["encounterID"] = 1873,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105322,
		},
		[378428] = {
			["source"] = "Primal Avalanche",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187082,
		},
		[396856] = {
			["source"] = "Firava the Rekindler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195915,
		},
		[395833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mara'nar the Thunderous",
			["npcID"] = 196913,
		},
		[397881] = {
			["source"] = "Corrupt Living Water",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59873,
		},
		[390715] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[395834] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonebolt Hunter",
			["npcID"] = 197121,
		},
		[54878] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Elemental",
			["encounterID"] = 1983,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29573,
		},
		[59357] = {
			["encounterName"] = "Hadronox",
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Shadowcaster",
			["npcID"] = 28733,
		},
		[396861] = {
			["source"] = "Arcane Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190779,
		},
		[374339] = {
			["source"] = "Refti Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190340,
		},
		[157001] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Durag the Dominator",
			["npcID"] = 77890,
		},
		[397886] = {
			["source"] = "Corrupt Droplet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 62358,
		},
		[154442] = {
			["encounterName"] = "Ner'zhul",
			["source"] = "Ner'zhul",
			["encounterID"] = 1682,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76407,
		},
		[167239] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grom'kar Deadeye",
			["npcID"] = 85973,
		},
		[394816] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vorgan the Mangler",
			["npcID"] = 190467,
		},
		[393793] = {
			["source"] = "Hacklung",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187752,
		},
		[183108] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Larivi",
			["npcID"] = 192747,
		},
		[397889] = {
			["source"] = "Fallen Waterspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200126,
		},
		[374343] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[387652] = {
			["source"] = "Summoned Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195033,
		},
		[29427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Priestess of Elune",
			["npcID"] = 100162,
		},
		[392773] = {
			["source"] = "Rymek",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188846,
		},
		[397892] = {
			["source"] = "Imacu'tya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104275,
		},
		[9053] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Seasoned Magister",
			["npcID"] = 22863,
		},
		[387657] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stoneheart",
			["npcID"] = 187387,
		},
		[377421] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amberfur Prowler",
			["npcID"] = 187455,
		},
		[387659] = {
			["source"] = "Tevgai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195132,
		},
		[397897] = {
			["source"] = "Jazshariu",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104273,
		},
		[376399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Proto-Drake",
			["npcID"] = 192188,
		},
		[382542] = {
			["source"] = "Ice Burrower",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190319,
		},
		[204100] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Taerar",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102681,
		},
		[59359] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'ar Venomancer",
			["npcID"] = 29217,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1973,
		},
		[397899] = {
			["source"] = "Sha-Touched Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200131,
		},
		[239932] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Kil'jaeden",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117269,
		},
		[370259] = {
			["source"] = "Char",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190991,
		},
		[381521] = {
			["source"] = "Encroaching Downpour",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191324,
		},
		[386640] = {
			["source"] = "Tarasek Looter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187242,
		},
		[69051] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36502,
		},
		[395855] = {
			["source"] = "Gargantuan Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191606,
		},
		[372310] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wrathful Chill",
			["npcID"] = 197754,
		},
		[397904] = {
			["source"] = "Sha-Touched Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200131,
		},
		[394833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Battleseared Magmatusk",
			["npcID"] = 196772,
		},
		[395857] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Stonemender",
			["npcID"] = 187600,
		},
		[372311] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Trainee",
			["npcID"] = 189266,
		},
		[381525] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[246589] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Keeper",
			["npcID"] = 123532,
		},
		[197961] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[384597] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Warden",
			["npcID"] = 193293,
		},
		[369241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Searing Flame Harchek",
			["npcID"] = 191476,
		},
		[395859] = {
			["source"] = "Haunting Sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59555,
		},
		[69564] = {
			["source"] = "Soulguard Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36620,
		},
		[397907] = {
			["source"] = "Baalgar the Watchful",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104274,
		},
		[374361] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[395860] = {
			["source"] = "Gargantuan Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191606,
		},
		[372315] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Kadros Icewrath",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187771,
		},
		[157013] = {
			["source"] = "Thunderlord Eagle-Eye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78962,
		},
		[388696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Moth'go Deeploom",
			["npcID"] = 193735,
		},
		[381530] = {
			["source"] = "Nokhud Thunderfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193373,
		},
		[374364] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[375388] = {
			["source"] = "Primalist Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196193,
		},
		[374365] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["npcID"] = 181861,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2610,
		},
		[173906] = {
			["source"] = "Mok'gol Wolfsong",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86659,
		},
		[397914] = {
			["source"] = "Depraved Mistweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200137,
		},
		[179538] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Spitespeaker",
			["npcID"] = 89025,
		},
		[389725] = {
			["source"] = "Bazual",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193532,
		},
		[59617] = {
			["source"] = "Dragonflayer Runecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23960,
		},
		[163671] = {
			["source"] = "Nar'thalas Nightwatcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88782,
		},
		[381537] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vicious Ice Borer",
			["npcID"] = 186392,
		},
		[382561] = {
			["source"] = "Snowhide Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189654,
		},
		[68799] = {
			["source"] = "Apothecary Frye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36272,
		},
		[395871] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Stonemender",
			["npcID"] = 187600,
		},
		[209741] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Image of Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105754,
		},
		[395872] = {
			["source"] = "The Talking Fish",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59546,
		},
		[388706] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Turbulent Gust",
			["npcID"] = 186917,
		},
		[174422] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Breaker Ritualist",
			["npcID"] = 86330,
		},
		[387683] = {
			["source"] = "Ezralor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188755,
		},
		[386660] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[185684] = {
			["source"] = "7th Legion Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134083,
		},
		[377447] = {
			["source"] = "Osoria",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192220,
		},
		[69056] = {
			["source"] = "Soulguard Watchman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36478,
		},
		[59362] = {
			["encounterName"] = "Hadronox",
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Webspinner",
			["npcID"] = 29335,
		},
		[371306] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186741,
		},
		[236361] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Fallen Priestess",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118729,
		},
		[376426] = {
			["source"] = "Summoned Ripple",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192463,
		},
		[393830] = {
			["source"] = "Gragza the Dragon-Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191507,
		},
		[395878] = {
			["source"] = "The Talking Fish",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59546,
		},
		[390760] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chief Grrlgllmesh",
			["npcID"] = 186678,
		},
		[204114] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felguard",
			["npcID"] = 113149,
		},
		[157534] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hatecoil Spitespeaker",
			["npcID"] = 89025,
		},
		[384620] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[165213] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Tender",
			["npcID"] = 81985,
		},
		[388716] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[371313] = {
			["source"] = "Destructive Flames",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188174,
		},
		[396907] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Yu'lon",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56762,
		},
		[397931] = {
			["source"] = "Minion of Doubt",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 57109,
		},
		[384623] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Blacksmith",
			["npcID"] = 189471,
		},
		[391791] = {
			["source"] = "Water Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188413,
		},
		[373364] = {
			["source"] = "Gerenth the Vile",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107435,
		},
		[382578] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Guardian",
			["npcID"] = 184131,
		},
		[391793] = {
			["source"] = "Water Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188413,
		},
		[169823] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spore Image",
			["npcID"] = 84983,
		},
		[386675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Novice Timewalker",
			["npcID"] = 189583,
		},
		[188763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Araxxas",
			["npcID"] = 92419,
		},
		[239439] = {
			["source"] = "Eonic Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120153,
		},
		[58980] = {
			["source"] = "Drakkari Medicine Man",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29826,
		},
		[169825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Addled Arcanomancer",
			["npcID"] = 84990,
		},
		[394869] = {
			["source"] = "Boneshaper Jardak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188693,
		},
		[391798] = {
			["source"] = "Rebel Incinerator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195062,
		},
		[391799] = {
			["source"] = "Wilted Oak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197131,
		},
		[56933] = {
			["encounterName"] = "Frozen Commander",
			["source"] = "Horde Ranger",
			["npcID"] = 26801,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 519,
		},
		[375420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wildwater Timbertooth",
			["npcID"] = 193405,
		},
		[375422] = {
			["source"] = "Im'bunata",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196199,
		},
		[387708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Disoriented Watcher",
			["npcID"] = 187745,
		},
		[174947] = {
			["source"] = "Sargerei Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84094,
		},
		[205660] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Observant Inquisitor",
			["npcID"] = 107449,
		},
		[377473] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[370307] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[396925] = {
			["source"] = "Qalashi Lavamancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197149,
		},
		[217434] = {
			["source"] = "Suramar Shieldguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107567,
		},
		[382593] = {
			["source"] = "Cruel Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186206,
		},
		[381570] = {
			["source"] = "Agitated Keystone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189811,
		},
		[163176] = {
			["source"] = "Iron Horde Battlebeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78364,
		},
		[405117] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[152427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magma Lord",
			["npcID"] = 75211,
		},
		[152939] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["npcID"] = 75786,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1652,
		},
		[255826] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Argus the Unmaker",
			["npcID"] = 124828,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[162665] = {
			["source"] = "Grom'kar Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90399,
		},
		[382597] = {
			["source"] = "Frost Shackler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190993,
		},
		[152940] = {
			["encounterName"] = "Roltall",
			["source"] = "Roltall",
			["npcID"] = 75786,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1652,
		},
		[360075] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magically Regulated Automa Core",
			["npcID"] = 182210,
		},
		[393859] = {
			["source"] = "Skittering Woodborer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189762,
		},
		[390788] = {
			["source"] = "Chief Grrlgllmesh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186678,
		},
		[388741] = {
			["source"] = "Ukhel Gravestirrer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189928,
		},
		[381575] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rustpine Immolator",
			["npcID"] = 187396,
		},
		[386694] = {
			["source"] = "Stormsurge Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194897,
		},
		[388743] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Bakar",
			["npcID"] = 188510,
		},
		[398981] = {
			["source"] = "Stalwart Broodwarden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198263,
		},
		[244056] = {
			["encounterName"] = "Felhounds of Sargeras",
			["source"] = "Shatug",
			["npcID"] = 122135,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2074,
		},
		[388745] = {
			["source"] = "Steamed Crab",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197079,
		},
		[244057] = {
			["encounterName"] = "Felhounds of Sargeras",
			["source"] = "F'harg",
			["npcID"] = 122477,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2074,
		},
		[377486] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Agent",
			["npcID"] = 184335,
		},
		[386700] = {
			["source"] = "Hailstorm Warmonger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190602,
		},
		[375439] = {
			["encounterName"] = "Magmatusk",
			["source"] = "Magmatusk",
			["npcID"] = 181861,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2610,
		},
		[381582] = {
			["source"] = "Brutal Motivator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184453,
		},
		[394891] = {
			["source"] = "Braekkas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196855,
		},
		[159087] = {
			["source"] = "Grom'kar Leadslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89777,
		},
		[372369] = {
			["source"] = "Brackenhide Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188542,
		},
		[377488] = {
			["source"] = "Rune Seal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187155,
		},
		[391821] = {
			["source"] = "Rouen Icewind",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193682,
		},
		[211299] = {
			["source"] = "Watchful Inquisitor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105715,
		},
		[394893] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lookout Mordren",
			["npcID"] = 193668,
		},
		[373395] = {
			["source"] = "Batak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193462,
		},
		[391825] = {
			["source"] = "Primal Watercaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190995,
		},
		[169839] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Putrid Pyromancer",
			["npcID"] = 84957,
		},
		[375446] = {
			["source"] = "Horned Plainstomper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193407,
		},
		[387732] = {
			["source"] = "Bound Spark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186624,
		},
		[169840] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infested Icecaller",
			["npcID"] = 84989,
		},
		[69068] = {
			["source"] = "Soulguard Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36620,
		},
		[405137] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[393876] = {
			["source"] = "Gragza the Dragon-Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191507,
		},
		[384663] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgewrought Monstrosity",
			["npcID"] = 194816,
		},
		[381592] = {
			["source"] = "Brutal Motivator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184453,
		},
		[392854] = {
			["source"] = "Primal Scythid Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184853,
		},
		[381593] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebonstone Golem",
			["npcID"] = 184300,
		},
		[56937] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26930,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2010,
		},
		[394903] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lookout Mordren",
			["npcID"] = 193668,
		},
		[188270] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Black Rook Falcon",
			["npcID"] = 93064,
		},
		[377500] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infinite Agent",
			["npcID"] = 184335,
		},
		[391833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sherath",
			["npcID"] = 188710,
		},
		[368287] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[382620] = {
			["source"] = "Bonebolt Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185534,
		},
		[377502] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Enthralled Shellcracker",
			["npcID"] = 195918,
		},
		[387740] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Disoriented Watcher",
			["npcID"] = 187745,
		},
		[377503] = {
			["source"] = "Rune Seal Keeper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187155,
		},
		[171892] = {
			["source"] = "Blackfang Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89747,
		},
		[375457] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Juvenile Frost Proto-Dragon",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191222,
		},
		[179571] = {
			["source"] = "Sol-Shaper Krivin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90072,
		},
		[375459] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderspine Rumbler",
			["npcID"] = 192941,
		},
		[381602] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[391840] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taresh",
			["npcID"] = 188711,
		},
		[394912] = {
			["source"] = "Crystalus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193645,
		},
		[383651] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavamancer",
			["npcID"] = 193944,
		},
		[169847] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infested Icecaller",
			["npcID"] = 84989,
		},
		[391842] = {
			["source"] = "Stormfang Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187552,
		},
		[381605] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Kyrakka",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190484,
		},
		[387748] = {
			["source"] = "Overseer Zambul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191145,
		},
		[248165] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Argus the Unmaker",
			["npcID"] = 124828,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[395939] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverbeast Elder",
			["npcID"] = 191687,
		},
		[388773] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[377512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Basalt Shell",
			["npcID"] = 186622,
		},
		[372394] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Dathea Stormlash",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187768,
		},
		[395941] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverbeast Elder",
			["npcID"] = 191687,
		},
		[157053] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Durag the Dominator",
			["npcID"] = 77890,
		},
		[228204] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vile Stalker",
			["npcID"] = 90241,
		},
		[372397] = {
			["source"] = "Brackenhide Scrapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186359,
		},
		[391849] = {
			["source"] = "Rasnar the War Ender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193232,
		},
		[169851] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Addled Arcanomancer",
			["npcID"] = 84990,
		},
		[183160] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stoneblood Elderwitch",
			["npcID"] = 91122,
		},
		[395946] = {
			["source"] = "Fetid Rotsinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197129,
		},
		[389804] = {
			["source"] = "Unstable Curator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187154,
		},
		[384686] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[31865] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Illidari Succubus",
			["npcID"] = 22860,
		},
		[241004] = {
			["source"] = "Volatile Corruption",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120158,
		},
		[152962] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[171390] = {
			["source"] = "Wildfire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89156,
		},
		[396975] = {
			["source"] = "Firava the Rekindler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195915,
		},
		[369335] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Runic Protector",
			["npcID"] = 184107,
		},
		[371383] = {
			["source"] = "Arctic Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194917,
		},
		[399025] = {
			["source"] = "Arcane Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200720,
		},
		[152964] = {
			["source"] = "Void Spawn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75652,
		},
		[392884] = {
			["source"] = "Tevgai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195132,
		},
		[199034] = {
			["source"] = "Valarjar Aspirant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101637,
		},
		[395957] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[68821] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apothecary Hummel",
			["npcID"] = 36296,
		},
		[386745] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shela the Windbinder",
			["npcID"] = 194884,
		},
		[171394] = {
			["source"] = "Tumultuous Water Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80379,
		},
		[377532] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderspine Crasher",
			["npcID"] = 191057,
		},
		[214392] = {
			["source"] = "Felfang Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126197,
		},
		[399033] = {
			["source"] = "Weyrn Spellslinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200736,
		},
		[391870] = {
			["source"] = "Hungry Muckjaw Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197815,
		},
		[241524] = {
			["encounterName"] = "Demonic Inquisition",
			["source"] = "Tormented Fragment",
			["npcID"] = 121138,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2048,
		},
		[196991] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Priestess of Elune",
			["npcID"] = 100162,
		},
		[267997] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vilefiend",
			["npcID"] = 135816,
		},
		[391871] = {
			["source"] = "Duskpaw Tendontearer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197820,
		},
		[396991] = {
			["source"] = "Drakonid Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187240,
		},
		[388804] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[69080] = {
			["source"] = "Soulguard Bonecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36564,
		},
		[394948] = {
			["source"] = "Ashbinder Tornecha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192344,
		},
		[223100] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dreadheart Ruiner",
			["npcID"] = 112021,
		},
		[196995] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Priestess of Elune",
			["npcID"] = 100162,
		},
		[369359] = {
			["source"] = "Karantun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193647,
		},
		[383693] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192794,
		},
		[382670] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[13952] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lightsworn Vindicator",
			["npcID"] = 22861,
		},
		[245627] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Noura, Mother of Flames",
			["encounterID"] = 2073,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122468,
		},
		[172941] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sor the Eradicator",
			["npcID"] = 80691,
		},
		[369365] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Warder",
			["npcID"] = 184132,
		},
		[249211] = {
			["source"] = "Feltouched Skitterer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 125547,
		},
		[388817] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[222082] = {
			["source"] = "Nightmare Amalgamation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111398,
		},
		[211845] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Avatar of Bloodshed",
			["npcID"] = 150805,
		},
		[249212] = {
			["source"] = "Hungering Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 125549,
		},
		[221059] = {
			["source"] = "Gelatinized Decay",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111004,
		},
		[397010] = {
			["source"] = "Qalashi Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197147,
		},
		[377559] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[372441] = {
			["source"] = "Fetid Muckbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192501,
		},
		[404178] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200904,
		},
		[388822] = {
			["encounterName"] = "Echo of Doragosa",
			["source"] = "Echo of Doragosa",
			["encounterID"] = 2565,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190609,
		},
		[199050] = {
			["source"] = "Valarjar Shieldmaiden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95832,
		},
		[399061] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[397014] = {
			["source"] = "Qalashi Emissary",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197146,
		},
		[399062] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[395991] = {
			["source"] = "Awakened Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191129,
		},
		[151447] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bloodmaul Enforcer",
			["npcID"] = 84978,
		},
		[381659] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Augmented Flood",
			["npcID"] = 192457,
		},
		[391898] = {
			["source"] = "Failed Scalecommander Haerothal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201822,
		},
		[399065] = {
			["source"] = "Irontide Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200858,
		},
		[399336] = {
			["source"] = "Tarasek Frostclaw",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201035,
		},
		[400999] = {
			["source"] = "Bonesifter Marwak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200681,
		},
		[215433] = {
			["source"] = "Valarjar Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95834,
		},
		[386781] = {
			["encounterName"] = "Telash Greywing",
			["source"] = "Telash Greywing",
			["encounterID"] = 2583,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186737,
		},
		[241027] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lylth the Silent",
			["npcID"] = 120808,
		},
		[372449] = {
			["source"] = "Stormfang Bonecaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187931,
		},
		[381663] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Apex Blazewing",
			["npcID"] = 193291,
		},
		[394972] = {
			["source"] = "Qalashi Lavabearer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197148,
		},
		[400941] = {
			["source"] = "Blazing Bones",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203472,
		},
		[178067] = {
			["source"] = "Sea Skrog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 88094,
		},
		[55218] = {
			["encounterName"] = "Gal'darah",
			["source"] = "Gal'darah",
			["encounterID"] = 1981,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29306,
		},
		[176017] = {
			["source"] = "Sunsworn Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86945,
		},
		[217160] = {
			["source"] = "Hatecoil Harpooner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 107447,
		},
		[404209] = {
			["source"] = "Veltrax",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200904,
		},
		[221577] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Astral Farseer",
			["npcID"] = 111170,
		},
		[118905] = {
			["source"] = "Capacitor Totem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 61245,
		},
		[391903] = {
			["source"] = "Ruby Scaleguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198843,
		},
		[392927] = {
			["source"] = "Yaankhi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195101,
		},
		[403309] = {
			["source"] = "Expulsion Drone",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 202592,
		},
		[403201] = {
			["source"] = "Ishyra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200579,
		},
		[403169] = {
			["source"] = "Ishyra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200579,
		},
		[265721] = {
			["source"] = "Terrorachna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200349,
		},
		[373477] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Shoresnapper",
			["npcID"] = 190193,
		},
		[203750] = {
			["source"] = "Arcane Chronomaton",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111622,
		},
		[206222] = {
			["encounterName"] = "Gul'dan",
			["source"] = "Gul'dan",
			["npcID"] = 104154,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1866,
		},
		[328773] = {
			["source"] = "Vault Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200375,
		},
		[392672] = {
			["source"] = "Failed Scalecommander Elarthresh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201820,
		},
		[399933] = {
			["source"] = "Tukkaraq's Boat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201121,
		},
		[396001] = {
			["source"] = "The Songbird Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59553,
		},
		[398720] = {
			["source"] = "Irontide Bulwark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200850,
		},
		[135584] = {
			["source"] = "Exarch Naielle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84975,
		},
		[398632] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200852,
		},
		[398631] = {
			["source"] = "Irontide Crackshot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200852,
		},
		[377277] = {
			["source"] = "Volethi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200727,
		},
		[328772] = {
			["source"] = "Vault Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200375,
		},
		[195474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bonespeaker Mystic",
			["npcID"] = 93071,
		},
		[383236] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Beguiled Aquamancer",
			["npcID"] = 195960,
		},
		[374073] = {
			["source"] = "Primalist Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190345,
		},
		[151965] = {
			["source"] = "Bloodmaul Slaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75191,
		},
		[162074] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Guardian of the Forge",
			["npcID"] = 88435,
		},
		[383237] = {
			["source"] = "Primal Lava Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187321,
		},
		[378112] = {
			["source"] = "Nibbling Hornswog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189026,
		},
		[388801] = {
			["source"] = "Risen Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195855,
		},
		[382696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Guardian",
			["npcID"] = 184131,
		},
		[391910] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mordigan Ironjaw",
			["npcID"] = 187353,
		},
		[373912] = {
			["encounterName"] = "Decatriarch Wratheye",
			["source"] = "Decatriarch Wratheye",
			["encounterID"] = 2569,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186121,
		},
		[373483] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Soggymaw Wavebringer",
			["npcID"] = 187263,
		},
		[394982] = {
			["source"] = "Crystalized Steelshard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188048,
		},
		[392451] = {
			["source"] = "Flame Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197985,
		},
		[247687] = {
			["encounterName"] = "Imonar the Soulhunter",
			["source"] = "Imonar the Soulhunter",
			["encounterID"] = 2082,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124158,
		},
		[392924] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[190115] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Worgen Tracker",
			["npcID"] = 93961,
		},
		[396007] = {
			["source"] = "The Songbird Queen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59553,
		},
		[114646] = {
			["source"] = "Haunting Sha",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59555,
		},
		[104318] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wild Imp",
			["npcID"] = 143622,
		},
		[396503] = {
			["source"] = "Loamas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199030,
		},
		[391913] = {
			["source"] = "Gnawbone Splintershield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197847,
		},
		[404753] = {
			["source"] = "Freed Tauren Prisoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203204,
		},
		[391470] = {
			["source"] = "Bowline",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194451,
		},
		[199361] = {
			["source"] = "Valarjar Trapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96934,
		},
		[249224] = {
			["source"] = "Felseeker Ritualist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 126333,
		},
		[199652] = {
			["source"] = "King Haldor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95843,
		},
		[371984] = {
			["source"] = "Flashfrost Chillweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188067,
		},
		[169843] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Putrid Pyromancer",
			["npcID"] = 84957,
		},
		[391915] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zurgaz Corebreaker",
			["npcID"] = 193680,
		},
		[370054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Battleseared Magmatusk",
			["npcID"] = 196772,
		},
		[392455] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Yamakh",
			["npcID"] = 195283,
		},
		[170619] = {
			["source"] = "Sargerei Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84094,
		},
		[207980] = {
			["source"] = "Baalgar the Watchful",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104274,
		},
		[404736] = {
			["source"] = "Freed Tauren Prisoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203204,
		},
		[393520] = {
			["source"] = "Ceeqa the Peacetaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188708,
		},
		[377105] = {
			["source"] = "Vault Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190510,
		},
		[404529] = {
			["source"] = "Freed Tauren Prisoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203204,
		},
		[239500] = {
			["source"] = "Hellish Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115620,
		},
		[389870] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Colossal Stormfiend",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197145,
		},
		[382704] = {
			["source"] = "Vyzos the Prophet",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191308,
		},
		[385145] = {
			["source"] = "Time-Lost Raptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187256,
		},
		[207906] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[381681] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rustpine Immolator",
			["npcID"] = 187396,
		},
		[386800] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muugurv",
			["npcID"] = 194225,
		},
		[374126] = {
			["source"] = "Broadhoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187478,
		},
		[405228] = {
			["source"] = "Duzalgor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200610,
		},
		[215443] = {
			["encounterName"] = "Elerethe Renferal",
			["source"] = "Elerethe Renferal",
			["encounterID"] = 1876,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106087,
		},
		[386801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zurgaz Corebreaker",
			["npcID"] = 193680,
		},
		[61353] = {
			["source"] = "Dagna Flintlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96779,
		},
		[59019] = {
			["source"] = "Spitting Cobra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29774,
		},
		[381683] = {
			["source"] = "Nokhud Warspear",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192791,
		},
		[390897] = {
			["source"] = "Scalepiercer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186632,
		},
		[387826] = {
			["source"] = "Ukhel Beastcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195878,
		},
		[234676] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highlord Kruul",
			["npcID"] = 117198,
		},
		[369399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Weaver",
			["npcID"] = 186420,
		},
		[382708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Warden",
			["npcID"] = 193293,
		},
		[176756] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rune Ritualist",
			["npcID"] = 86591,
		},
		[233062] = {
			["encounterName"] = "Goroth",
			["source"] = "Goroth",
			["npcID"] = 115844,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2032,
		},
		[369400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Warder",
			["npcID"] = 184132,
		},
		[369061] = {
			["encounterName"] = "Emberon",
			["source"] = "Emberon",
			["npcID"] = 184422,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2558,
		},
		[396018] = {
			["source"] = "The Crybaby Hozen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59552,
		},
		[373051] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mudfin Salamancer",
			["npcID"] = 186669,
		},
		[223419] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dread Spirit",
			["npcID"] = 112178,
		},
		[172673] = {
			["source"] = "Legionfall Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119841,
		},
		[396019] = {
			["source"] = "The Golden Beetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59545,
		},
		[397043] = {
			["source"] = "Cyclas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199029,
		},
		[234680] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Highlord Kruul",
			["npcID"] = 117198,
		},
		[203028] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Ysondre",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102679,
		},
		[396020] = {
			["source"] = "The Golden Beetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59545,
		},
		[372474] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Raider",
			["npcID"] = 188230,
		},
		[241280] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felguard Invader",
			["npcID"] = 119742,
		},
		[134058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goblin Engineer",
			["npcID"] = 78323,
		},
		[171425] = {
			["source"] = "Wildfire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89156,
		},
		[175997] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Dulhu",
			["npcID"] = 83894,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[377594] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[199805] = {
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96574,
		},
		[375547] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molten Eruption",
			["npcID"] = 191286,
		},
		[384761] = {
			["encounterName"] = "The Raging Tempest",
			["source"] = "The Raging Tempest",
			["encounterID"] = 2636,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186615,
		},
		[238627] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Reanimated Templar",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119938,
		},
		[372615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tamed Phoenix",
			["npcID"] = 189247,
		},
		[396023] = {
			["encounterName"] = "Eranog",
			["source"] = "Eranog",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184972,
		},
		[169690] = {
			["source"] = "Kirox the Wind Dancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87656,
		},
		[250255] = {
			["encounterName"] = "Imonar the Soulhunter",
			["source"] = "Imonar the Soulhunter",
			["encounterID"] = 2082,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124158,
		},
		[389401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Beguiled Aquamancer",
			["npcID"] = 195960,
		},
		[392442] = {
			["source"] = "Kholdeg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194608,
		},
		[376934] = {
			["encounterName"] = "Treemouth",
			["source"] = "Treemouth",
			["encounterID"] = 2568,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186120,
		},
		[252303] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eredar Soulbinder",
			["npcID"] = 127114,
		},
		[155524] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Spirit-Tender",
			["npcID"] = 77131,
		},
		[378143] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primalist Infiltrator",
			["npcID"] = 189895,
		},
		[389497] = {
			["source"] = "Eternal Sand",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187475,
		},
		[221591] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Stardancer",
			["npcID"] = 111164,
		},
		[374045] = {
			["source"] = "Containment Apparatus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190342,
		},
		[375058] = {
			["source"] = "Old Arbhog",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196897,
		},
		[231317] = {
			["source"] = "Lobos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115970,
		},
		[369409] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Custodian",
			["npcID"] = 184130,
		},
		[152298] = {
			["source"] = "Vengeful Magma Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75820,
		},
		[241043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lylth the Silent",
			["npcID"] = 120808,
		},
		[397051] = {
			["source"] = "Cyclas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199029,
		},
		[373636] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skaara",
			["npcID"] = 192949,
		},
		[233048] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felblade Devastator",
			["npcID"] = 118776,
		},
		[193951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Barbed Spiderling",
			["npcID"] = 97677,
		},
		[388862] = {
			["source"] = "Corrupted Manafiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196045,
		},
		[369411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cavern Seeker",
			["npcID"] = 184301,
		},
		[385313] = {
			["source"] = "Primalist Shockcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195119,
		},
		[150759] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1653,
		},
		[388863] = {
			["source"] = "Corrupted Manafiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196045,
		},
		[391491] = {
			["source"] = "Sootscale the Indomitable",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190307,
		},
		[158014] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Direhoof",
			["npcID"] = 86729,
		},
		[241108] = {
			["source"] = "Tidescale Legionnaire",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117123,
		},
		[209628] = {
			["encounterName"] = "Advisor Melandrus",
			["source"] = "Advisor Melandrus",
			["encounterID"] = 1870,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104218,
		},
		[207261] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[390912] = {
			["source"] = "Vile Lasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197219,
		},
		[240277] = {
			["encounterName"] = "Garothi Worldbreaker",
			["source"] = "Garothi Worldbreaker",
			["encounterID"] = 2076,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122450,
		},
		[196512] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[182384] = {
			["source"] = "Hatecoil Spitespeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89025,
		},
		[374533] = {
			["encounterName"] = "Forgemaster Gorek",
			["source"] = "Forgemaster Gorek",
			["npcID"] = 189478,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2612,
		},
		[384296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ayanga",
			["npcID"] = 192961,
		},
		[372486] = {
			["source"] = "Waste Water Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187497,
		},
		[215241] = {
			["source"] = "Duskwatch Executor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115595,
		},
		[381517] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[387843] = {
			["source"] = "Spectral Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196202,
		},
		[159097] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grom'kar Commander",
			["npcID"] = 85449,
		},
		[381701] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Augmented Flood",
			["npcID"] = 192457,
		},
		[135029] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Elemental",
			["npcID"] = 78116,
		},
		[238999] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Kil'jaeden",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117269,
		},
		[235267] = {
			["encounterName"] = "Maiden of Vigilance",
			["source"] = "Maiden of Vigilance",
			["encounterID"] = 2052,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118289,
		},
		[378454] = {
			["source"] = "Primal Avalanche",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187082,
		},
		[390916] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muugurv",
			["npcID"] = 194225,
		},
		[373087] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[257802] = {
			["source"] = "Clobex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 127732,
		},
		[377608] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Subjugator",
			["npcID"] = 195837,
		},
		[59638] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mirror Image",
			["npcID"] = 31216,
		},
		[222891] = {
			["source"] = "Shade of Akama",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111912,
		},
		[209370] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ancient Boneservant",
			["npcID"] = 108940,
		},
		[377609] = {
			["source"] = "Worldbreaker Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185594,
		},
		[160323] = {
			["source"] = "Repugnant Shadowdweller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86168,
		},
		[373084] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontorch Commander",
			["npcID"] = 189466,
		},
		[210781] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Il'gynoth",
			["encounterID"] = 1873,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105393,
		},
		[391944] = {
			["source"] = "Gnawbone Splintershield",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197847,
		},
		[204122] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Emeriss",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102683,
		},
		[398985] = {
			["source"] = "Broodguardian Ziruss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198214,
		},
		[131091] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skyfire Marine",
			["npcID"] = 92950,
		},
		[68841] = {
			["source"] = "Apothecary Frye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36272,
		},
		[236442] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Captain Yathae Moonstrike",
			["encounterID"] = 2050,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118374,
		},
		[387849] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[193633] = {
			["source"] = "Risen Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98275,
		},
		[377612] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[222110] = {
			["source"] = "Shadow Pounder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111405,
		},
		[226717] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel Burster",
			["npcID"] = 113832,
		},
		[372460] = {
			["source"] = "Duskpaw Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187523,
		},
		[389898] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Elemental",
			["npcID"] = 196992,
		},
		[395017] = {
			["source"] = "Massive Magmashell",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193152,
		},
		[381519] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tarasek Warrior",
			["npcID"] = 196123,
		},
		[372495] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ensnaring Current",
			["npcID"] = 191328,
		},
		[377034] = {
			["encounterName"] = "Crawth",
			["source"] = "Crawth",
			["encounterID"] = 2564,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191736,
		},
		[175842] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorian Sorcerer",
			["npcID"] = 85225,
		},
		[221783] = {
			["encounterName"] = "Gul'dan",
			["source"] = "Gul'dan",
			["npcID"] = 104154,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1866,
		},
		[387571] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[239923] = {
			["source"] = "Tormented Priestess",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120182,
		},
		[220238] = {
			["source"] = "Tirisgarde Apprentice",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 110750,
		},
		[391948] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sulfuric Rager",
			["npcID"] = 191682,
		},
		[193659] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[367484] = {
			["source"] = "Blightfur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193178,
		},
		[373327] = {
			["encounterName"] = "Eranog",
			["source"] = "Primal Flame",
			["encounterID"] = 2587,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187593,
		},
		[396044] = {
			["encounterName"] = "Melidrussa Chillworn",
			["source"] = "Melidrussa Chillworn",
			["encounterID"] = 2609,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188252,
		},
		[204885] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fel Hound",
			["npcID"] = 114211,
		},
		[374080] = {
			["source"] = "Primalist Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190348,
		},
		[240540] = {
			["source"] = "Razorjaw Swiftfin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120516,
		},
		[59154] = {
			["source"] = "Stormforged Giant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28920,
		},
		[225184] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maiev Shadowsong",
			["npcID"] = 112867,
		},
		[381512] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[385383] = {
			["source"] = "Forge-Keep Overseer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192699,
		},
		[58966] = {
			["source"] = "Drakkari Battle Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29836,
		},
		[387135] = {
			["source"] = "Primalist Arcblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194898,
		},
		[393582] = {
			["source"] = "Cindershard Igniter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198382,
		},
		[191401] = {
			["source"] = "Valarjar Marksman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96640,
		},
		[209027] = {
			["source"] = "Duskwatch Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111563,
		},
		[377204] = {
			["encounterName"] = "Warlord Sargha",
			["source"] = "Warlord Sargha",
			["npcID"] = 189901,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2611,
		},
		[367481] = {
			["source"] = "Cruel Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186206,
		},
		[392341] = {
			["source"] = "Tevgai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195132,
		},
		[175848] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorian Sorcerer",
			["npcID"] = 85225,
		},
		[388882] = {
			["source"] = "Infuser Sariya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190405,
		},
		[373526] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brightail Monarch",
			["npcID"] = 191458,
		},
		[58973] = {
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29820,
		},
		[400144] = {
			["source"] = "Vraken the Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200584,
		},
		[241566] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Soul Queen Dejahna",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118462,
		},
		[385812] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Volatile Infuser",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192934,
		},
		[382836] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Maruuk",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186338,
		},
		[375575] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Dragonspawn Flamebender",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191230,
		},
		[153524] = {
			["source"] = "Plagued Bat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75459,
		},
		[149941] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Ruination",
			["npcID"] = 74570,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1655,
		},
		[385351] = {
			["source"] = "Unstable Arcanogolem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 201554,
		},
		[392272] = {
			["source"] = "Shortcoat Mauler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195198,
		},
		[377384] = {
			["source"] = "Aqua Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190407,
		},
		[385757] = {
			["source"] = "Mender Eskros",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195303,
		},
		[234401] = {
			["source"] = "Inquisitor Variss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117933,
		},
		[375580] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[388886] = {
			["source"] = "Spellbound Scepter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196576,
		},
		[57047] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[236449] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Soul Queen Dejahna",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118462,
		},
		[391958] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cloying Gale",
			["npcID"] = 198126,
		},
		[157051] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grom'tash the Destructor",
			["npcID"] = 77889,
		},
		[381721] = {
			["source"] = "Primal Watercaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190995,
		},
		[392425] = {
			["source"] = "Molkeej",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195430,
		},
		[391959] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[397011] = {
			["source"] = "Qalashi Honor Guard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197147,
		},
		[170418] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skeletal Ancestor",
			["npcID"] = 85299,
		},
		[206921] = {
			["encounterName"] = "Star Augur Etraeus",
			["source"] = "Star Augur Etraeus",
			["npcID"] = 103758,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1863,
		},
		[241057] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lylth the Silent",
			["npcID"] = 120808,
		},
		[394563] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Death's Shadow",
			["npcID"] = 190985,
		},
		[86249] = {
			["source"] = "Bleeding Hollow Impaler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89705,
		},
		[157173] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felguard",
			["npcID"] = 79507,
		},
		[240623] = {
			["encounterName"] = "Fallen Avatar",
			["source"] = "Containment Pylon",
			["encounterID"] = 2038,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117279,
		},
		[388424] = {
			["encounterName"] = "Primal Tsunami",
			["source"] = "Primal Tsunami",
			["encounterID"] = 2618,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189729,
		},
		[161630] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bladespire Sorcerer",
			["npcID"] = 80071,
		},
		[390938] = {
			["source"] = "Aggravated Skitterfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197406,
		},
		[207881] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Talixae Flamewreath",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104217,
		},
		[391837] = {
			["source"] = "Emerald Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191252,
		},
		[218807] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Arcanist Tel'arn",
			["npcID"] = 109040,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[382749] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Leapmaize Ambusher",
			["npcID"] = 193378,
		},
		[377411] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Amberfur Prowler",
			["npcID"] = 187455,
		},
		[160285] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Goren Gouger",
			["npcID"] = 80690,
		},
		[395035] = {
			["source"] = "Soulharvester Tumen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195929,
		},
		[390940] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnarls",
			["npcID"] = 197354,
		},
		[171807] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tor'goroth",
			["npcID"] = 82618,
		},
		[168082] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Life Warden Gola",
			["npcID"] = 83892,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[369442] = {
			["source"] = "Karantun",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193647,
		},
		[168885] = {
			["encounterName"] = "Archmage Sol",
			["source"] = "Archmage Sol",
			["npcID"] = 82682,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1751,
		},
		[225635] = {
			["source"] = "Umbral Archer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122851,
		},
		[219049] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Naturalist Tel'arn",
			["npcID"] = 109041,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[162231] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bladespire Sorcerer",
			["npcID"] = 80071,
		},
		[51963] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ebon Gargoyle",
			["npcID"] = 27829,
		},
		[385363] = {
			["source"] = "Pudgy Riverbeast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196017,
		},
		[232756] = {
			["encounterName"] = "Mistress Sassz'ine",
			["source"] = "Mistress Sassz'ine",
			["encounterID"] = 2037,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115767,
		},
		[209471] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Nightmare Ichor",
			["encounterID"] = 1873,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105721,
		},
		[374563] = {
			["source"] = "Dazzling Dragonfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190362,
		},
		[172588] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Melded Berserker",
			["npcID"] = 86372,
		},
		[235222] = {
			["source"] = "Eredar Bloodmage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117782,
		},
		[389430] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[386849] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unleashed Storm",
			["npcID"] = 195846,
		},
		[404652] = {
			["source"] = "Jamoku",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199914,
		},
		[388897] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenging Hardshell",
			["npcID"] = 193605,
		},
		[369423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skittering Crawler",
			["npcID"] = 184303,
		},
		[238502] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Kil'jaeden",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117269,
		},
		[373614] = {
			["source"] = "Blazebound Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190034,
		},
		[154623] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Spirit-Tender",
			["npcID"] = 77131,
		},
		[207278] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[258838] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Argus the Unmaker",
			["npcID"] = 124828,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[255594] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Golganneth",
			["npcID"] = 126268,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[184416] = {
			["source"] = "Vilepetal Rooter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112052,
		},
		[205231] = {
			["source"] = "Darkglare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103673,
		},
		[374567] = {
			["encounterName"] = "Leymor",
			["source"] = "Leymor",
			["encounterID"] = 2582,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186644,
		},
		[375591] = {
			["source"] = "Bubbling Sapling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191313,
		},
		[194482] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Priestess of Eyir",
			["npcID"] = 94856,
		},
		[148805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nub the Torturer",
			["npcID"] = 78174,
		},
		[199146] = {
			["source"] = "Gildedfur Stag",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96609,
		},
		[378731] = {
			["source"] = "Frozen Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199592,
		},
		[236115] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Captain Yathae Moonstrike",
			["encounterID"] = 2050,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118374,
		},
		[215582] = {
			["encounterName"] = "Elerethe Renferal",
			["source"] = "Elerethe Renferal",
			["encounterID"] = 1876,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106087,
		},
		[153680] = {
			["encounterName"] = "Bonemaw",
			["source"] = "Bonemaw",
			["encounterID"] = 1679,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75452,
		},
		[387083] = {
			["source"] = "Time-Lost Briarback",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187264,
		},
		[386921] = {
			["encounterName"] = "Granyth",
			["source"] = "Dragonkiller Lance",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194367,
		},
		[199090] = {
			["source"] = "Angerhoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96611,
		},
		[198892] = {
			["source"] = "Storm Drake",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97068,
		},
		[396069] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Primal Earthshard",
			["npcID"] = 185647,
		},
		[245671] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Torment of Khaz'goroth",
			["encounterID"] = 2073,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 124166,
		},
		[160332] = {
			["source"] = "Repugnant Shadowdweller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86168,
		},
		[198959] = {
			["source"] = "Valarjar Runecarver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96664,
		},
		[253650] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Diima, Mother of Gloom",
			["npcID"] = 122469,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2073,
		},
		[210864] = {
			["encounterName"] = "Elerethe Renferal",
			["source"] = "Elerethe Renferal",
			["encounterID"] = 1876,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 106087,
		},
		[158141] = {
			["source"] = "Icehoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78920,
		},
		[390952] = {
			["source"] = "Grand Flame",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188009,
		},
		[396071] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197142,
		},
		[258768] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgotten Gryphon",
			["npcID"] = 193154,
		},
		[373549] = {
			["source"] = "Skittering Hoverfly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198420,
		},
		[183868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felblood Corruptor",
			["npcID"] = 92396,
		},
		[165308] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Peckers the Majestic",
			["npcID"] = 83705,
		},
		[199151] = {
			["source"] = "Angerhoof Bull",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96611,
		},
		[158142] = {
			["source"] = "Kirox the Wind Dancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87656,
		},
		[173563] = {
			["encounterName"] = "Yalnu",
			["source"] = "Feral Lasher",
			["npcID"] = 86684,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[396073] = {
			["source"] = "The Nodding Tiger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 59544,
		},
		[56938] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26928,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2010,
		},
		[167385] = {
			["source"] = "Boulderfist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189617,
		},
		[396075] = {
			["source"] = "Awakened Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191129,
		},
		[390463] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[164357] = {
			["encounterName"] = "Witherbark",
			["source"] = "Witherbark",
			["npcID"] = 81522,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1746,
		},
		[376171] = {
			["source"] = "Primalist Icecaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190377,
		},
		[59160] = {
			["source"] = "Stormforged Mender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28582,
		},
		[59259] = {
			["source"] = "Hardened Steel Berserker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28579,
		},
		[372529] = {
			["source"] = "Gnawbone Underboss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187503,
		},
		[219569] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmtongue Collector",
			["npcID"] = 102778,
		},
		[197558] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[194611] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadow Hunter",
			["npcID"] = 98926,
		},
		[397100] = {
			["source"] = "Magmas",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199027,
		},
		[231854] = {
			["encounterName"] = "Harjatan",
			["source"] = "Harjatan",
			["encounterID"] = 2036,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116407,
		},
		[49309] = {
			["source"] = "Gold Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 32340,
		},
		[392724] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jadzigeth",
			["npcID"] = 188447,
		},
		[388911] = {
			["source"] = "Spellbound Battleaxe",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196577,
		},
		[168383] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Dulhu",
			["npcID"] = 83894,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[211513] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eredar Mageslayer",
			["npcID"] = 114245,
		},
		[396078] = {
			["source"] = "Summoned Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193288,
		},
		[208685] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Dominator Tentacle",
			["encounterID"] = 1873,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105304,
		},
		[145860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderlord Talon",
			["npcID"] = 72232,
		},
		[396825] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Controller",
			["npcID"] = 195836,
		},
		[47731] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26929,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2010,
		},
		[183863] = {
			["source"] = "Felblood Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90066,
		},
		[242093] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Flllurlokkr",
			["npcID"] = 120998,
		},
		[386866] = {
			["source"] = "Gorging Stagbeetle",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195709,
		},
		[375605] = {
			["source"] = "Arcane Golem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190779,
		},
		[199726] = {
			["source"] = "King Ranulf",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97083,
		},
		[241213] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lunar Archer",
			["npcID"] = 120721,
		},
		[388918] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[395061] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Molka The Grinder",
			["npcID"] = 193443,
		},
		[79857] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twirhp",
			["npcID"] = 112386,
		},
		[197049] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ysera",
			["npcID"] = 93065,
		},
		[395058] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pirdan The Blinder",
			["npcID"] = 186512,
		},
		[37628] = {
			["source"] = "Felblood Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 89754,
		},
		[200784] = {
			["source"] = "Wyrmtongue Scavenger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98792,
		},
		[369465] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Weaver",
			["npcID"] = 186420,
		},
		[395639] = {
			["source"] = "Spellforged Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194401,
		},
		[378850] = {
			["source"] = "Arcane Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190780,
		},
		[382434] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[180670] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "K'ute",
			["npcID"] = 90215,
		},
		[395060] = {
			["source"] = "Im'bunata",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196199,
		},
		[396084] = {
			["source"] = "Astray Splasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197411,
		},
		[384823] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Blazebound Firestorm",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189886,
		},
		[394037] = {
			["source"] = "Unbound Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187036,
		},
		[15043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Yu'lon Adept",
			["npcID"] = 57316,
		},
		[249262] = {
			["source"] = "Riftworld Assistant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 125569,
		},
		[397109] = {
			["source"] = "Stormbound Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187843,
		},
		[377658] = {
			["encounterName"] = "Raszageth the Storm-Eater",
			["source"] = "Raszageth",
			["encounterID"] = 2607,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189492,
		},
		[392241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zenet Avis",
			["npcID"] = 193209,
		},
		[150801] = {
			["encounterName"] = "Slave Watcher Crushto",
			["source"] = "Slave Watcher Crushto",
			["npcID"] = 74787,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1653,
		},
		[397110] = {
			["source"] = "Stormbound Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187843,
		},
		[158150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Leatherhide Bull",
			["npcID"] = 81898,
		},
		[330604] = {
			["source"] = "Vault Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200375,
		},
		[196028] = {
			["source"] = "Hatecoil Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97171,
		},
		[184372] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lyrathos Darkgrove",
			["npcID"] = 92877,
		},
		[225100] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[388923] = {
			["encounterName"] = "Overgrown Ancient",
			["source"] = "Overgrown Ancient",
			["encounterID"] = 2563,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196482,
		},
		[394536] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Chief Dead Eye",
			["npcID"] = 195337,
		},
		[397112] = {
			["source"] = "Grod the Ancient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196385,
		},
		[377661] = {
			["source"] = "Tundra Vorquin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190324,
		},
		[188927] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkfiend Defiler",
			["npcID"] = 93111,
		},
		[150290] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Calamity",
			["npcID"] = 74571,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1655,
		},
		[128999] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thundermaw",
			["npcID"] = 58456,
		},
		[389947] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Dominator",
			["npcID"] = 193839,
		},
		[232219] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felbound Spirit",
			["npcID"] = 116469,
		},
		[198077] = {
			["encounterName"] = "Odyn",
			["source"] = "Odyn",
			["encounterID"] = 1809,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95676,
		},
		[388925] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[389948] = {
			["source"] = "Overseer Zambul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191145,
		},
		[175879] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorian Sorcerer",
			["npcID"] = 85225,
		},
		[233556] = {
			["encounterName"] = "Fallen Avatar",
			["source"] = "Containment Pylon",
			["encounterID"] = 2038,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117279,
		},
		[59389] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Prince Keleseth",
			["encounterID"] = 2026,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23953,
		},
		[389949] = {
			["source"] = "Teerai Battlemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191494,
		},
		[393812] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whirglgurgl",
			["npcID"] = 188860,
		},
		[176264] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Botani Vine-Weaver",
			["npcID"] = 86261,
		},
		[210875] = {
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96574,
		},
		[382555] = {
			["source"] = "Bracken Warscourge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185529,
		},
		[240066] = {
			["encounterName"] = "Harjatan",
			["source"] = "Razorjaw Wavemender",
			["encounterID"] = 2036,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116569,
		},
		[391998] = {
			["source"] = "Baron Ashflow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192274,
		},
		[196543] = {
			["encounterName"] = "Fenryr",
			["source"] = "Fenryr",
			["encounterID"] = 1807,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95674,
		},
		[389951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strunraan",
			["npcID"] = 193534,
		},
		[161040] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rocktusk Patriarch",
			["npcID"] = 88508,
		},
		[270481] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Demonic Tyrant",
			["npcID"] = 135002,
		},
		[390256] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Apprentice",
			["npcID"] = 192340,
		},
		[201151] = {
			["source"] = "Murkwater Warrior",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102166,
		},
		[234423] = {
			["source"] = "Inquisitor Variss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117933,
		},
		[222043] = {
			["source"] = "Creature in the Shadows",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111370,
		},
		[376644] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[389953] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[382787] = {
			["source"] = "Disease Slasher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187315,
		},
		[56934] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26731,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2010,
		},
		[211401] = {
			["source"] = "Blazing Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104295,
		},
		[195108] = {
			["source"] = "Hatecoil Stormweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 91783,
		},
		[207806] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[369811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hulking Berserker",
			["npcID"] = 184020,
		},
		[204735] = {
			["source"] = "Mage-Commander Lyra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 134163,
		},
		[381765] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Rimebound Controller",
			["npcID"] = 191654,
		},
		[390979] = {
			["source"] = "Primal Earthshaper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190996,
		},
		[392957] = {
			["source"] = "Tundra Vorquin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190324,
		},
		[394423] = {
			["source"] = "Rohzor Forgesmash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187598,
		},
		[385419] = {
			["source"] = "Forge-Keep Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192703,
		},
		[404778] = {
			["source"] = "Freed Tauren Prisoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 203204,
		},
		[382791] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavamancer",
			["npcID"] = 193944,
		},
		[372553] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenger Matriarch",
			["npcID"] = 192812,
		},
		[248254] = {
			["encounterName"] = "Imonar the Soulhunter",
			["source"] = "Imonar the Soulhunter",
			["npcID"] = 124158,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2082,
		},
		[238520] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Toiling Collector",
			["npcID"] = 118390,
		},
		[387910] = {
			["source"] = "Algeth'ar Echoknight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196200,
		},
		[178487] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gorian Warcaller",
			["npcID"] = 89168,
		},
		[209410] = {
			["source"] = "Duskwatch Arcanist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104247,
		},
		[390982] = {
			["source"] = "Awakened Revenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191129,
		},
		[388302] = {
			["encounterName"] = "Dathea, Ascended",
			["source"] = "Dathea, Ascended",
			["encounterID"] = 2635,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189813,
		},
		[392007] = {
			["source"] = "Gnawbone Underboss",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187503,
		},
		[394512] = {
			["source"] = "Void Spawn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75652,
		},
		[390983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Brute",
			["npcID"] = 185168,
		},
		[169418] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twisted Abomination",
			["npcID"] = 84767,
		},
		[198595] = {
			["source"] = "Valarjar Thundercaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95842,
		},
		[398150] = {
			["source"] = "Shadowmoon Dominator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76446,
		},
		[390984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Sentry",
			["npcID"] = 185357,
		},
		[150048] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Molten Elemental",
			["npcID"] = 74579,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1655,
		},
		[372557] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scavenger Matriarch",
			["npcID"] = 192812,
		},
		[164300] = {
			["source"] = "Gorian Elementalist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85934,
		},
		[383385] = {
			["source"] = "Filth Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185656,
		},
		[189469] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[392594] = {
			["source"] = "Meatgrinder Sotok",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186777,
		},
		[211473] = {
			["source"] = "Shadow Mistress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104300,
		},
		[392141] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gamgus",
			["npcID"] = 194240,
		},
		[375630] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Drakonid Stormbringer",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191232,
		},
		[200205] = {
			["source"] = "Reaves",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101462,
		},
		[52770] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 1984,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28546,
		},
		[390987] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nokhud Sentry",
			["npcID"] = 185357,
		},
		[388941] = {
			["source"] = "Cascade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186962,
		},
		[195344] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drogbar Manathirster",
			["npcID"] = 95866,
		},
		[398154] = {
			["source"] = "Defiled Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75451,
		},
		[390988] = {
			["source"] = "Magmammoth Breaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194912,
		},
		[396107] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hungry Hungry Lava",
			["npcID"] = 194878,
		},
		[372561] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Hunter",
			["npcID"] = 189227,
		},
		[392013] = {
			["source"] = "Unbound Attendant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187036,
		},
		[388942] = {
			["source"] = "Arcane Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196671,
		},
		[383823] = {
			["source"] = "Nokhud Hornsounder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192796,
		},
		[178123] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Shaper",
			["npcID"] = 89019,
		},
		[158160] = {
			["source"] = "Kirox the Wind Dancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87656,
		},
		[218885] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Colossal Siegebreaker",
			["npcID"] = 113436,
		},
		[59616] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Dragonflayer Runecaster",
			["encounterID"] = 2026,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23960,
		},
		[22907] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horde Ranger",
			["npcID"] = 26801,
		},
		[236542] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "The Desolate Host",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119072,
		},
		[386757] = {
			["encounterName"] = "Khajin the Unyielding",
			["source"] = "Khajin the Unyielding",
			["encounterID"] = 2617,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189727,
		},
		[397134] = {
			["encounterName"] = "The Primal Council",
			["source"] = "Opalfang",
			["encounterID"] = 2590,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187772,
		},
		[388944] = {
			["source"] = "Frozion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193655,
		},
		[369072] = {
			["source"] = "Old Stonetusk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191995,
		},
		[382802] = {
			["source"] = "Vile Rothexer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194241,
		},
		[372147] = {
			["source"] = "Balara",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193457,
		},
		[374706] = {
			["source"] = "Flamecaller Aymi",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190368,
		},
		[10277] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkspear Axe Thrower",
			["npcID"] = 18970,
		},
		[159015] = {
			["source"] = "Voracious Stonemuncher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 84253,
		},
		[158252] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Meadowstomper",
			["npcID"] = 78460,
		},
		[372566] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Hunter",
			["npcID"] = 189227,
		},
		[57984] = {
			["source"] = "Greater Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95061,
		},
		[372562] = {
			["source"] = "Brackenhide Deadeye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188542,
		},
		[175566] = {
			["source"] = "Blazing Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 87701,
		},
		[159017] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zipteq",
			["npcID"] = 78734,
		},
		[395694] = {
			["source"] = "Primalist Shocktrooper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 199037,
		},
		[384961] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186208,
		},
		[165329] = {
			["source"] = "Cyclonic Fury",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 78621,
		},
		[209413] = {
			["source"] = "Guardian Construct",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104270,
		},
		[235968] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Ghastly Bonewarden",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 119939,
		},
		[207815] = {
			["encounterName"] = "Patrol Captain Gerdo",
			["source"] = "Patrol Captain Gerdo",
			["encounterID"] = 1868,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104215,
		},
		[225943] = {
			["encounterName"] = "Nythendra",
			["source"] = "Nythendra",
			["encounterID"] = 1853,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 102672,
		},
		[386490] = {
			["encounterName"] = "Granyth",
			["source"] = "Nokhud Saboteur",
			["npcID"] = 195821,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2637,
		},
		[240910] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Kil'jaeden",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117269,
		},
		[395196] = {
			["source"] = "Blazing Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185883,
		},
		[392021] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mantai",
			["npcID"] = 195286,
		},
		[59842] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["encounterID"] = 1978,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29304,
		},
		[235969] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Fallen Priestess",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118729,
		},
		[252861] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Asara, Mother of Night",
			["encounterID"] = 2073,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122467,
		},
		[212423] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Skulker",
			["npcID"] = 99541,
		},
		[156718] = {
			["source"] = "Monstrous Corpse Spider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76104,
		},
		[164307] = {
			["source"] = "Befuddled Relic-Seeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 86205,
		},
		[58972] = {
			["source"] = "Drakkari Fire Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29822,
		},
		[59430] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["encounterID"] = 1973,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29120,
		},
		[388952] = {
			["source"] = "Ravenous Riversnapper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192684,
		},
		[149975] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Calamity",
			["npcID"] = 74571,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1655,
		},
		[240577] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Tidescale Combatant",
			["npcID"] = 120473,
		},
		[385883] = {
			["source"] = "Forge-Keep Custodian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192703,
		},
		[221464] = {
			["source"] = "Chaos Mage Beleron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111225,
		},
		[225047] = {
			["encounterName"] = "High Botanist Tel'arn",
			["source"] = "Terrace Grove-Tender",
			["npcID"] = 112603,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1886,
		},
		[243982] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Kil'jaeden",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117269,
		},
		[175162] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcanist Earthsmasher",
			["npcID"] = 83577,
		},
		[31707] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Water Elemental",
			["npcID"] = 78116,
		},
		[357218] = {
			["source"] = "Smoldering Colossus",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 188673,
		},
		[395097] = {
			["source"] = "Makhra the Ashtouched",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195409,
		},
		[371551] = {
			["source"] = "Stormfang Dustcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187551,
		},
		[372107] = {
			["encounterName"] = "Kokia Blazehoof",
			["source"] = "Kokia Blazehoof",
			["encounterID"] = 2606,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 189232,
		},
		[39794] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lightsworn Vindicator",
			["npcID"] = 22861,
		},
		[59685] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Dragonflayer Strategist",
			["encounterID"] = 2026,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23956,
		},
		[159035] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shaadum",
			["npcID"] = 78728,
		},
		[386547] = {
			["encounterName"] = "Teera and Maruuk",
			["source"] = "Teera",
			["encounterID"] = 2581,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186339,
		},
		[177460] = {
			["source"] = "Corrupted Wind Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80381,
		},
		[395936] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Riverbeast Elder",
			["npcID"] = 191687,
		},
		[245888] = {
			["source"] = "Antoran Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 123480,
		},
		[165193] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anchorite Valest",
			["npcID"] = 81101,
		},
		[59366] = {
			["encounterName"] = "Hadronox",
			["event"] = "SPELL_CAST_START",
			["source"] = "Watcher Silthik",
			["npcID"] = 28731,
		},
		[378847] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Spinecrusher",
			["npcID"] = 192787,
		},
		[51587] = {
			["source"] = "Dragonflayer Spiritualist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28410,
		},
		[199674] = {
			["source"] = "King Bjorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97081,
		},
		[212773] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Duskwatch Reinforcement",
			["npcID"] = 107073,
		},
		[182836] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stoneblood Temptress",
			["npcID"] = 91598,
		},
		[372538] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lava Flare",
			["npcID"] = 189470,
		},
		[79868] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Muffinmon",
			["npcID"] = 112409,
		},
		[164311] = {
			["source"] = "Gorian Mage-Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85935,
		},
		[151566] = {
			["source"] = "Bloodmaul Magma Binder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 74349,
		},
		[52611] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["encounterID"] = 2024,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24201,
		},
		[59347] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Crypt Fiend",
			["npcID"] = 29063,
		},
		[236518] = {
			["encounterName"] = "Sisters of the Moon",
			["source"] = "Priestess Lunaspyre",
			["encounterID"] = 2050,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118518,
		},
		[157762] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 77696,
		},
		[375652] = {
			["source"] = "Arcane Tender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196115,
		},
		[169824] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spore Image",
			["npcID"] = 84984,
		},
		[381535] = {
			["source"] = "Convoked Tremor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187079,
		},
		[370225] = {
			["source"] = "Shrieking Whelp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187159,
		},
		[173116] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Beremus the Overgrowth",
			["npcID"] = 80700,
		},
		[214988] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[394749] = {
			["source"] = "Unstable Storm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 198716,
		},
		[79856] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twirhp",
			["npcID"] = 112386,
		},
		[164358] = {
			["source"] = "Gorian Centurion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85939,
		},
		[384868] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[164313] = {
			["source"] = "Gorian Mage-Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 85935,
		},
		[153161] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Peckers the Majestic",
			["npcID"] = 83705,
		},
		[376169] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Thaumaturge Fural",
			["npcID"] = 189905,
		},
		[214989] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spirit of Vengeance",
			["npcID"] = 100364,
		},
		[211406] = {
			["source"] = "Blazing Imp",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104295,
		},
		[208944] = {
			["encounterName"] = "Grand Magistrix Elisande",
			["source"] = "Elisande",
			["npcID"] = 106643,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1872,
		},
		[383846] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Destructive Fire Elemental",
			["npcID"] = 194179,
		},
		[163802] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["npcID"] = 74790,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1654,
		},
		[384492] = {
			["source"] = "Nokhud Beastmaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192794,
		},
		[222156] = {
			["source"] = "Felblaze Trickster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111554,
		},
		[59734] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["encounterID"] = 2025,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 23954,
		},
		[150023] = {
			["encounterName"] = "Magmolatus",
			["source"] = "Magmolatus",
			["npcID"] = 74475,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1655,
		},
		[390150] = {
			["source"] = "Wyrmeater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186612,
		},
		[162127] = {
			["source"] = "Grimfrost Drudge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 72955,
		},
		[369193] = {
			["source"] = "Worldbreaker Shapist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 185593,
		},
		[377338] = {
			["source"] = "Aqualing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190406,
		},
		[68939] = {
			["encounterName"] = "Devourer of Souls",
			["source"] = "Devourer of Souls",
			["encounterID"] = 2007,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36502,
		},
		[218415] = {
			["encounterName"] = "Il'gynoth, The Heart of Corruption",
			["source"] = "Eye of Il'gynoth",
			["encounterID"] = 1873,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105906,
		},
		[177731] = {
			["encounterName"] = "Witherbark",
			["source"] = "Enchanted Waters",
			["npcID"] = 88862,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1746,
		},
		[376683] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Balakar Khan",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186151,
		},
		[377341] = {
			["source"] = "Aqua Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190407,
		},
		[57091] = {
			["encounterName"] = "Keristrasza",
			["source"] = "Keristrasza",
			["npcID"] = 26723,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2011,
		},
		[371565] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unbound Windscourge",
			["npcID"] = 195854,
		},
		[69633] = {
			["source"] = "Spectral Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36666,
		},
		[396415] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Seeing Eye Proto-Drake",
			["npcID"] = 197843,
		},
		[241983] = {
			["encounterName"] = "Kil'jaeden",
			["source"] = "Kil'jaeden",
			["encounterID"] = 2051,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117269,
		},
		[171385] = {
			["source"] = "Unstable Earth Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 80382,
		},
		[378420] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Displaced Earth",
			["npcID"] = 187393,
		},
		[33417] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stormwind Mage",
			["npcID"] = 18949,
		},
		[194112] = {
			["encounterName"] = "God-King Skovald",
			["source"] = "God-King Skovald",
			["encounterID"] = 1808,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 95675,
		},
		[387631] = {
			["source"] = "Zumakh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194624,
		},
		[171852] = {
			["source"] = "Sargerei Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 92575,
		},
		[169038] = {
			["source"] = "Corrupting Fiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 93024,
		},
		[254919] = {
			["encounterName"] = "Kin'garoth",
			["source"] = "Kin'garoth",
			["encounterID"] = 2088,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122578,
		},
		[387613] = {
			["source"] = "Ukhel Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195842,
		},
		[225588] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twirhp",
			["npcID"] = 112386,
		},
		[257619] = {
			["encounterName"] = "Argus the Unmaker",
			["source"] = "Eonar",
			["npcID"] = 126267,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2092,
		},
		[379406] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Lavabearer",
			["npcID"] = 189472,
		},
		[197700] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Temple Priestess",
			["npcID"] = 100450,
		},
		[9734] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Merciless Gladiator Saifu",
			["npcID"] = 112406,
		},
		[229838] = {
			["source"] = "Archmage Xylem",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 115636,
		},
		[377490] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thunderspine Crasher",
			["npcID"] = 191057,
		},
		[387950] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Caldera Stomper",
			["npcID"] = 187919,
		},
		[369813] = {
			["source"] = "Summoned Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193288,
		},
		[373618] = {
			["source"] = "Hypnosis Bat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190174,
		},
		[395819] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Scaleripper",
			["npcID"] = 187602,
		},
		[39054] = {
			["source"] = "Felborne Torturer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116225,
		},
		[384538] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Memory of a Tuskarr Hero",
			["npcID"] = 194731,
		},
		[209477] = {
			["source"] = "Mana Wyrm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 105703,
		},
		[393797] = {
			["source"] = "Charfang",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187751,
		},
		[238648] = {
			["source"] = "Felsiege Infernal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120707,
		},
		[388976] = {
			["source"] = "Arcane Ravager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196671,
		},
		[391195] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bisquius",
			["npcID"] = 197557,
		},
		[236494] = {
			["encounterName"] = "Fallen Avatar",
			["source"] = "Fallen Avatar",
			["encounterID"] = 2038,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116939,
		},
		[375870] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[396520] = {
			["source"] = "Rumbling Proto-Dragon",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187212,
		},
		[168041] = {
			["encounterName"] = "Ancient Protectors",
			["source"] = "Earthshaper Telu",
			["npcID"] = 83893,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1757,
		},
		[169841] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Addled Arcanomancer",
			["npcID"] = 84990,
		},
		[59183] = {
			["source"] = "Unbound Firestorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28584,
		},
		[375871] = {
			["encounterName"] = "Broodkeeper Diurna",
			["source"] = "Broodkeeper Diurna",
			["encounterID"] = 2614,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190245,
		},
		[199772] = {
			["source"] = "Valarjar Champion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97087,
		},
		[391026] = {
			["source"] = "Liskanoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193533,
		},
		[387955] = {
			["source"] = "Ethereal Restorer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 196203,
		},
		[393811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Maiden of Diligence",
			["npcID"] = 192718,
		},
		[157049] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grom'tash the Destructor",
			["npcID"] = 77889,
		},
		[35913] = {
			["source"] = "Sargerei Felbinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 90286,
		},
		[375671] = {
			["source"] = "Primal Watercaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190995,
		},
		[372600] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["encounterID"] = 2557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 184124,
		},
		[395811] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Qalashi Bonebreaker",
			["npcID"] = 187907,
		},
		[393432] = {
			["source"] = "Refti Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190340,
		},
		[246075] = {
			["encounterName"] = "Portal Keeper Hasabel",
			["source"] = "Portal Keeper Hasabel",
			["npcID"] = 122104,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2064,
		},
		[405361] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[242494] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Soul",
			["npcID"] = 121498,
		},
		[164834] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Everbloom Naturalist",
			["npcID"] = 81819,
		},
		[169878] = {
			["encounterName"] = "Yalnu",
			["source"] = "Vicious Mandragora",
			["npcID"] = 84399,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1756,
		},
		[396600] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Karkidan",
			["npcID"] = 193725,
		},
		[385075] = {
			["encounterName"] = "Umbrelskul",
			["source"] = "Umbrelskul",
			["encounterID"] = 2584,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186738,
		},
		[382102] = {
			["source"] = "Rebel Conjurer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195063,
		},
		[383864] = {
			["source"] = "Baron Ashflow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192274,
		},
		[233426] = {
			["encounterName"] = "Demonic Inquisition",
			["source"] = "Atrigan",
			["encounterID"] = 2048,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116689,
		},
		[152183] = {
			["source"] = "Slagna",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75406,
		},
		[59346] = {
			["source"] = "Anub'ar Crusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28922,
		},
		[387960] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Caldera Stomper",
			["npcID"] = 187919,
		},
		[56837] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[174574] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Iron Blood Mage",
			["npcID"] = 87229,
		},
		[196194] = {
			["source"] = "Steeljaw Grizzly",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 96677,
		},
		[383866] = {
			["source"] = "Primal Fire Elemental",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186550,
		},
		[272167] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bilescourge",
			["npcID"] = 136404,
		},
		[381516] = {
			["encounterName"] = "Kyrakka and Erkhart Stormvein",
			["source"] = "Erkhart Stormvein",
			["encounterID"] = 2623,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190485,
		},
		[254926] = {
			["encounterName"] = "Kin'garoth",
			["source"] = "Kin'garoth",
			["encounterID"] = 2088,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122578,
		},
		[241049] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lylth the Silent",
			["npcID"] = 120808,
		},
		[405366] = {
			["source"] = "Lady Shaz'ra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200885,
		},
		[377154] = {
			["source"] = "Alpha Skulking Scythid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197377,
		},
		[244689] = {
			["encounterName"] = "Portal Keeper Hasabel",
			["source"] = "Portal Keeper Hasabel",
			["encounterID"] = 2064,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 122104,
		},
		[205361] = {
			["encounterName"] = "Krosus",
			["source"] = "Krosus",
			["encounterID"] = 1842,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 101002,
		},
		[210261] = {
			["source"] = "Duskwatch Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104251,
		},
		[385916] = {
			["encounterName"] = "Granyth",
			["source"] = "Granyth",
			["encounterID"] = 2637,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186616,
		},
		[193502] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Glayvianna Soulrender",
			["npcID"] = 98177,
		},
		[371584] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brinetooth Wavecrasher",
			["npcID"] = 188115,
		},
		[161509] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mandragora Lifedrinker",
			["npcID"] = 80699,
		},
		[199663] = {
			["source"] = "Ghostly Councilor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 98370,
		},
		[372296] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Irontorch Commander",
			["npcID"] = 189466,
		},
		[387965] = {
			["source"] = "Time-Lost Bladewing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187232,
		},
		[157043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Ritualist",
			["npcID"] = 77130,
		},
		[385959] = {
			["source"] = "Defense Orb",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195184,
		},
		[390210] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Monstrous Decay",
			["npcID"] = 197130,
		},
		[169445] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twisted Abomination",
			["npcID"] = 84767,
		},
		[397888] = {
			["source"] = "Fallen Waterspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 200126,
		},
		[38618] = {
			["encounterName"] = "Frozen Commander",
			["source"] = "Commander Kolurg",
			["npcID"] = 26798,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 519,
		},
		[190315] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nathanos Blightcaller",
			["npcID"] = 95852,
		},
		[383872] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Destructive Fire Elemental",
			["npcID"] = 194179,
		},
		[376706] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["npcID"] = 190294,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2580,
		},
		[152954] = {
			["encounterName"] = "Vigilant Kaathar",
			["source"] = "Vigilant Kaathar",
			["npcID"] = 75839,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1686,
		},
		[246739] = {
			["encounterName"] = "The Coven of Shivarra",
			["source"] = "Torment of Golganneth",
			["npcID"] = 124164,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2073,
		},
		[393804] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Whirglgurgl",
			["npcID"] = 188860,
		},
		[386015] = {
			["source"] = "Primalist Stormspeaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194894,
		},
		[398206] = {
			["source"] = "Exhumed Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75979,
		},
		[377435] = {
			["source"] = "Time-Lost Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187265,
		},
		[396159] = {
			["source"] = "Worldcarver Wurmling",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187366,
		},
		[375384] = {
			["source"] = "Primalist Earthshaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190371,
		},
		[377732] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Refti Custodian",
			["npcID"] = 184319,
		},
		[375385] = {
			["source"] = "Primalbound Water Spirit",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190739,
		},
		[153067] = {
			["encounterName"] = "Nhallish",
			["source"] = "Nhallish",
			["encounterID"] = 1688,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75829,
		},
		[384899] = {
			["source"] = "Rotbow Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186208,
		},
		[178661] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Botani Lifebinder",
			["npcID"] = 84313,
		},
		[244693] = {
			["encounterName"] = "Aggramar",
			["source"] = "Aggramar",
			["npcID"] = 121975,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2063,
		},
		[385310] = {
			["source"] = "Primalist Shockcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 195119,
		},
		[204767] = {
			["encounterName"] = "Dragons of Nightmare",
			["source"] = "Shade of Taerar",
			["encounterID"] = 1854,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 103145,
		},
		[59603] = {
			["source"] = "Dragonflayer Heartsplitter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 24071,
		},
		[384095] = {
			["source"] = "Ohuna Companion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 194254,
		},
		[169448] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Improved Iron Trap",
			["npcID"] = 84773,
		},
		[231385] = {
			["source"] = "Dawnguard Bloodknight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 114880,
		},
		[68872] = {
			["encounterName"] = "Bronjahm",
			["source"] = "Bronjahm",
			["encounterID"] = 2006,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36497,
		},
		[17290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[241374] = {
			["source"] = "Defensive Countermeasure",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120449,
		},
		[151545] = {
			["source"] = "Bloodmaul Warder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 75210,
		},
		[170111] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Spawn",
			["npcID"] = 85303,
		},
		[373392] = {
			["source"] = "Nokhud Longbow",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 192789,
		},
		[169449] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deadly Iron Trap",
			["npcID"] = 84774,
		},
		[375919] = {
			["source"] = "Primal Scythid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191104,
		},
		[52238] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 1985,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28587,
		},
		[369781] = {
			["encounterName"] = "The Lost Dwarves",
			["source"] = "Eric \"The Swift\"",
			["npcID"] = 184582,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2555,
		},
		[367500] = {
			["source"] = "Blightfur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 193178,
		},
		[236131] = {
			["encounterName"] = "The Desolate Host",
			["source"] = "Soul Queen Dejahna",
			["encounterID"] = 2054,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 118462,
		},
		[59147] = {
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[222571] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felfire Fiend",
			["npcID"] = 86531,
		},
		[157165] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sargerei Zealot",
			["npcID"] = 77132,
		},
		[153485] = {
			["source"] = "Carrion Worm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 76057,
		},
		[240273] = {
			["source"] = "Deep Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120477,
		},
		[211571] = {
			["source"] = "Felsworn Chaos-Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 113012,
		},
		[106841] = {
			["encounterName"] = "Liu Flameheart",
			["source"] = "Liu Flameheart",
			["encounterID"] = 1416,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 56732,
		},
		[170120] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Void Fragment",
			["npcID"] = 85034,
		},
		[243300] = {
			["source"] = "Shadow Council Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117776,
		},
		[393336] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Penumbrus",
			["npcID"] = 189289,
		},
		[367503] = {
			["source"] = "Decay Speaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 186191,
		},
		[231532] = {
			["source"] = "Pyrestar Demolisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 114845,
		},
		[369942] = {
			["source"] = "Blazing Dreadsquall",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 191901,
		},
		[391050] = {
			["source"] = "High Channeler Ryvati",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197535,
		},
		[150677] = {
			["encounterName"] = "Gug'rokk",
			["source"] = "Gug'rokk",
			["npcID"] = 74790,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1654,
		},
		[372623] = {
			["encounterName"] = "Sentinel Talondras",
			["source"] = "Sentinel Talondras",
			["npcID"] = 184124,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 2557,
		},
		[209378] = {
			["source"] = "Imacu'tya",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 104275,
		},
		[55077] = {
			["source"] = "Savage Worg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29735,
		},
		[392075] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arkhuu",
			["npcID"] = 195300,
		},
		[224375] = {
			["encounterName"] = "Talixae Flamewreath",
			["source"] = "Infernal Imp",
			["encounterID"] = 1869,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112668,
		},
		[202295] = {
			["source"] = "Felbound Pyromage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 120698,
		},
		[396367] = {
			["source"] = "Decayed Elder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197142,
		},
		[371358] = {
			["source"] = "Unstable Curator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 187154,
		},
		[239736] = {
			["source"] = "Prophet Velen",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 117042,
		},
		[225404] = {
			["source"] = "Trained Shadescale",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 112804,
		},
		[386722] = {
			["source"] = "Tempest Veteran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190204,
		},
		[396447] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vicious Rimefang",
			["npcID"] = 194120,
		},
		[224387] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sidereal Familiar",
			["npcID"] = 112718,
		},
		[172704] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Infested Vinewarden",
			["npcID"] = 80698,
		},
		[239401] = {
			["encounterName"] = "Demonic Inquisition",
			["source"] = "Belac",
			["encounterID"] = 2048,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 116691,
		},
		[195232] = {
			["source"] = "Hatecoil Wavebinder",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 97170,
		},
		[221153] = {
			["source"] = "Pulsauron",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 111072,
		},
		[377033] = {
			["source"] = "Alpha Skulking Scythid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197377,
		},
		[396674] = {
			["source"] = "Alpha Skulking Scythid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 197377,
		},
		[382261] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Taranthiza",
			["npcID"] = 196970,
		},
		[376723] = {
			["encounterName"] = "Balakar Khan",
			["source"] = "Nokhud Stormcaster",
			["encounterID"] = 2580,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 190294,
		},
		[171764] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warspear Magus",
			["npcID"] = 86933,
		},
		[69131] = {
			["source"] = "Soulguard Animator",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 36516,
		},
		[369925] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Blazing Dreadsquall",
			["npcID"] = 191901,
		},
	},
}
